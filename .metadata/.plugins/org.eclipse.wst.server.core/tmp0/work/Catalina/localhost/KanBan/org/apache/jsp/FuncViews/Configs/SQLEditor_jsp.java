/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2016-01-29 05:43:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.FuncViews.Configs;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class SQLEditor_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/FuncViews/Configs/./../../dcitag/dcitag.tld", Long.valueOf(1452650348276L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=9\">\r\n");
      out.write("<title>");
      if (_jspx_meth_dcitag_005freqParam_005f0(_jspx_page_context))
        return;
      out.write("</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"./../../codemirror/css/codemirror.css\" />\r\n");
      out.write("<style>\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\" src=\"./../../codemirror/mode/sql.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" charset=\"UTF-8\">\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\" charset=\"UTF-8\">\r\n");
      out.write("var t1,t2,t3,t4;\r\n");
      out.write("\tExt.onReady(function() {\r\n");
      out.write("\t\tvar localKeys = [ \"system_build\", \"save_msg\", \"delete_msg\", \"delete_fail\", \"delete_success\", \"delete_result_title\", \"delete_fail\", \"save_fail\", \"save_success\",\r\n");
      out.write("\t\t\t\t\"save_result_title\", \"save_fail\", \"upload_icon\", \"delete_confirm_title\", \"delete_confirm_msg\", \"sql_id\", \"sql_name\", \"group_by\", \"order_by\", \"auto_refresh\",\r\n");
      out.write("\t\t\t\t\"refresh_gap\", \"use_marquee\", \"marquee_refresh_gap\", \"col_id\", \"selected\", \"conn_id\", \"conn_name\", \"conn_list\", \"sql_id\", \"col_id\", \"col_lang_key\", \"col_type\",\r\n");
      out.write("\t\t\t\t\"col_ori_name\", \"col_width\", \"col_seq\", \"visible\", \"is_popup\", \"popup_title\", \"config_value\", \"col_name_cht\", \"col_name_chs\", \"move\", \"still\", \"marquee_location\",\r\n");
      out.write("\t\t\t\t\"marquee_type\", \"display_top\", \"display_bottom\", \"use_popup\", \"popup_dir\", \"popup_refresh_gap\", \"legend\", \"lights\", \"icon_id\", \"icon_name\", \"icon_map_key\",\r\n");
      out.write("\t\t\t\t\"lenged_value\", \"target_sql_name\", \"target_col_name\", \"seq\", \"col_relation\", \"cross_type\", \"join_key_set1\", \"join_key_set2\", \"toolbar_query_title\",\r\n");
      out.write("\t\t\t\t\"info_msg_title\", \"col_create_fail\", \"col_create_success\", \"sql_check_success\", \"sql_check_fail\", \"sql_col_edit\", \"confirm_title\", \"data_lose_warning\", \"ok\",\r\n");
      out.write("\t\t\t\t\"cancel\", \"clear\", \"relation_config\", \"copy\", \"build_column\", \"check\", \"copy_success\", \"copy_fail\", \"copy_kanban_confirm\", \"cross_db_setup\", \"legend_value\",\r\n");
      out.write("\t\t\t\t\"kanban_relation_exist\", \"not_allow_blank\", \"need_end_with_where\", \"system_error\", \"no_conn_data\", \"load_def_format\", \"load_def_fail\", \"load_def_success\",\r\n");
      out.write("\t\t\t\t\"load_def_result_title\", \"load_def_confirm_title\", \"load_def_confirm_msg\", \"illegal_keyword\", \"select_all\", \"no_sql_text\", \"full_sql\", \"sql_added_msg\",\r\n");
      out.write("\t\t\t\t\"edit_sql_win\", \"input_sql_name\", \"just_use_in_edit\", \"just_use_in_view\", \"todo_query\", \"create_link\", \"create_link_fail\", \"data_never_load\", \"calc_rule\",\r\n");
      out.write("\t\t\t\t\"sort_column\", \"user_id\", \"cht\", \"chs\", \"join_keys\", \"join_data_lose_warning\", \"cross_seq\", \"no_data_selected\", \"lost_join_key\", \"cus_format\" ];\r\n");
      out.write("\t\tvar keys = localKeys.concat(globeKeys);\r\n");
      out.write("\t\tvar uid = '");
      if (_jspx_meth_dcitag_005freqParam_005f1(_jspx_page_context))
        return;
      out.write("';\r\n");
      out.write("\t\tthis.dcistore.setMultiLangKeys(keys);\r\n");
      out.write("\t\tthis.dcistore.setUid(uid);\r\n");
      out.write("\t\tthis.dcistore.load(function(records) {\r\n");
      out.write("\t\t\tif (records != null && records.length == 1) {\r\n");
      out.write("\t\t\t\tvar langs = buildMultiLangObjct(keys, records[0].get('langValues'));\r\n");
      out.write("\t\t\t\tshowPage(records[0].get('dcitagValue'), langs, '");
      if (_jspx_meth_dcitag_005freqParam_005f2(_jspx_page_context))
        return;
      out.write("', uid, records[0].get('langType'));\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tfunction showPage(postvalue, langs, recvAuth, uid, langtp) {\r\n");
      out.write("\t\t\tvar canEdit = recvAuth == \"1\";\r\n");
      out.write("\t\t\tvar column_type_combo = Ext.create('DCI.Customer.ComboBox', {\r\n");
      out.write("\t\t\t\twidth : '100%',\r\n");
      out.write("\t\t\t\tlabelWidth : 0,\r\n");
      out.write("\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\tchange : function(comp, newValue, oldValue, eOpts) {\r\n");
      out.write("\t\t\t\t\t\tif (newValue == \"IMAGELINK\" || newValue == \"CHAR\") {\r\n");
      out.write("\t\t\t\t\t\t\tif (comp.up() != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (comp.up().up() != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (comp.up().up().getSelectionModel() != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (comp.up().up().getSelectionModel().getSelection()[0] != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tcomp.up().up().getSelectionModel().getSelection()[0].set('config_value', \"\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar date_format_combo = Ext.create('DCI.Customer.ComboBox', {\r\n");
      out.write("\t\t\t\twidth : '100%',\r\n");
      out.write("\t\t\t\tlabelWidth : 0\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar connData = Ext.create('DCI.Customer.Hidden', {\r\n");
      out.write("\t\t\t\tname : 'conndatas',\r\n");
      out.write("\t\t\t\tvalue : '',\r\n");
      out.write("\t\t\t\ttriggerModi : false,\r\n");
      out.write("\t\t\t\tsetSelectedValue : function(value) {\r\n");
      out.write("\t\t\t\t\tthis.triggerModi = true;\r\n");
      out.write("\t\t\t\t\tthis.setValue(value);\r\n");
      out.write("\t\t\t\t\tthis.triggerModi = false;\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tloadDefault : function() {\r\n");
      out.write("\t\t\t\t\tthis.setValue(this.defaultvalue);\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\tchange : function(hidden, newValue, oldValue, eOpts) {\r\n");
      out.write("\t\t\t\t\t\tif (!this.triggerModi && openWinBtn != null && openWinBtn.gridStore != null) {\r\n");
      out.write("\t\t\t\t\t\t\tvar stroe = openWinBtn.gridStore;\r\n");
      out.write("\t\t\t\t\t\t\tif (newValue == null && newValue == '') {\r\n");
      out.write("\t\t\t\t\t\t\t\tfor ( var i = 0; i < stroe.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tstroe.getAt(i).set('selected', false);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tif (connGrid != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tconnGrid.getStore().removeAll();\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar tmp = [];\r\n");
      out.write("\t\t\t\t\t\t\t\tvar datas = [];\r\n");
      out.write("\t\t\t\t\t\t\t\ttmp = newValue.split(';');\r\n");
      out.write("\t\t\t\t\t\t\t\tfor ( var i = 0; i < stroe.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tstroe.getAt(i).set('selected', false);\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfor ( var j = 0; j < tmp.length; j++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (stroe.getAt(i).get(\"conn_id\") == tmp[j]) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstroe.getAt(i).set('selected', true);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tdatas.push({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tconn_name : stroe.getAt(i).get(\"conn_name\"),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tconn_id : stroe.getAt(i).get(\"conn_id\")\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttmp.splice(j, 1);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\tconnGrid.getStore().loadData(datas);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar sql_cross = Ext.create('DCI.Customer.Hidden', {\r\n");
      out.write("\t\t\t\tname : 'sql_cross',\r\n");
      out.write("\t\t\t\tvalue : '',\r\n");
      out.write("\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\tchange : function(hidden, newValue, oldValue, eOpts) {\r\n");
      out.write("\t\t\t\t\t\t/* if (crossOpenWinBtn != null) {\r\n");
      out.write("\t\t\t\t\t\t\tcrossOpenWinBtn.crossInfo = newValue;\r\n");
      out.write("\t\t\t\t\t\t} */\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\tif (newValue == null || newValue == '') {\r\n");
      out.write("\t\t\t\t\t\t\tif (crossGridStore != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\tcrossGridStore.removeAll();\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\tif (oriCrossGridStore != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\toriCrossGridStore.removeAll();\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar legend_lang = Ext.create('DCI.Customer.Hidden', {\r\n");
      out.write("\t\t\t\tname : 'legend_lang',\r\n");
      out.write("\t\t\t\tvalue : '',\r\n");
      out.write("\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\tchange : function(hidden, newValue, oldValue, eOpts) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar sqleditor = Ext.create('DCI.Customer.SqlEditor', {\r\n");
      out.write("\t\t\t\tfieldLabel : 'SQL',\r\n");
      out.write("\t\t\t\tlabelWidth : 40,\r\n");
      out.write("\t\t\t\theight : 230,\r\n");
      out.write("\t\t\t\twidth : 815,\r\n");
      out.write("\t\t\t\tname : 'sql_context',\r\n");
      out.write("\t\t\t\tx : 0,\r\n");
      out.write("\t\t\t\ty : 100\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar connGrid = Ext.create('Ext.grid.Panel', {\r\n");
      out.write("\t\t\t\ttitle : langs.conn_list,\r\n");
      out.write("\t\t\t\thideHeaders : true,\r\n");
      out.write("\t\t\t\tstore : Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\tfields : [ {\r\n");
      out.write("\t\t\t\t\t\tname : 'conn_name',\r\n");
      out.write("\t\t\t\t\t\ttype : 'string'\r\n");
      out.write("\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\tname : 'conn_id',\r\n");
      out.write("\t\t\t\t\t\ttype : 'string'\r\n");
      out.write("\t\t\t\t\t} ],\r\n");
      out.write("\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\ttype : 'memory',\r\n");
      out.write("\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\ttype : 'json'\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}),\r\n");
      out.write("\t\t\t\tcolumns : [ {\r\n");
      out.write("\t\t\t\t\ttext : langs.conn_name,\r\n");
      out.write("\t\t\t\t\tdataIndex : 'conn_name'\r\n");
      out.write("\t\t\t\t} ],\r\n");
      out.write("\t\t\t\tdisableSelection : true,\r\n");
      out.write("\t\t\t\tforceFit : true,\r\n");
      out.write("\t\t\t\theight : 230,\r\n");
      out.write("\t\t\t\twidth : 150,\r\n");
      out.write("\t\t\t\tx : 820,\r\n");
      out.write("\t\t\t\ty : 100\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar openWinBtn = Ext.create('DCI.Customer.OpenWinTrigger', {\r\n");
      out.write("\t\t\t\tx : 970,\r\n");
      out.write("\t\t\t\ty : 100,\r\n");
      out.write("\t\t\t\tcls : 'search-toolbar',\r\n");
      out.write("\t\t\t\twidth : 30,\r\n");
      out.write("\t\t\t\theight : 30,\r\n");
      out.write("\t\t\t\ttargetComp : connGrid,\r\n");
      out.write("\t\t\t\tactionurl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\tbuttonID : 'connBtn',\r\n");
      out.write("\t\t\t\tpvalue : postvalue,\r\n");
      out.write("\t\t\t\tpuid : uid,\r\n");
      out.write("\t\t\t\tlangsObj : langs,\r\n");
      out.write("\t\t\t\twinHeight : 365,\r\n");
      out.write("\t\t\t\twinWidth : 450,\r\n");
      out.write("\t\t\t\tshowSelectAll : true,\r\n");
      out.write("\t\t\t\tdisplayCols : [ {\r\n");
      out.write("\t\t\t\t\txtype : 'checkcolumn',\r\n");
      out.write("\t\t\t\t\t//text : langs.sql_id,\r\n");
      out.write("\t\t\t\t\tdataIndex : 'selected',\r\n");
      out.write("\t\t\t\t\twidth : 100,\r\n");
      out.write("\t\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\t\tcheckchange : function(comp, rowIndex, checked, eOpts) {\r\n");
      out.write("\t\t\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\t\t\tvar sa = me.up('panel').up('panel').items.get(0).items.get(3);\r\n");
      out.write("\t\t\t\t\t\t\tif (checked) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar all = true;\r\n");
      out.write("\t\t\t\t\t\t\t\tvar store = me.up('panel').getStore();\r\n");
      out.write("\t\t\t\t\t\t\t\tif (store != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < store.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (!store.getAt(i).get(\"selected\") || store.getAt(i).get(\"selected\") == '') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tall = false;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (all) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tsa.setChecked(1);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tsa.setChecked(0);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\ttext : langs.conn_id,\r\n");
      out.write("\t\t\t\t\tdataIndex : 'conn_id',\r\n");
      out.write("\t\t\t\t\twidth : 200\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\ttext : langs.conn_name,\r\n");
      out.write("\t\t\t\t\tdataIndex : 'conn_name',\r\n");
      out.write("\t\t\t\t\twidth : 200\r\n");
      out.write("\t\t\t\t} ],\r\n");
      out.write("\t\t\t\tselectAllEvent : function(comp, newValue, oldValue, eOpts) {\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tfor ( var i = 0; i < me.gridStore.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\tme.gridStore.getAt(i).set('selected', newValue);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tisAll : function() {\r\n");
      out.write("\t\t\t\t\tvar result = 0;\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\tvar all = true;\r\n");
      out.write("\t\t\t\t\tvar store = me.gridStore;\r\n");
      out.write("\t\t\t\t\tif (store != null) {\r\n");
      out.write("\t\t\t\t\t\tfor ( var i = 0; i < store.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\tif (!store.getAt(i).get(\"selected\") || store.getAt(i).get(\"selected\") == '') {\r\n");
      out.write("\t\t\t\t\t\t\t\tall = false;\r\n");
      out.write("\t\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tif (all) {\r\n");
      out.write("\t\t\t\t\t\t\tresult = 1;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\treturn result;\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tgridStore : Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\tfields : [ 'selected', 'conn_id', 'conn_name' ],\r\n");
      out.write("\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\troot : 'items'\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\taction : 'openwin',\r\n");
      out.write("\t\t\t\t\t\t\tfilter : ''\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}),\r\n");
      out.write("\t\t\t\tsetSelectedData : function(values) {\r\n");
      out.write("\t\t\t\t\tif (values != null) {\r\n");
      out.write("\t\t\t\t\t\tvar gstore = this.targetComp.getStore();\r\n");
      out.write("\t\t\t\t\t\tif (gstore != null) {\r\n");
      out.write("\t\t\t\t\t\t\tvar datas = [];\r\n");
      out.write("\t\t\t\t\t\t\tvar dataStr = \"\";\r\n");
      out.write("\t\t\t\t\t\t\tvar cnt = 0;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tfor ( var i = 0; i < values.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (values.getAt(i).get(\"selected\") && values.getAt(i).get(\"selected\") != '') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (cnt == 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tdataStr = values.getAt(i).get(\"conn_id\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcnt++;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tdataStr += ';' + values.getAt(i).get(\"conn_id\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\tdatas.push({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tconn_id : values.getAt(i).get(\"conn_id\"),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tconn_name : values.getAt(i).get(\"conn_name\")\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\tgstore.removeAll();\r\n");
      out.write("\t\t\t\t\t\t\tif (connData != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\tconnData.setSelectedValue(\"\");\r\n");
      out.write("\t\t\t\t\t\t\t\tconnData.setSelectedValue(dataStr);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tgstore.loadData(datas);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tloadDefault : function() {\r\n");
      out.write("\t\t\t\t\tif (this.targetComp != null) {\r\n");
      out.write("\t\t\t\t\t\tvar gstore = this.targetComp.getStore();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\tif (gstore != null) {\r\n");
      out.write("\t\t\t\t\t\t\tgstore.removeAll();\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tsetInitObjs : function(record) {\r\n");
      out.write("\t\t\t\t\tthis.filterComboRecord = record;\r\n");
      out.write("\t\t\t\t\tif (this.gridStore != null) {\r\n");
      out.write("\t\t\t\t\t\tthis.gridStore.load();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar legendTextBox = Ext.create('DCI.Customer.TextField', {\r\n");
      out.write("\t\t\t\tfieldLabel : langs.legend,\r\n");
      out.write("\t\t\t\twidth : 420,\r\n");
      out.write("\t\t\t\temptyText : '',\r\n");
      out.write("\t\t\t\tname : 'legend',\r\n");
      out.write("\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\tcanEdit : false,\r\n");
      out.write("\t\t\t\tx : 550,\r\n");
      out.write("\t\t\t\ty : 70\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar legendOpenWinBtn = Ext.create('DCI.Customer.EmptyButton', {\r\n");
      out.write("\t\t\t\tx : 970,\r\n");
      out.write("\t\t\t\ty : 70,\r\n");
      out.write("\t\t\t\tcls : 'search-toolbar',\r\n");
      out.write("\t\t\t\twidth : 30,\r\n");
      out.write("\t\t\t\theight : 30,\r\n");
      out.write("\t\t\t\ttargetComp : legendTextBox,\r\n");
      out.write("\t\t\t\tvalueComp : legend_lang,\r\n");
      out.write("\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\tvar gStore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\tfields : [ 'light_id', 'icon_id', 'icon_name', 'icon_map_key', 'legend_value', 'sort_id', 'legend_value_chs' ],\r\n");
      out.write("\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\troot : 'items'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\taction : 'legendopenwin'\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar win = Ext.create('Ext.window.Window', {\r\n");
      out.write("\t\t\t\t\t\ttitle : langs.toolbar_query_title,\r\n");
      out.write("\t\t\t\t\t\twidth : 950,\r\n");
      out.write("\t\t\t\t\t\theight : 400,\r\n");
      out.write("\t\t\t\t\t\tminWidth : 950,\r\n");
      out.write("\t\t\t\t\t\tminHeight : 400,\r\n");
      out.write("\t\t\t\t\t\tlayout : 'fit',\r\n");
      out.write("\t\t\t\t\t\tplain : true,\r\n");
      out.write("\t\t\t\t\t\tmodal : true,\r\n");
      out.write("\t\t\t\t\t\titems : [ {\r\n");
      out.write("\t\t\t\t\t\t\txtype : 'grid',\r\n");
      out.write("\t\t\t\t\t\t\trenderer : \"component\",\r\n");
      out.write("\t\t\t\t\t\t\tstripeRows : true,\r\n");
      out.write("\t\t\t\t\t\t\tautoScroll : true,\r\n");
      out.write("\t\t\t\t\t\t\tloadMask : true,\r\n");
      out.write("\t\t\t\t\t\t\tenableTextSelection : true,\r\n");
      out.write("\t\t\t\t\t\t\tviewConfig : {\r\n");
      out.write("\t\t\t\t\t\t\t\tforceFit : false,\r\n");
      out.write("\t\t\t\t\t\t\t\tautoLoad : false\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\tcolumns : [ {\r\n");
      out.write("\t\t\t\t\t\t\t\txtype : 'dcilightcolumn',\r\n");
      out.write("\t\t\t\t\t\t\t\ttext : langs.lights,\r\n");
      out.write("\t\t\t\t\t\t\t\tdataIndex : 'light_id',\r\n");
      out.write("\t\t\t\t\t\t\t\twidth : 80\r\n");
      out.write("\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\ttext : langs.icon_id,\r\n");
      out.write("\t\t\t\t\t\t\t\tdataIndex : 'icon_id',\r\n");
      out.write("\t\t\t\t\t\t\t\twidth : 80\r\n");
      out.write("\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\ttext : langs.icon_name,\r\n");
      out.write("\t\t\t\t\t\t\t\tdataIndex : 'icon_name',\r\n");
      out.write("\t\t\t\t\t\t\t\twidth : 100\r\n");
      out.write("\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\ttext : langs.icon_map_key,\r\n");
      out.write("\t\t\t\t\t\t\t\tdataIndex : 'icon_map_key',\r\n");
      out.write("\t\t\t\t\t\t\t\twidth : 80\r\n");
      out.write("\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\ttext : langs.legend_value + \"(\" + langs.cht + \")\",\r\n");
      out.write("\t\t\t\t\t\t\t\tdataIndex : 'legend_value',\r\n");
      out.write("\t\t\t\t\t\t\t\twidth : 250,\r\n");
      out.write("\t\t\t\t\t\t\t\teditor : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tallowBlank : true\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\ttext : langs.legend_value + \"(\" + langs.chs + \")\",\r\n");
      out.write("\t\t\t\t\t\t\t\tdataIndex : 'legend_value_chs',\r\n");
      out.write("\t\t\t\t\t\t\t\twidth : 250,\r\n");
      out.write("\t\t\t\t\t\t\t\teditor : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tallowBlank : true\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\ttext : langs.sort_column,\r\n");
      out.write("\t\t\t\t\t\t\t\tdataIndex : 'sort_id',\r\n");
      out.write("\t\t\t\t\t\t\t\twidth : 70,\r\n");
      out.write("\t\t\t\t\t\t\t\teditor : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tallowBlank : false\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t} ],\r\n");
      out.write("\t\t\t\t\t\t\tstore : gStore,\r\n");
      out.write("\t\t\t\t\t\t\tplugins : [ Ext.create('Ext.grid.plugin.CellEditing', {\r\n");
      out.write("\t\t\t\t\t\t\t\tclicksToEdit : 1,\r\n");
      out.write("\t\t\t\t\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tedit : function(editor, e) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tgStore.sort('sort_id', 'ASC');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}) ]\r\n");
      out.write("\t\t\t\t\t\t} ],\r\n");
      out.write("\t\t\t\t\t\tbuttons : [\r\n");
      out.write("\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttext : langs.ok,\r\n");
      out.write("\t\t\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar legendstr = null;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar legendvalue = null;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar lValue = null;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar tmpvalue = null;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (this.up('.window').items.get(0).plugins[0] != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tthis.up('.window').items.get(0).plugins[0].completeEdit();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < gStore.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttmpvalue = gStore.getAt(i).get(\"legend_value\") + gStore.getAt(i).get(\"legend_value_chs\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tif (langtp == 'CHT') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tlValue = gStore.getAt(i).get(\"legend_value\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tlValue = gStore.getAt(i).get(\"legend_value_chs\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tif (lValue != null && lValue != \"\" && lValue.trim().length > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tif (legendstr == null || legendstr.indexOf(\"=\") == -1) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tlegendstr = gStore.getAt(i).get(\"icon_id\") + \"=\" + lValue;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tlegendstr += \";\" + gStore.getAt(i).get(\"icon_id\") + \"=\" + lValue;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tif (tmpvalue != null && tmpvalue != \"\" && tmpvalue.trim().length > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tif (legendvalue == null || legendvalue.indexOf(\"=\") == -1) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tlegendvalue = gStore.getAt(i).get(\"icon_id\") + \"=\" + gStore.getAt(i).get(\"legend_value_chs\") + \"^\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ gStore.getAt(i).get(\"legend_value\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tlegendvalue += \";\" + gStore.getAt(i).get(\"icon_id\") + \"=\" + gStore.getAt(i).get(\"legend_value_chs\") + \"^\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ gStore.getAt(i).get(\"legend_value\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tme.targetComp.setValue(legendstr);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tme.valueComp.setValue(legendvalue);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tthis.up('.window').close();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttext : langs.cancel,\r\n");
      out.write("\t\t\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tthis.up('.window').close();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tgStore.load(function(record) {\r\n");
      out.write("\t\t\t\t\t\tif (me.valueComp != null) {\r\n");
      out.write("\t\t\t\t\t\t\tvar tmp = me.valueComp.getValue();\r\n");
      out.write("\t\t\t\t\t\t\tif (tmp != null && tmp != \"\" && tmp.trim().length > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar arr = tmp.split(';');\r\n");
      out.write("\t\t\t\t\t\t\t\tvar item = null;\r\n");
      out.write("\t\t\t\t\t\t\t\tvar id = null;\r\n");
      out.write("\t\t\t\t\t\t\t\tvar iconLangs = null;\r\n");
      out.write("\t\t\t\t\t\t\t\t//var base = 0;\r\n");
      out.write("\t\t\t\t\t\t\t\tvar cnt = arr.length;\r\n");
      out.write("\t\t\t\t\t\t\t\tfor ( var i = 0; i < record.length; i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tid = record[i].get(\"icon_id\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfor ( var j = 0; j < arr.length; j++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\titem = arr[j].split('=');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (item[0] == id) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ticonLangs = item[1].split('^');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tif (iconLangs[0].indexOf('legend_' + id) == -1) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\trecord[i].set(\"legend_value_chs\", iconLangs[0]);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\trecord[i].set(\"legend_value_chs\", \"\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tif (iconLangs[1].indexOf('legend_' + id) == -1) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\trecord[i].set(\"legend_value\", iconLangs[1]);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\trecord[i].set(\"legend_value\", \"\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t//record[i].set(\"legend_value_chs\", item[1].split('^')[0]);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\trecord[i].set(\"sort_id\", j + 1);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t//base++;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t//arr.splice(j, 1);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (record[i].get(\"sort_id\") > 10000) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcnt++;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\trecord[i].set(\"sort_id\", cnt * 10);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\trecord[i].set(\"sort_id\", record[i].get(\"sort_id\") * 10);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tfor ( var i = 0; i < record.length; i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\trecord[i].set(\"sort_id\", (i + 1) * 10);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\tgStore.commitChanges();\r\n");
      out.write("\t\t\t\t\t\t\tgStore.sort('sort_id', 'ASC');\r\n");
      out.write("\t\t\t\t\t\t\twin.show();\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tsetReadOnly : function(readonly) {\r\n");
      out.write("\t\t\t\t\tthis.setDisabled(readonly);\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tloadDefault : function() {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar crossOpenWinBtn = Ext.create('DCI.Customer.EmptyButton', {\r\n");
      out.write("\t\t\t\tx : 970,\r\n");
      out.write("\t\t\t\ty : 10,\r\n");
      out.write("\t\t\t\t//cls : 'crossdbeditbutton',\r\n");
      out.write("\t\t\t\tcls : 'crossdbeditbutton-withdata2',\r\n");
      out.write("\t\t\t\ttooltip : langs.cross_db_setup,\r\n");
      out.write("\t\t\t\twidth : 30,\r\n");
      out.write("\t\t\t\theight : 30,\r\n");
      out.write("\t\t\t\t//hidden : true,\r\n");
      out.write("\t\t\t\ttargetComp : sql_cross,\r\n");
      out.write("\t\t\t\tcrossInfo : '',\r\n");
      out.write("\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\tvar cross_sqleditor = Ext.create('DCI.Customer.SqlEditor', {\r\n");
      out.write("\t\t\t\t\t\tfieldLabel : 'SQL',\r\n");
      out.write("\t\t\t\t\t\theight : 200,\r\n");
      out.write("\t\t\t\t\t\twidth : 800,\r\n");
      out.write("\t\t\t\t\t\tname : 'sql_context',\r\n");
      out.write("\t\t\t\t\t\tx : 5,\r\n");
      out.write("\t\t\t\t\t\ty : 100\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar conn_combo = Ext.create('DCI.Customer.ComboBox', {\r\n");
      out.write("\t\t\t\t\t\tfieldLabel : langs.conn_id,\r\n");
      out.write("\t\t\t\t\t\tname : 'conn_id',\r\n");
      out.write("\t\t\t\t\t\tstore : Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\t\tfields : [ 'label', 'value' ],\r\n");
      out.write("\t\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\troot : 'items'\r\n");
      out.write("\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\taction : 'connlist',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfilter : ''\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}),\r\n");
      out.write("\t\t\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\t\t\twidth : 300,\r\n");
      out.write("\t\t\t\t\t\tx : 315,\r\n");
      out.write("\t\t\t\t\t\ty : 10\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar cross_combo = Ext.create('DCI.Customer.ComboBox', {\r\n");
      out.write("\t\t\t\t\t\tfieldLabel : langs.cross_type,\r\n");
      out.write("\t\t\t\t\t\tname : 'visible',\r\n");
      out.write("\t\t\t\t\t\tstore : {\r\n");
      out.write("\t\t\t\t\t\t\tfields : [ 'label', 'value' ],\r\n");
      out.write("\t\t\t\t\t\t\tdata : [ {\r\n");
      out.write("\t\t\t\t\t\t\t\t\"label\" : 'Union All',\r\n");
      out.write("\t\t\t\t\t\t\t\t\"value\" : 'union_all'\r\n");
      out.write("\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\t\"label\" : 'Join',\r\n");
      out.write("\t\t\t\t\t\t\t\t\"value\" : 'join'\r\n");
      out.write("\t\t\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\tdefaultvalue : 'union_all',\r\n");
      out.write("\t\t\t\t\t\twidth : 300,\r\n");
      out.write("\t\t\t\t\t\tx : 5,\r\n");
      out.write("\t\t\t\t\t\ty : 10,\r\n");
      out.write("\t\t\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\t\t\tchange : function(combo, newValue, oldValue, eOpts) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\t\t\t\tvar panel = me.up();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tif (panel != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar set1 = panel.items.get(5);\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar set2 = panel.items.get(6);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\tset1.setDisabled(newValue != 'join');\r\n");
      out.write("\t\t\t\t\t\t\t\t\tset2.setDisabled(newValue != 'join');\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar win = Ext.create('Ext.window.Window',\r\n");
      out.write("\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\ttitle : langs.cross_db_setup,\r\n");
      out.write("\t\t\t\t\t\t\t\twidth : 850,\r\n");
      out.write("\t\t\t\t\t\t\t\theight : 400,\r\n");
      out.write("\t\t\t\t\t\t\t\tminWidth : 800,\r\n");
      out.write("\t\t\t\t\t\t\t\tminHeight : 350,\r\n");
      out.write("\t\t\t\t\t\t\t\tlayout : 'fit',\r\n");
      out.write("\t\t\t\t\t\t\t\tplain : true,\r\n");
      out.write("\t\t\t\t\t\t\t\tmodal : true,\r\n");
      out.write("\t\t\t\t\t\t\t\tparentButton : me,\r\n");
      out.write("\t\t\t\t\t\t\t\titems : [ {\r\n");
      out.write("\t\t\t\t\t\t\t\t\txtype : 'panel',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tlayout : 'absolute',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tborder : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tbodyStyle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tbackground : \"transparent\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\titems : [ Ext.create('DCI.Customer.TextField', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tfieldLabel : langs.group_by,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\twidth : 300,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\temptyText : '',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tname : 'group_by',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tx : 5,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ty : 40\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}), Ext.create('DCI.Customer.TextField', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tfieldLabel : langs.order_by,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\twidth : 300,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\temptyText : '',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tname : 'order_by',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tx : 315,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ty : 40\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}), cross_sqleditor, cross_combo, conn_combo, Ext.create('DCI.Customer.TextField', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tfieldLabel : langs.join_key_set1,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\twidth : 300,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\temptyText : '',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tname : 'join_key_set1',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tx : 5,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ty : 70\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}), Ext.create('DCI.Customer.TextField', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tfieldLabel : langs.join_key_set2,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\twidth : 300,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\temptyText : '',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tname : 'join_key_set2',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tx : 315,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ty : 70\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}) ]\r\n");
      out.write("\t\t\t\t\t\t\t\t} ],\r\n");
      out.write("\t\t\t\t\t\t\t\tbuttons : [\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttext : langs.ok,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tvar pwin = this.up('.window');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tvar newValue = \"\";\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tvar crossobj = {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tconn_id : pwin.items.get(0).items.get(4).getValue(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tsql_context : pwin.items.get(0).items.get(2).getValue(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\torder_by : pwin.items.get(0).items.get(1).getValue(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tgroup_by : pwin.items.get(0).items.get(0).getValue(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tcross_type : pwin.items.get(0).items.get(3).getValue(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tjoin_key_set1 : pwin.items.get(0).items.get(5).getValue(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tjoin_key_set2 : pwin.items.get(0).items.get(6).getValue()\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tnewValue = Ext.JSON.encode(crossobj);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t////////////////////////////////////////////////////\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tvar conn = pwin.items.get(0).items.get(4);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tvar sql = pwin.items.get(0).items.get(2);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tvar jk1 = pwin.items.get(0).items.get(5);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tvar jk2 = pwin.items.get(0).items.get(6);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tsql.activeErrorsTpl = conn.activeErrorsTpl;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tvar ok = true;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tif (conn.getValue() == null || conn.getValue().length == 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tok = ok && false;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tconn.markInvalid(langs.no_conn_data);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t//Ext.MessageBox.alert(langs.errmsg, langs.no_conn_data);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tif (sql.getValue() == null || sql.getValue().length == 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tok = ok && false;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tsql.markInvalid(langs.not_allow_blank);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tvar str = sql.getValue().toLowerCase();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tif (str.indexOf(\"truncate \") != -1 || str.indexOf(\"drop \") != -1 || str.indexOf(\"delete \") != -1\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|| str.indexOf(\"update \") != -1 || str.indexOf(\"insert \") != -1 || str.indexOf(\"alter \") != -1\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|| str.indexOf(\"create \") != -1 || str.indexOf(\"replace \") != -1) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tok = ok && false;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tsql.markInvalid(langs.illegal_keyword);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tif (crossobj.cross_type == \"join\") {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tif (jk1.getValue() == null || jk1.getValue().length == 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tok = ok && false;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tjk1.markInvalid(langs.not_allow_blank);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tif (jk2.getValue() == null || jk2.getValue().length == 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tok = ok && false;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tjk2.markInvalid(langs.not_allow_blank);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t/* if (jk1.getValue() != null && jk1.getValue().length != 0 && jk2.getValue() != null && jk2.getValue().length != 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (jk1.getValue().split(\",\").length != jk1.getValue().split(\",\").length) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjk1.markInvalid(langs.not_allow_blank);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjk2.markInvalid(langs.not_allow_blank);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t} */\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tif (ok) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tvar sql_text = sql.getValue();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tvar group_by = pwin.items.get(0).items.get(0).getValue();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tvar order_by = pwin.items.get(0).items.get(1).getValue();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tvar conn_id = conn.getValue();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tExt.Ajax.request({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tmethod : 'POST',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tparams : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taction : 'checkSql',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsql_text : sql_text,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgroup_by : group_by,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\torder_by : order_by,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconn_id : conn_id\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuccess : function(a) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tme.setLoading(false);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = Ext.JSON.decode(a.responseText);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result.success) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpwin.parentButton.crossInfo = newValue;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (pwin.parentButton.targetComp != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpwin.parentButton.targetComp.setValue(newValue);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpwin.close();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsql.activeErrorsTpl = conn.activeErrorsTpl;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsql.markInvalid(langs.sql_check_fail + \"</br>\" + result.msg);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tfailure : function(f, action) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tme.setLoading(false);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsql.activeErrorsTpl = conn.activeErrorsTpl;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsql.markInvalid(langs.system_error);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttext : langs.clear,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tvar pwin = this.up('.window');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tpwin.parentButton.loadDefault();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tif (pwin.parentButton.targetComp != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tpwin.parentButton.targetComp.setValue('');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tthis.up('.window').close();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttext : langs.cancel,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tthis.up('.window').close();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar panel = win.items.get(0);\r\n");
      out.write("\t\t\t\t\twin.show();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tcross_combo.loadDefault();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tcross_combo.listConfig = {\r\n");
      out.write("\t\t\t\t\t\tminWidth : cross_combo.getWidth() - cross_combo.getLabelWidth()\r\n");
      out.write("\t\t\t\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tif (me.crossInfo != null && me.crossInfo.length > 0) {\r\n");
      out.write("\t\t\t\t\t\tvar crossobj = Ext.JSON.decode(me.crossInfo);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\tif (crossobj.sql_context != null) {\r\n");
      out.write("\t\t\t\t\t\t\tpanel.items.get(2).setValue(crossobj.sql_context);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tif (crossobj.order_by != null) {\r\n");
      out.write("\t\t\t\t\t\t\tpanel.items.get(1).setValue(crossobj.order_by);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tif (crossobj.group_by != null) {\r\n");
      out.write("\t\t\t\t\t\t\tpanel.items.get(0).setValue(crossobj.group_by);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tif (crossobj.cross_type != null) {\r\n");
      out.write("\t\t\t\t\t\t\tpanel.items.get(3).setValue(crossobj.cross_type);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tif (crossobj.conn_id == null) {\r\n");
      out.write("\t\t\t\t\t\t\tconn_combo.getStore().load(function(record) {\r\n");
      out.write("\t\t\t\t\t\t\t\tconn_combo.loadDefault();\r\n");
      out.write("\t\t\t\t\t\t\t\tconn_combo.listConfig = {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tminWidth : conn_combo.getWidth() - conn_combo.getLabelWidth()\r\n");
      out.write("\t\t\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tconn_combo.getStore().load(function(record) {\r\n");
      out.write("\t\t\t\t\t\t\t\tconn_combo.listConfig = {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tminWidth : conn_combo.getWidth() - conn_combo.getLabelWidth()\r\n");
      out.write("\t\t\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t\t\t\tconn_combo.setValue(crossobj.conn_id);\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tif (crossobj.join_key_set1 != null) {\r\n");
      out.write("\t\t\t\t\t\t\tpanel.items.get(5).setValue(crossobj.join_key_set1);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tif (crossobj.join_key_set2 != null) {\r\n");
      out.write("\t\t\t\t\t\t\tpanel.items.get(6).setValue(crossobj.join_key_set2);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tconn_combo.getStore().load(function(record) {\r\n");
      out.write("\t\t\t\t\t\t\tconn_combo.loadDefault();\r\n");
      out.write("\t\t\t\t\t\t\tconn_combo.listConfig = {\r\n");
      out.write("\t\t\t\t\t\t\t\tminWidth : conn_combo.getWidth() - conn_combo.getLabelWidth()\r\n");
      out.write("\t\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tsetReadOnly : function(readonly) {\r\n");
      out.write("\t\t\t\t\tthis.setDisabled(readonly);\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tloadDefault : function() {\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\tme.crossInfo = '';\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar oriCrossGridStore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\tfields : [ 'cross_type', 'sql_context', 'group_by', 'order_by', 'join_keys', 'cross_seq', 'cross_id', 'conn_id', 'cross_seq_show' ],\r\n");
      out.write("\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\ttype : 'memory',\r\n");
      out.write("\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\ttype : 'json'\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar crossGridStore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\tfields : [ 'cross_type', 'sql_context', 'group_by', 'order_by', 'join_keys', 'cross_seq', 'cross_id', 'conn_id', 'cross_seq_show' ],\r\n");
      out.write("\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\troot : 'items'\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\taction : 'crossMain',\r\n");
      out.write("\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\tsql_id : ''\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\tdatachanged : function(store, eOpts) {\r\n");
      out.write("\t\t\t\t\t\tif (crossMainOpenWinBtn != null) {\r\n");
      out.write("\t\t\t\t\t\t\tif (store.getCount() > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\tcrossMainOpenWinBtn.getEl().setStyle({\r\n");
      out.write("\t\t\t\t\t\t\t\t\tborderWidth : \"2px 2px 2px 2px\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\tborderColor : 'red',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tboderStyle : 'solid'\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tcrossMainOpenWinBtn.getEl().setStyle({\r\n");
      out.write("\t\t\t\t\t\t\t\t\tborderWidth : \"1px 1px 1px 1px\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\tborderColor : '',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tboderStyle : ''\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar crossMainOpenWinBtn = Ext.create('DCI.Customer.EmptyButton', {\r\n");
      out.write("\t\t\t\tx : 970,\r\n");
      out.write("\t\t\t\ty : 10,\r\n");
      out.write("\t\t\t\tcls : 'crossdbeditbutton',\r\n");
      out.write("\t\t\t\ttooltip : langs.cross_db_setup,\r\n");
      out.write("\t\t\t\twidth : 30,\r\n");
      out.write("\t\t\t\theight : 30,\r\n");
      out.write("\t\t\t\t//hidden : true,\r\n");
      out.write("\t\t\t\ttargetComp : sql_cross,\r\n");
      out.write("\t\t\t\tmainSqlObjs : null,\r\n");
      out.write("\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\tvar mainBtn = this;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar bodygrid = Ext.create('Ext.grid.Panel', {\r\n");
      out.write("\t\t\t\t\t\tregion : 'center',\r\n");
      out.write("\t\t\t\t\t\trenderer : \"component\",\r\n");
      out.write("\t\t\t\t\t\tstripeRows : true,\r\n");
      out.write("\t\t\t\t\t\tautoScroll : true,\r\n");
      out.write("\t\t\t\t\t\tloadMask : true,\r\n");
      out.write("\t\t\t\t\t\tenableTextSelection : true,\r\n");
      out.write("\t\t\t\t\t\tviewConfig : {\r\n");
      out.write("\t\t\t\t\t\t\tforceFit : false,\r\n");
      out.write("\t\t\t\t\t\t\tautoLoad : false\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\tstore : crossGridStore,\r\n");
      out.write("\t\t\t\t\t\tcolumns : [ {\r\n");
      out.write("\t\t\t\t\t\t\ttext : langs.cross_seq,\r\n");
      out.write("\t\t\t\t\t\t\tdataIndex : 'cross_seq_show',\r\n");
      out.write("\t\t\t\t\t\t\twidth : 80\r\n");
      out.write("\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\ttext : 'SQL',\r\n");
      out.write("\t\t\t\t\t\t\tdataIndex : 'sql_context',\r\n");
      out.write("\t\t\t\t\t\t\twidth : 400\r\n");
      out.write("\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\ttext : langs.group_by,\r\n");
      out.write("\t\t\t\t\t\t\tdataIndex : 'group_by',\r\n");
      out.write("\t\t\t\t\t\t\twidth : 200\r\n");
      out.write("\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\ttext : langs.order_by,\r\n");
      out.write("\t\t\t\t\t\t\tdataIndex : 'order_by',\r\n");
      out.write("\t\t\t\t\t\t\twidth : 200\r\n");
      out.write("\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\ttext : langs.join_keys,\r\n");
      out.write("\t\t\t\t\t\t\tdataIndex : 'join_keys',\r\n");
      out.write("\t\t\t\t\t\t\twidth : 100\r\n");
      out.write("\t\t\t\t\t\t} ],\r\n");
      out.write("\t\t\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\t\t\tselectionchange : function(smodel, selected, eOpts) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\t\t\t\tvar combo = me.up('panel').items.get(0).items.get(0);\r\n");
      out.write("\t\t\t\t\t\t\t\tif (selected[0] != null && selected[0].data != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcombo.setValue(selected[0].data.cross_type);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\tcelldblclick : function(grid, td, cellIndex, record, tr, rowIndex, e, eOpts) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\tcellcontextmenu : function(view, td, cellIndex, record, tr, rowIndex, e, eOpts) {\r\n");
      out.write("\t\t\t\t\t\t\t\t//var me = this;\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\tinitBodyGrid : function(timer, columns, store, relationRecord) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar cross_combo = Ext.create('DCI.Customer.ComboBox', {\r\n");
      out.write("\t\t\t\t\t\tfieldLabel : langs.cross_type,\r\n");
      out.write("\t\t\t\t\t\tneedConfirm : true,\r\n");
      out.write("\t\t\t\t\t\tname : 'visible',\r\n");
      out.write("\t\t\t\t\t\tstore : {\r\n");
      out.write("\t\t\t\t\t\t\tfields : [ 'label', 'value' ],\r\n");
      out.write("\t\t\t\t\t\t\tdata : [ {\r\n");
      out.write("\t\t\t\t\t\t\t\t\"label\" : 'Union All',\r\n");
      out.write("\t\t\t\t\t\t\t\t\"value\" : 'union_all'\r\n");
      out.write("\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\t\"label\" : 'Join',\r\n");
      out.write("\t\t\t\t\t\t\t\t\"value\" : 'join'\r\n");
      out.write("\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\t\"label\" : 'LeftJoin',\r\n");
      out.write("\t\t\t\t\t\t\t\t\"value\" : 'left_join'\r\n");
      out.write("\t\t\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\tdefaultvalue : 'union_all',\r\n");
      out.write("\t\t\t\t\t\twidth : 300,\r\n");
      out.write("\t\t\t\t\t\tx : 5,\r\n");
      out.write("\t\t\t\t\t\ty : 10,\r\n");
      out.write("\t\t\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\t\t\tchange : function(combo, newValue, oldValue, eOpts) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\t\t\t\tif (oldValue == 'join' || oldValue == 'left_join') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (newValue == 'union_all' || newValue == 'union') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (crossGridStore != null && crossGridStore.getCount() > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tExt.MessageBox.confirm(langs.confirm_title, langs.join_data_lose_warning, function(btn) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tif (btn == 'yes') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tif (bodygrid != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar gStore = bodygrid.getStore();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < gStore.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgStore.getAt(i).set('cross_type', newValue);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgStore.getAt(i).set('join_keys', \"\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgStore.commitChanges();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tme.setValue(oldValue);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar gStore = bodygrid.getStore();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < gStore.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tgStore.getAt(i).set('cross_type', newValue);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tgStore.commitChanges();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar gStore = bodygrid.getStore();\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < gStore.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tgStore.getAt(i).set('cross_type', newValue);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tgStore.commitChanges();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar cross_sqleditor = Ext.create('DCI.Customer.SqlEditor', {\r\n");
      out.write("\t\t\t\t\t\tfieldLabel : 'SQL',\r\n");
      out.write("\t\t\t\t\t\tlabelWidth : 60,\r\n");
      out.write("\t\t\t\t\t\theight : 230,\r\n");
      out.write("\t\t\t\t\t\twidth : 800,\r\n");
      out.write("\t\t\t\t\t\tname : 'sql_context',\r\n");
      out.write("\t\t\t\t\t\tx : 5,\r\n");
      out.write("\t\t\t\t\t\ty : 100\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar conn_combo = Ext.create('DCI.Customer.ComboBox', {\r\n");
      out.write("\t\t\t\t\t\tfieldLabel : langs.conn_id,\r\n");
      out.write("\t\t\t\t\t\tlabelWidth : 60,\r\n");
      out.write("\t\t\t\t\t\tname : 'conn_id',\r\n");
      out.write("\t\t\t\t\t\tstore : Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\t\tfields : [ 'label', 'value' ],\r\n");
      out.write("\t\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\troot : 'items'\r\n");
      out.write("\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\taction : 'connlist',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfilter : ''\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}),\r\n");
      out.write("\t\t\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\t\t\twidth : 300,\r\n");
      out.write("\t\t\t\t\t\tx : 5,\r\n");
      out.write("\t\t\t\t\t\ty : 10\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar sqlEditorWin = Ext.create('Ext.window.Window', {\r\n");
      out.write("\t\t\t\t\t\ttitle : langs.cross_db_setup,\r\n");
      out.write("\t\t\t\t\t\twidth : 850,\r\n");
      out.write("\t\t\t\t\t\theight : 400,\r\n");
      out.write("\t\t\t\t\t\tminWidth : 800,\r\n");
      out.write("\t\t\t\t\t\tminHeight : 350,\r\n");
      out.write("\t\t\t\t\t\tlayout : 'fit',\r\n");
      out.write("\t\t\t\t\t\tplain : true,\r\n");
      out.write("\t\t\t\t\t\tmodal : true,\r\n");
      out.write("\t\t\t\t\t\tcloseAction : 'hide',\r\n");
      out.write("\t\t\t\t\t\tparentButton : mainBtn,\r\n");
      out.write("\t\t\t\t\t\tcross_type : 'union_all',\r\n");
      out.write("\t\t\t\t\t\tcurrSeq : -1,\r\n");
      out.write("\t\t\t\t\t\titems : [ {\r\n");
      out.write("\t\t\t\t\t\t\txtype : 'panel',\r\n");
      out.write("\t\t\t\t\t\t\tlayout : 'absolute',\r\n");
      out.write("\t\t\t\t\t\t\tborder : 0,\r\n");
      out.write("\t\t\t\t\t\t\tbodyStyle : {\r\n");
      out.write("\t\t\t\t\t\t\t\tbackground : \"transparent\"\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\titems : [ cross_sqleditor, conn_combo, Ext.create('DCI.Customer.TextField', {\r\n");
      out.write("\t\t\t\t\t\t\t\tfieldLabel : langs.group_by,\r\n");
      out.write("\t\t\t\t\t\t\t\tlabelWidth : 60,\r\n");
      out.write("\t\t\t\t\t\t\t\twidth : 380,\r\n");
      out.write("\t\t\t\t\t\t\t\temptyText : '',\r\n");
      out.write("\t\t\t\t\t\t\t\tname : 'group_by',\r\n");
      out.write("\t\t\t\t\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\t\t\t\t\tx : 5,\r\n");
      out.write("\t\t\t\t\t\t\t\ty : 40\r\n");
      out.write("\t\t\t\t\t\t\t}), Ext.create('DCI.Customer.TextField', {\r\n");
      out.write("\t\t\t\t\t\t\t\tfieldLabel : langs.order_by,\r\n");
      out.write("\t\t\t\t\t\t\t\tlabelWidth : 60,\r\n");
      out.write("\t\t\t\t\t\t\t\twidth : 380,\r\n");
      out.write("\t\t\t\t\t\t\t\temptyText : '',\r\n");
      out.write("\t\t\t\t\t\t\t\tname : 'order_by',\r\n");
      out.write("\t\t\t\t\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\t\t\t\t\tx : 420,\r\n");
      out.write("\t\t\t\t\t\t\t\ty : 40\r\n");
      out.write("\t\t\t\t\t\t\t}), Ext.create('DCI.Customer.TextField', {\r\n");
      out.write("\t\t\t\t\t\t\t\tfieldLabel : langs.join_keys,\r\n");
      out.write("\t\t\t\t\t\t\t\tlabelWidth : 60,\r\n");
      out.write("\t\t\t\t\t\t\t\twidth : 760,\r\n");
      out.write("\t\t\t\t\t\t\t\temptyText : '',\r\n");
      out.write("\t\t\t\t\t\t\t\treadOnly : true,\r\n");
      out.write("\t\t\t\t\t\t\t\tname : 'join_keys',\r\n");
      out.write("\t\t\t\t\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\t\t\t\t\tx : 5,\r\n");
      out.write("\t\t\t\t\t\t\t\ty : 70\r\n");
      out.write("\t\t\t\t\t\t\t}), {\r\n");
      out.write("\t\t\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\t\t\tx : 765,\r\n");
      out.write("\t\t\t\t\t\t\t\ty : 70,\r\n");
      out.write("\t\t\t\t\t\t\t\ttext : langs.edit,\r\n");
      out.write("\t\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar panel = this.up('panel');\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar win = panel.up(\"window\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar joinInitStore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tfields : [ 'datas' ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttype : 'json'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\taction : 'getKeyColumns',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tsqls : ''\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar joinbodygrid = Ext.create('Ext.grid.Panel', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tregion : 'center',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\trenderer : \"component\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tstore : Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tfields : [ {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tname : 'joinkey',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttype : 'string'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t} ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttype : 'memory',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\ttype : 'json'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcolumns : [ {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttext : langs.join_keys,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tdataIndex : 'joinkey',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\twidth : '100%'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t} ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tallowDeselect : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tselModel : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tallowDeselect : true\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tforceFit : true\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar keystr = panel.items.get(4).getValue();\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar keys = null;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (keystr != null && keystr != '') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tkeys = keystr.split(';');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar tmp = [];\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < keys.length; i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttmp.push({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tjoinkey : keys[i]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tjoinbodygrid.getStore().loadData(tmp);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar joinwin = Ext.create('Ext.window.Window', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttitle : langs.joinKey_setup,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\twidth : 550,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\theight : 400,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tminWidth : 500,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tminHeight : 350,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tlayout : 'border',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tplain : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tmodal : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttragetComp : null,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcolsData : null,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\titems : [ {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\txtype : 'panel',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tregion : 'north',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tlayout : 'absolute',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\theight : 40,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\titems : [ Ext.create('DCI.Customer.ComboBox', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tfieldLabel : langs.join_keys + \"1\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tlabelWidth : 60,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\twidth : 110,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tx : 5,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ty : 10,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tchange : function(combo, newValue, oldValue, eOpts) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar panel = this.up('panel');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar win = panel.up('window');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar combo2 = panel.items.get(1);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (win.colsData != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < win.colsData.length; i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (win.colsData[i].seq == newValue) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcombo2.getStore().loadData(win.colsData[i].cols);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcombo2.loadDefault();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}), Ext.create('DCI.Customer.ComboBox', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tlabelWidth : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\twidth : 120,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tvalueNotFoundText : \"\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tx : 120,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ty : 10\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}), Ext.create('DCI.Customer.ComboBox', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tfieldLabel : langs.join_keys + \"2\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tlabelWidth : 60,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\twidth : 180,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tvalueNotFoundText : \"\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tseq : '',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tx : 260,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ty : 10\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}), {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttext : langs.add,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tx : 445,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ty : 10,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\twidth : 40,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tvar gridstore = this.up('panel').up('window').items.get(1).getStore();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tvar combo1 = this.up('panel').items.get(0);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tvar combo2 = this.up('panel').items.get(1);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tvar combo3 = this.up('panel').items.get(2);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tif (gridstore != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tgridstore.add({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjoinkey : combo1.getValue() + \".\" + combo2.getValue() + \"=\" + combo3.seq + \".\" + combo3.getValue()\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttext : langs._delete,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tx : 485,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ty : 10,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\twidth : 40,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tvar grid = this.up('panel').up('window').items.get(1);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tvar selectionModel = grid.getSelectionModel();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tif (selectionModel.hasSelection()) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tgrid.getStore().remove(grid.getSelectionModel().getSelection()[0]);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}, joinbodygrid ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tbuttons : [ {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttext : langs.ok,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tvar win = this.up('.window');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tvar gridstore = win.items.get(1).getStore();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tvar value = null;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tif (gridstore == null || gridstore.getCount() == 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = \"\";\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < gridstore.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (i == 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = gridstore.getAt(i).get('joinkey');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue += \";\" + gridstore.getAt(i).get('joinkey');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\twin.tragetComp.setValue(value);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\twin.close();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttext : langs.cancel,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tthis.up('.window').close();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t} ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tinitJoinWin : function(seqs, cols, tragetComp) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tvar panel = me.items.get(0);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tvar combo1 = panel.items.get(0);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tvar combo3 = panel.items.get(2);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tme.colsData = cols;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tcombo1.getStore().loadData(seqs);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tcombo1.loadDefault();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tcombo3.seq = cols[cols.length - 1].seq;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tcombo3.getStore().loadData(cols[cols.length - 1].cols);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tcombo3.loadDefault();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tme.tragetComp = tragetComp;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tme.show();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar formDatas = [];\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\tformDatas.push({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tconnid : mainBtn.mainSqlObjs.get(18).getValue(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tsql : mainBtn.mainSqlObjs.get(17).getValue(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tgroupBy : mainBtn.mainSqlObjs.get(4).getValue(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tseq : \"0\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (crossGridStore != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < crossGridStore.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tif (i < win.currSeq - 1) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tformDatas.push({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tconnid : crossGridStore.getAt(i).get(\"conn_id\"),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tsql : crossGridStore.getAt(i).get(\"sql_context\"),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tgroupBy : crossGridStore.getAt(i).get(\"group_by\"),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tseq : crossGridStore.getAt(i).get(\"cross_seq\").toString()\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\tformDatas.push({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tconnid : panel.items.get(1).getValue(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tsql : panel.items.get(0).getValue(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tgroupBy : panel.items.get(2).getValue(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tseq : win.currSeq.toString()\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (joinInitStore.getProxy().extraParams.hasOwnProperty('sqls')) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tjoinInitStore.getProxy().extraParams['sqls'] = Ext.encode(formDatas);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\tjoinInitStore.load(function(record) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar seqs = [];\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < (record[0].data.datas.length - 1); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tseqs.push({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tlabel : record[0].data.datas[i].seq,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tvalue : record[0].data.datas[i].seq\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tjoinwin.initJoinWin(seqs, record[0].data.datas, panel.items.get(4));\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t\t\t} ],\r\n");
      out.write("\t\t\t\t\t\tbuttons : [ {\r\n");
      out.write("\t\t\t\t\t\t\ttext : langs.ok,\r\n");
      out.write("\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar win = this.up('.window');\r\n");
      out.write("\t\t\t\t\t\t\t\tvar comps = win.items.get(0).items;\r\n");
      out.write("\t\t\t\t\t\t\t\tvar conn = comps.get(1);\r\n");
      out.write("\t\t\t\t\t\t\t\tvar checkok = true;\r\n");
      out.write("\t\t\t\t\t\t\t\tif (comps.get(0).getValue() == null || comps.get(0).getValue() == '') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcomps.get(0).activeErrorsTpl = conn.activeErrorsTpl;\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcomps.get(0).markInvalid(langs.not_allow_blank);\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcheckok = false;\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tif (win.cross_type == 'join' || win.cross_type == 'left_join') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (comps.get(4).getValue() == null || comps.get(4).getValue() == '') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcomps.get(4).activeErrorsTpl = comps.get(4).activeErrorsTpl;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcomps.get(4).markInvalid(langs.sql_check_fail + \"</br>\" + langs.not_allow_blank);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcheckok = checkok & false;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\tif (checkok) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tExt.Ajax.request({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tmethod : 'POST',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tparams : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\taction : 'checkSql',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tsql_text : comps.get(0).getValue(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tgroup_by : comps.get(2).getValue(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\torder_by : comps.get(3).getValue(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tconn_id : conn.getValue()\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tsuccess : function(a) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tvar result = Ext.JSON.decode(a.responseText);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tif (result.success) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tif (win.currSeq > crossGridStore.getCount()) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tcrossGridStore.add({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tcross_type : win.cross_type,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tsql_context : comps.get(0).getValue(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tgroup_by : comps.get(2).getValue(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\torder_by : comps.get(3).getValue(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tjoin_keys : comps.get(4).getValue(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tcross_seq : win.currSeq.toString(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tconn_id : comps.get(1).getValue(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tcross_seq_show : String.fromCharCode(win.currSeq + 65)\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < crossGridStore.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (crossGridStore.getAt(i).get('cross_seq') == win.currSeq) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar record = crossGridStore.getAt(i);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trecord.set('sql_context', comps.get(0).getValue());\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trecord.set('conn_id', comps.get(1).getValue());\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trecord.set('group_by', comps.get(2).getValue());\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trecord.set('order_by', comps.get(3).getValue());\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trecord.set('join_keys', comps.get(4).getValue());\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcrossGridStore.commitChanges();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\twin.close();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcomps.get(0).activeErrorsTpl = conn.activeErrorsTpl;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcomps.get(0).markInvalid(langs.sql_check_fail + \"</br>\" + result.msg);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tfailure : function(f, action) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tcomps.get(0).activeErrorsTpl = conn.activeErrorsTpl;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tcomps.get(0).markInvalid(langs.system_error);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\ttext : langs.cancel,\r\n");
      out.write("\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\tthis.up('.window').close();\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t} ],\r\n");
      out.write("\t\t\t\t\t\tinitWin : function(currMode, currCross, cross_type, seq) {\r\n");
      out.write("\t\t\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\t\t\tvar ccombo = me.items.get(0).items.get(1);\r\n");
      out.write("\t\t\t\t\t\t\tccombo.getStore().load(function(record) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar comps = me.items.get(0).items;\r\n");
      out.write("\t\t\t\t\t\t\t\tif (currMode == 'add') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcomps.get(0).loadDefault();\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcomps.get(1).loadDefault();\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcomps.get(2).loadDefault();\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcomps.get(3).loadDefault();\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcomps.get(4).loadDefault();\r\n");
      out.write("\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcomps.get(0).setValue(currCross.sql_context);\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcomps.get(1).setValue(currCross.conn_id);\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcomps.get(2).setValue(currCross.group_by);\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcomps.get(3).setValue(currCross.order_by);\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcomps.get(4).setValue(currCross.join_keys);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tcomps.get(5).setDisabled(cross_type != 'join' && cross_type != 'left_join');\r\n");
      out.write("\t\t\t\t\t\t\t\tme.cross_type = cross_type;\r\n");
      out.write("\t\t\t\t\t\t\t\tme.currSeq = seq;\r\n");
      out.write("\t\t\t\t\t\t\t\tme.show();\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar win = Ext.create('Ext.window.Window', {\r\n");
      out.write("\t\t\t\t\t\ttitle : langs.cross_db_setup,\r\n");
      out.write("\t\t\t\t\t\twidth : 850,\r\n");
      out.write("\t\t\t\t\t\theight : 400,\r\n");
      out.write("\t\t\t\t\t\tminWidth : 800,\r\n");
      out.write("\t\t\t\t\t\tminHeight : 350,\r\n");
      out.write("\t\t\t\t\t\tlayout : 'border',\r\n");
      out.write("\t\t\t\t\t\tplain : true,\r\n");
      out.write("\t\t\t\t\t\tmodal : true,\r\n");
      out.write("\t\t\t\t\t\tparentButton : mainBtn,\r\n");
      out.write("\t\t\t\t\t\titems : [ {\r\n");
      out.write("\t\t\t\t\t\t\tregion : 'north',\r\n");
      out.write("\t\t\t\t\t\t\txtype : 'panel',\r\n");
      out.write("\t\t\t\t\t\t\tlayout : 'absolute',\r\n");
      out.write("\t\t\t\t\t\t\theight : 40,\r\n");
      out.write("\t\t\t\t\t\t\tcurrCross : null,\r\n");
      out.write("\t\t\t\t\t\t\tborder : 0,\r\n");
      out.write("\t\t\t\t\t\t\tbodyStyle : {\r\n");
      out.write("\t\t\t\t\t\t\t\tbackground : \"transparent\"\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\titems : [ cross_combo, {\r\n");
      out.write("\t\t\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\t\t\tx : 315,\r\n");
      out.write("\t\t\t\t\t\t\t\ty : 10,\r\n");
      out.write("\t\t\t\t\t\t\t\ttext : langs.add,\r\n");
      out.write("\t\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tsqlEditorWin.initWin('add', null, this.up('panel').items.get(0).getValue(), bodygrid.getStore().getCount() + 1);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\t\t\tx : 355,\r\n");
      out.write("\t\t\t\t\t\t\t\ty : 10,\r\n");
      out.write("\t\t\t\t\t\t\t\ttext : langs.edit,\r\n");
      out.write("\t\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (bodygrid != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar s = bodygrid.getSelectionModel().getSelection();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (s.length > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tsqlEditorWin.initWin('edit', s[0].data, this.up('panel').items.get(0).getValue(), s[0].data.cross_seq);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langs.errmsg, langs.no_data_selected);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\t\t\tx : 395,\r\n");
      out.write("\t\t\t\t\t\t\t\ty : 10,\r\n");
      out.write("\t\t\t\t\t\t\t\ttext : langs._delete,\r\n");
      out.write("\t\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (bodygrid != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar s = bodygrid.getSelectionModel().getSelection();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (s.length > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbodygrid.getStore().remove(s[0]);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langs.errmsg, langs.no_data_selected);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t\t\t}, bodygrid ],\r\n");
      out.write("\t\t\t\t\t\tbuttons : [ {\r\n");
      out.write("\t\t\t\t\t\t\ttext : langs.ok,\r\n");
      out.write("\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar checkok = true;\r\n");
      out.write("\t\t\t\t\t\t\t\tvar errcode = null;\r\n");
      out.write("\t\t\t\t\t\t\t\tfor ( var i = 0; i < crossGridStore.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (crossGridStore.getAt(i).data.cross_type == 'join' || crossGridStore.getAt(i).data.cross_type == 'left_join') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (crossGridStore.getAt(i).data.join_keys == null || crossGridStore.getAt(i).data.join_keys == '') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tcheckok = false;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\terrcode = langs.lost_join_key;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tif (checkok) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar value = [];\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar record = null;\r\n");
      out.write("\t\t\t\t\t\t\t\t\toriCrossGridStore.removeAll();\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < crossGridStore.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\trecord = crossGridStore.getAt(i);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\toriCrossGridStore.add(record.copy());\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvalue.push(record.copy().data);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\tthis.up('.window').parentButton.targetComp.setValue(Ext.JSON.encode(value));\r\n");
      out.write("\t\t\t\t\t\t\t\t\tthis.up('.window').close();\r\n");
      out.write("\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tExt.MessageBox.alert(langs.errmsg, errcode);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\ttext : langs.cancel,\r\n");
      out.write("\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\tcrossGridStore.removeAll();\r\n");
      out.write("\t\t\t\t\t\t\t\tfor ( var i = 0; i < oriCrossGridStore.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcrossGridStore.add(oriCrossGridStore.getAt(i).copy());\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tthis.up('.window').close();\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tif (crossGridStore != null && crossGridStore.getCount() > 0) {\r\n");
      out.write("\t\t\t\t\t\tcross_combo.setValue(crossGridStore.getAt(0).get('cross_type'));\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tcross_combo.loadDefault();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\twin.show();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tcross_combo.listConfig = {\r\n");
      out.write("\t\t\t\t\t\tminWidth : cross_combo.getWidth() - cross_combo.getLabelWidth()\r\n");
      out.write("\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tsetReadOnly : function(readonly) {\r\n");
      out.write("\t\t\t\t\tthis.setDisabled(readonly);\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tloadDefault : function() {\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\tme.crossInfo = '';\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar headform = Ext.create('DCI.Customer.HeadFormPanel', {\r\n");
      out.write("\t\t\t\theight : 200,\r\n");
      out.write("\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\tlanguageObj : langs,\r\n");
      out.write("\t\t\t\titems : [ Ext.create('DCI.Customer.TextField', {\r\n");
      out.write("\t\t\t\t\tfieldLabel : langs.sql_id,\r\n");
      out.write("\t\t\t\t\temptyText : '',\r\n");
      out.write("\t\t\t\t\tname : 'sql_id',\r\n");
      out.write("\t\t\t\t\tallowBlank : false,\r\n");
      out.write("\t\t\t\t\tispk : true,\r\n");
      out.write("\t\t\t\t\tcanEdit : false,\r\n");
      out.write("\t\t\t\t\tdefaultvalue : langs.system_build,\r\n");
      out.write("\t\t\t\t\twidth : 250,\r\n");
      out.write("\t\t\t\t\tx : 0,\r\n");
      out.write("\t\t\t\t\ty : 10\r\n");
      out.write("\t\t\t\t}), Ext.create('DCI.Customer.TextField', {\r\n");
      out.write("\t\t\t\t\tfieldLabel : langs.sql_name,\r\n");
      out.write("\t\t\t\t\twidth : 300,\r\n");
      out.write("\t\t\t\t\temptyText : '',\r\n");
      out.write("\t\t\t\t\tname : 'sql_name',\r\n");
      out.write("\t\t\t\t\tallowBlank : false,\r\n");
      out.write("\t\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\t\tx : 250,\r\n");
      out.write("\t\t\t\t\ty : 10\r\n");
      out.write("\t\t\t\t}), Ext.create('DCI.Customer.CheckBox', {\r\n");
      out.write("\t\t\t\t\tfieldLabel : langs.auto_refresh,\r\n");
      out.write("\t\t\t\t\tname : 'auto_refresh',\r\n");
      out.write("\t\t\t\t\tdefaultvalue : 0,\r\n");
      out.write("\t\t\t\t\tx : 550,\r\n");
      out.write("\t\t\t\t\ty : 10\r\n");
      out.write("\t\t\t\t}), Ext.create('DCI.Customer.NumberBox', {\r\n");
      out.write("\t\t\t\t\tfieldLabel : langs.refresh_gap,\r\n");
      out.write("\t\t\t\t\tname : 'refresh_gap',\r\n");
      out.write("\t\t\t\t\tminValue : 1,\r\n");
      out.write("\t\t\t\t\tdefaultvalue : 30,\r\n");
      out.write("\t\t\t\t\twidth : 165,\r\n");
      out.write("\t\t\t\t\tx : 655,\r\n");
      out.write("\t\t\t\t\ty : 10\r\n");
      out.write("\t\t\t\t}), Ext.create('DCI.Customer.TextField', {\r\n");
      out.write("\t\t\t\t\tfieldLabel : langs.group_by,\r\n");
      out.write("\t\t\t\t\twidth : 250,\r\n");
      out.write("\t\t\t\t\temptyText : '',\r\n");
      out.write("\t\t\t\t\tname : 'group_by',\r\n");
      out.write("\t\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\t\tx : 0,\r\n");
      out.write("\t\t\t\t\ty : 40\r\n");
      out.write("\t\t\t\t}), Ext.create('DCI.Customer.TextField', {\r\n");
      out.write("\t\t\t\t\tfieldLabel : langs.order_by,\r\n");
      out.write("\t\t\t\t\twidth : 300,\r\n");
      out.write("\t\t\t\t\temptyText : '',\r\n");
      out.write("\t\t\t\t\tname : 'order_by',\r\n");
      out.write("\t\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\t\tx : 250,\r\n");
      out.write("\t\t\t\t\ty : 40\r\n");
      out.write("\t\t\t\t}), Ext.create('DCI.Customer.CheckBox', {\r\n");
      out.write("\t\t\t\t\tfieldLabel : langs.use_marquee,\r\n");
      out.write("\t\t\t\t\tname : 'use_marquee',\r\n");
      out.write("\t\t\t\t\tdefaultvalue : 0,\r\n");
      out.write("\t\t\t\t\tx : 550,\r\n");
      out.write("\t\t\t\t\ty : 40\r\n");
      out.write("\t\t\t\t}), Ext.create('DCI.Customer.NumberBox', {\r\n");
      out.write("\t\t\t\t\tfieldLabel : langs.marquee_refresh_gap,\r\n");
      out.write("\t\t\t\t\tname : 'marquee_refresh_gap',\r\n");
      out.write("\t\t\t\t\tdefaultvalue : 180,\r\n");
      out.write("\t\t\t\t\tminValue : 1,\r\n");
      out.write("\t\t\t\t\tstep : 10,\r\n");
      out.write("\t\t\t\t\tlabelWidth : 110,\r\n");
      out.write("\t\t\t\t\twidth : 165,\r\n");
      out.write("\t\t\t\t\tx : 655,\r\n");
      out.write("\t\t\t\t\ty : 40\r\n");
      out.write("\t\t\t\t}), Ext.create('DCI.Customer.ComboBox', {\r\n");
      out.write("\t\t\t\t\tfieldLabel : langs.marquee_location,\r\n");
      out.write("\t\t\t\t\tname : 'marquee_location',\r\n");
      out.write("\t\t\t\t\tstore : {\r\n");
      out.write("\t\t\t\t\t\tfields : [ 'label', 'value' ],\r\n");
      out.write("\t\t\t\t\t\tdata : [ {\r\n");
      out.write("\t\t\t\t\t\t\t\"label\" : langs.display_bottom,\r\n");
      out.write("\t\t\t\t\t\t\t\"value\" : \"1\"\r\n");
      out.write("\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\"label\" : langs.display_top,\r\n");
      out.write("\t\t\t\t\t\t\t\"value\" : \"2\"\r\n");
      out.write("\t\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tdefaultvalue : \"1\",\r\n");
      out.write("\t\t\t\t\tlabelWidth : 105,\r\n");
      out.write("\t\t\t\t\twidth : 160,\r\n");
      out.write("\t\t\t\t\tx : 810,\r\n");
      out.write("\t\t\t\t\ty : 10\r\n");
      out.write("\t\t\t\t}), Ext.create('DCI.Customer.ComboBox', {\r\n");
      out.write("\t\t\t\t\tfieldLabel : langs.marquee_type,\r\n");
      out.write("\t\t\t\t\tname : 'marquee_type',\r\n");
      out.write("\t\t\t\t\tstore : {\r\n");
      out.write("\t\t\t\t\t\tfields : [ 'label', 'value' ],\r\n");
      out.write("\t\t\t\t\t\tdata : [ {\r\n");
      out.write("\t\t\t\t\t\t\t\"label\" : langs.move,\r\n");
      out.write("\t\t\t\t\t\t\t\"value\" : \"1\"\r\n");
      out.write("\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\"label\" : langs.still,\r\n");
      out.write("\t\t\t\t\t\t\t\"value\" : \"2\"\r\n");
      out.write("\t\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tdefaultvalue : \"1\",\r\n");
      out.write("\t\t\t\t\tlabelWidth : 105,\r\n");
      out.write("\t\t\t\t\twidth : 160,\r\n");
      out.write("\t\t\t\t\tx : 810,\r\n");
      out.write("\t\t\t\t\ty : 40\r\n");
      out.write("\t\t\t\t}), Ext.create('DCI.Customer.CheckBox', {\r\n");
      out.write("\t\t\t\t\tfieldLabel : langs.use_popup,\r\n");
      out.write("\t\t\t\t\tname : 'use_popup',\r\n");
      out.write("\t\t\t\t\tdefaultvalue : 0,\r\n");
      out.write("\t\t\t\t\tx : 0,\r\n");
      out.write("\t\t\t\t\ty : 70\r\n");
      out.write("\t\t\t\t}), Ext.create('DCI.Customer.NumberBox', {\r\n");
      out.write("\t\t\t\t\tfieldLabel : langs.popup_refresh_gap,\r\n");
      out.write("\t\t\t\t\tname : 'popup_refresh_gap',\r\n");
      out.write("\t\t\t\t\tdefaultvalue : 30,\r\n");
      out.write("\t\t\t\t\tminValue : 10,\r\n");
      out.write("\t\t\t\t\twidth : 150,\r\n");
      out.write("\t\t\t\t\tx : 100,\r\n");
      out.write("\t\t\t\t\ty : 70\r\n");
      out.write("\t\t\t\t}), Ext.create('DCI.Customer.TextField', {\r\n");
      out.write("\t\t\t\t\tfieldLabel : langs.popup_dir,\r\n");
      out.write("\t\t\t\t\twidth : 300,\r\n");
      out.write("\t\t\t\t\temptyText : '',\r\n");
      out.write("\t\t\t\t\tname : 'popup_dir',\r\n");
      out.write("\t\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\t\tx : 250,\r\n");
      out.write("\t\t\t\t\ty : 70\r\n");
      out.write("\t\t\t\t}), legendTextBox, legendOpenWinBtn, openWinBtn, connGrid, sqleditor, connData, sql_cross, crossMainOpenWinBtn, legend_lang ],\r\n");
      out.write("\t\t\t\tcusValid : function(fn) {\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\tvar conn = me.items.get(18);\r\n");
      out.write("\t\t\t\t\tvar sql = me.items.get(17);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tsql.activeErrorsTpl = conn.activeErrorsTpl;\r\n");
      out.write("\t\t\t\t\tvar ok = true;\r\n");
      out.write("\t\t\t\t\tif (conn.getValue() == null || conn.getValue().length == 0) {\r\n");
      out.write("\t\t\t\t\t\tok = ok && false;\r\n");
      out.write("\t\t\t\t\t\tExt.MessageBox.alert(langs.errmsg, langs.no_conn_data);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tif (sql.getValue() == null || sql.getValue().length == 0) {\r\n");
      out.write("\t\t\t\t\t\tok = ok && false;\r\n");
      out.write("\t\t\t\t\t\tsql.markInvalid(langs.not_allow_blank);\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tvar str = sql.getValue().toLowerCase();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\tif (str.indexOf(\"truncate \") != -1 || str.indexOf(\"drop \") != -1 || str.indexOf(\"delete \") != -1 || str.indexOf(\"update \") != -1\r\n");
      out.write("\t\t\t\t\t\t\t\t|| str.indexOf(\"insert \") != -1 || str.indexOf(\"alter \") != -1 || str.indexOf(\"create \") != -1 || str.indexOf(\"replace \") != -1) {\r\n");
      out.write("\t\t\t\t\t\t\tok = ok && false;\r\n");
      out.write("\t\t\t\t\t\t\tsql.markInvalid(langs.illegal_keyword);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tif (ok) {\r\n");
      out.write("\t\t\t\t\t\tvar sql_text = me.items.get(17).getValue();\r\n");
      out.write("\t\t\t\t\t\tvar group_by = me.items.get(4).getValue();\r\n");
      out.write("\t\t\t\t\t\tvar order_by = me.items.get(5).getValue();\r\n");
      out.write("\t\t\t\t\t\tvar conn_id = conn.getValue();\r\n");
      out.write("\t\t\t\t\t\tExt.Ajax.request({\r\n");
      out.write("\t\t\t\t\t\t\tmethod : 'POST',\r\n");
      out.write("\t\t\t\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\t\t\t\tparams : {\r\n");
      out.write("\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\taction : 'checkSql',\r\n");
      out.write("\t\t\t\t\t\t\t\tsql_text : sql_text,\r\n");
      out.write("\t\t\t\t\t\t\t\tgroup_by : group_by,\r\n");
      out.write("\t\t\t\t\t\t\t\torder_by : order_by,\r\n");
      out.write("\t\t\t\t\t\t\t\tconn_id : conn_id\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\tsuccess : function(a) {\r\n");
      out.write("\t\t\t\t\t\t\t\tme.setLoading(false);\r\n");
      out.write("\t\t\t\t\t\t\t\tvar result = Ext.JSON.decode(a.responseText);\r\n");
      out.write("\t\t\t\t\t\t\t\tif (result.success) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfn();\r\n");
      out.write("\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tsql.activeErrorsTpl = conn.activeErrorsTpl;\r\n");
      out.write("\t\t\t\t\t\t\t\t\tsql.markInvalid(langs.sql_check_fail + \"</br>\" + result.msg);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\tfailure : function(f, action) {\r\n");
      out.write("\t\t\t\t\t\t\t\tme.setLoading(false);\r\n");
      out.write("\t\t\t\t\t\t\t\tsql.activeErrorsTpl = conn.activeErrorsTpl;\r\n");
      out.write("\t\t\t\t\t\t\t\tsql.markInvalid(langs.system_error);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tshowQueryWindow : function() {\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\tme.initQueryWindow();\r\n");
      out.write("\t\t\t\t\tvar pageSize = 10;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar initStore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\tfields : [ 'cols' ],\r\n");
      out.write("\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\ttype : 'json'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\tbtnid : 'headform'\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar gstore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\t/* fields : [ 'sql_id', 'sql_name', 'sql_context', 'group_by', 'order_by', 'auto_refresh', 'refresh_gap', 'use_marquee', 'marquee_location', 'marquee_type',\r\n");
      out.write("\t\t\t\t\t\t\t\t'marquee_refresh_gap', 'use_popup', 'popup_dir', 'popup_refresh_gap', 'legend', 'legend_lang', 'cross_conn_id', 'cross_sql_context',\r\n");
      out.write("\t\t\t\t\t\t\t\t'cross_order_by', 'cross_group_by', 'cross_type', 'join_key_set1', 'join_key_set2' ], */\r\n");
      out.write("\t\t\t\t\t\tfields : [ 'sql_id', 'sql_name', 'sql_context', 'group_by', 'order_by', 'auto_refresh', 'refresh_gap', 'use_marquee', 'marquee_location', 'marquee_type',\r\n");
      out.write("\t\t\t\t\t\t\t\t'marquee_refresh_gap', 'use_popup', 'popup_dir', 'popup_refresh_gap', 'legend', 'legend_lang' ],\r\n");
      out.write("\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\troot : 'items',\r\n");
      out.write("\t\t\t\t\t\t\t\ttotalProperty : 'total'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\taction : 'search',\r\n");
      out.write("\t\t\t\t\t\t\t\tpage : 1,\r\n");
      out.write("\t\t\t\t\t\t\t\tpagesize : pageSize,\r\n");
      out.write("\t\t\t\t\t\t\t\tfilter : ''\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\tpageSize : pageSize\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar gridColumns = [ {\r\n");
      out.write("\t\t\t\t\t\ttext : langs.sql_id,\r\n");
      out.write("\t\t\t\t\t\tdataIndex : 'sql_id',\r\n");
      out.write("\t\t\t\t\t\twidth : 200\r\n");
      out.write("\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\ttext : langs.sql_name,\r\n");
      out.write("\t\t\t\t\t\tdataIndex : 'sql_name',\r\n");
      out.write("\t\t\t\t\t\twidth : 200\r\n");
      out.write("\t\t\t\t\t} ];\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar openwin = Ext.create('DCI.Customer.QueryWindow', {\r\n");
      out.write("\t\t\t\t\t\theight : 335,\r\n");
      out.write("\t\t\t\t\t\twidth : 500,\r\n");
      out.write("\t\t\t\t\t\theadform : me,\r\n");
      out.write("\t\t\t\t\t\ttitle : langs.toolbar_query_title,\r\n");
      out.write("\t\t\t\t\t\tloadHeadData : function(record) {\r\n");
      out.write("\t\t\t\t\t\t\tvar head = this.headform;\r\n");
      out.write("\t\t\t\t\t\t\tvar win = this;\r\n");
      out.write("\t\t\t\t\t\t\tt1=record;\r\n");
      out.write("\t\t\t\t\t\t\t/* var crossobj = {\r\n");
      out.write("\t\t\t\t\t\t\t\tconn_id : record.get(\"cross_conn_id\"),\r\n");
      out.write("\t\t\t\t\t\t\t\tsql_context : record.get(\"cross_sql_context\"),\r\n");
      out.write("\t\t\t\t\t\t\t\torder_by : record.get(\"cross_order_by\"),\r\n");
      out.write("\t\t\t\t\t\t\t\tgroup_by : record.get(\"cross_group_by\"),\r\n");
      out.write("\t\t\t\t\t\t\t\tcross_type : record.get(\"cross_type\"),\r\n");
      out.write("\t\t\t\t\t\t\t\tjoin_key_set1 : record.get(\"join_key_set1\"),\r\n");
      out.write("\t\t\t\t\t\t\t\tjoin_key_set2 : record.get(\"join_key_set2\")\r\n");
      out.write("\t\t\t\t\t\t\t}; */\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t//this.headform.items.get(19).setValue(Ext.JSON.encode(crossobj));\r\n");
      out.write("\t\t\t\t\t\t\thead.items.get(20).mainSqlObjs = this.headform.items; //new cross db\r\n");
      out.write("\t\t\t\t\t\t\tif (crossGridStore.getProxy().extraParams.hasOwnProperty('sql_id')) {\r\n");
      out.write("\t\t\t\t\t\t\t\tcrossGridStore.getProxy().extraParams['sql_id'] = record.get(\"sql_id\");\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\tcrossGridStore.load(function(record) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar value = [];\r\n");
      out.write("\t\t\t\t\t\t\t\toriCrossGridStore.removeAll();\r\n");
      out.write("\t\t\t\t\t\t\t\tfor ( var i = 0; i < crossGridStore.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\toriCrossGridStore.add(record[i].copy());\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvalue.push(record[i].copy().data);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\thead.items.get(19).setValue(Ext.JSON.encode(value));\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tvar connsStore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\t\t\tfields : [ 'conns' ],\r\n");
      out.write("\t\t\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\troot : 'items'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\taction : 'sqlConns',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tsqlid : record.get('sql_id')\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\tconnsStore.load(function(records) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (records.length > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tconnData.setValue(records[0].get('conns'));\r\n");
      out.write("\t\t\t\t\t\t\t\t\thead.loadRecord(record);\r\n");
      out.write("\t\t\t\t\t\t\t\t\thead.setDataLoaded(true);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t/* if (bodyStore != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (bodyStore.getProxy().extraParams.hasOwnProperty('keys')) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbodyStore.getProxy().extraParams['keys'] = record.get(\"sql_id\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbodyStore.load(function(records) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tif (bodypanel != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tvar obj = new Object();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tobj[\"sql_id\"] = record.get(\"sql_id\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tbodypanel.headKeys = obj;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tbodypanel.dataloaded(head.dataloaded);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t} */\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (bodypanel != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar bodyStore = bodypanel.getGrid().getStore();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (bodyStore.getProxy().extraParams.hasOwnProperty('keys')) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbodyStore.getProxy().extraParams['keys'] = record.get(\"sql_id\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t//bodyStore.load(function(records) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tvar obj = new Object();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tobj[\"sql_id\"] = record.get(\"sql_id\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbodypanel.headKeys = obj;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbodypanel.dataloaded(head.dataloaded);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t//});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\tbodypanel.gridReload();\r\n");
      out.write("\t\t\t\t\t\t\t\t\twin.close();\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\tclickFunc : function() {\r\n");
      out.write("\t\t\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\t\t\tvar gstore = me.items.get(1).getStore();\r\n");
      out.write("\t\t\t\t\t\t\tvar fcol = me.items.get(0).items.get(0).getValue();\r\n");
      out.write("\t\t\t\t\t\t\tvar fvalue = me.items.get(0).items.get(1).getValue();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tif (gstore.getProxy().extraParams.hasOwnProperty('filter')) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (fcol == \"sql_name\") {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tgstore.getProxy().extraParams['filter'] = \" and lang_value like '%\" + fvalue + \"%' \";\r\n");
      out.write("\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tgstore.getProxy().extraParams['filter'] = \" and \" + fcol + \" like '%\" + fvalue + \"%' \";\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\tif (gstore.getProxy().extraParams.hasOwnProperty('page')) {\r\n");
      out.write("\t\t\t\t\t\t\t\tgstore.getProxy().extraParams['page'] = 1;\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\tgstore.currentPage = 1;\r\n");
      out.write("\t\t\t\t\t\t\tgstore.load();\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tinitStore.load(function(records) {\r\n");
      out.write("\t\t\t\t\t\topenwin.setInitObjects(records, gstore, gridColumns);\r\n");
      out.write("\t\t\t\t\t\tme.searchWin = openwin;\r\n");
      out.write("\t\t\t\t\t\tme.searchStore = gstore;\r\n");
      out.write("\t\t\t\t\t\topenwin.show();\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar headpanel = Ext.create('DCI.Customer.HeadPanel', {\r\n");
      out.write("\t\t\t\theight : 380,\r\n");
      out.write("\t\t\t\twidth : '100%',\r\n");
      out.write("\t\t\t\theadform : headform,\r\n");
      out.write("\t\t\t\tpostvalue : postvalue,\r\n");
      out.write("\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\tcanEdit : canEdit,\r\n");
      out.write("\t\t\t\tcusMsg : [ langs.sql_added_msg ],\r\n");
      out.write("\t\t\t\tkeepAdd : false\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\theadpanel.setCusButtons([\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\tcls : 'buildcolumn-toolbar',\r\n");
      out.write("\t\t\t\t\t\ttooltip : langs.build_column,\r\n");
      out.write("\t\t\t\t\t\tx : 215,\r\n");
      out.write("\t\t\t\t\t\ty : 3,\r\n");
      out.write("\t\t\t\t\t\twidth : 30,\r\n");
      out.write("\t\t\t\t\t\theight : 30,\r\n");
      out.write("\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\tvar bform = this.up('panel').bindform;\r\n");
      out.write("\t\t\t\t\t\t\tvar pvalue = this.up('panel').postvalue;\r\n");
      out.write("\t\t\t\t\t\t\tvar langobj = bform.languageObj;\r\n");
      out.write("\t\t\t\t\t\t\tif (bform.dataloaded) {\r\n");
      out.write("\t\t\t\t\t\t\t\tExt.Ajax.request({\r\n");
      out.write("\t\t\t\t\t\t\t\t\tmethod : 'POST',\r\n");
      out.write("\t\t\t\t\t\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tparams : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tDCITag : pvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\taction : 'bodyBuild',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tsql_id : bform.items.get(0).getValue()\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\tsuccess : function(a) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar bodyStore = bodypanel.getGrid().getStore();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar result = Ext.JSON.decode(a.responseText);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (bodyStore != null && result != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbodyStore.removeAll();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbodyStore.loadRawData(result);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langobj.info_msg_title, langobj.col_create_success);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfailure : function(f, action) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langobj.errmsg, langobj.col_create_fail);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\tcls : 'sqlcheckbutton',\r\n");
      out.write("\t\t\t\t\t\ttooltip : langs.check,\r\n");
      out.write("\t\t\t\t\t\tx : 250,\r\n");
      out.write("\t\t\t\t\t\ty : 3,\r\n");
      out.write("\t\t\t\t\t\twidth : 30,\r\n");
      out.write("\t\t\t\t\t\theight : 30,\r\n");
      out.write("\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\tvar bform = this.up('panel').bindform;\r\n");
      out.write("\t\t\t\t\t\t\tvar pvalue = this.up('panel').postvalue;\r\n");
      out.write("\t\t\t\t\t\t\tvar langobj = bform.languageObj;\r\n");
      out.write("\t\t\t\t\t\t\tif (bform.getCurrMode() == PageMode.Add || bform.dataloaded) {\r\n");
      out.write("\t\t\t\t\t\t\t\tbform.setLoading(true);\r\n");
      out.write("\t\t\t\t\t\t\t\tvar sql_text = bform.items.get(17).getValue();\r\n");
      out.write("\t\t\t\t\t\t\t\tvar group_by = bform.items.get(4).getValue();\r\n");
      out.write("\t\t\t\t\t\t\t\tvar order_by = bform.items.get(5).getValue();\r\n");
      out.write("\t\t\t\t\t\t\t\tvar conn_id = bform.items.get(18).getValue();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tExt.Ajax.request({\r\n");
      out.write("\t\t\t\t\t\t\t\t\tmethod : 'POST',\r\n");
      out.write("\t\t\t\t\t\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tparams : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tDCITag : pvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\taction : 'checkSql',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tsql_text : sql_text,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tgroup_by : group_by,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\torder_by : order_by,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tconn_id : conn_id\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\tsuccess : function(a) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tbform.setLoading(false);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar result = Ext.JSON.decode(a.responseText);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (result.success) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langobj.info_msg_title, langobj.sql_check_success);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langobj.errmsg, langobj.sql_check_fail + \"</br>\" + result.msg);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfailure : function(f, action) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tbform.setLoading(false);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langobj.errmsg, langobj.system_error);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\tcls : 'copybutton',\r\n");
      out.write("\t\t\t\t\t\ttooltip : langs.copy,\r\n");
      out.write("\t\t\t\t\t\tx : 285,\r\n");
      out.write("\t\t\t\t\t\ty : 3,\r\n");
      out.write("\t\t\t\t\t\twidth : 30,\r\n");
      out.write("\t\t\t\t\t\theight : 30,\r\n");
      out.write("\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\tvar bform = this.up('panel').bindform;\r\n");
      out.write("\t\t\t\t\t\t\tvar pvalue = this.up('panel').postvalue;\r\n");
      out.write("\t\t\t\t\t\t\tvar langobj = bform.languageObj;\r\n");
      out.write("\t\t\t\t\t\t\tif (bform != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (canEdit) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (bform.getCurrMode() == PageMode.View) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (bform.dataloaded) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tvar pageSize = 10;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tvar gstore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tfields : [ 'sql_id', 'sql_name', 'sql_context', 'group_by', 'order_by', 'auto_refresh', 'refresh_gap', 'use_marquee',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t'marquee_location', 'marquee_type', 'marquee_refresh_gap', 'use_popup', 'popup_dir', 'popup_refresh_gap', 'legend',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t'legend_lang', 'cross_conn_id', 'cross_sql_context', 'cross_order_by', 'cross_group_by', 'cross_type', 'join_key_set1',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t'join_key_set2' ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\troot : 'items',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\ttotalProperty : 'total'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\taction : 'search',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tpage : 1,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tpagesize : pageSize,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilter : ''\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tpageSize : pageSize\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tvar sqlid = bform.items.get(0).getValue();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tExt.MessageBox.confirm(langobj.confirm_title, langobj.copy_kanban_confirm, function(btn) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tif (btn == 'yes') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tExt.MessageBox.show({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle : langobj.input_sql_name,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tmsg : langobj.input_sql_name,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth : 300,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tbuttons : Ext.MessageBox.OKCANCEL,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tmultiline : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tfn : function(btn, text) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (btn == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tExt.Ajax.request({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmethod : 'POST',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tparams : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDCITag : pvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taction : 'copysql',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//sql_id : record.data.sql_id,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsql_id : sqlid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsql_name : text\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuccess : function(a) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar bodyStore = bodypanel.getGrid().getStore();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = Ext.JSON.decode(a.responseText);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result.success) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//win.close();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (gstore != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (gstore.getProxy().extraParams.hasOwnProperty('filter')) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgstore.getProxy().extraParams['filter'] = \" and sql_id = '\" + result.msg + \"'\";\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgstore.load(function(records) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (records != null && records.length > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar record = records[0];\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* var crossobj = {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconn_id : record.get(\"cross_conn_id\"),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsql_context : record.get(\"cross_sql_context\"),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\torder_by : record.get(\"cross_order_by\"),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgroup_by : record.get(\"cross_group_by\"),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcross_type : record.get(\"cross_type\"),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjoin_key_set1 : record.get(\"join_key_set1\"),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjoin_key_set2 : record.get(\"join_key_set2\")\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbform.items.get(19).setValue(Ext.JSON.encode(crossobj)); */\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbform.items.get(20).mainSqlObjs = bform.items; //new cross db\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (crossGridStore.getProxy().extraParams.hasOwnProperty('sql_id')) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcrossGridStore.getProxy().extraParams['sql_id'] = record.get(\"sql_id\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcrossGridStore.load(function(record) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar value = [];\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toriCrossGridStore.removeAll();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < crossGridStore.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toriCrossGridStore.add(record[i].copy());\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue.push(record[i].copy().data);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbform.items.get(19).setValue(Ext.JSON.encode(value));\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar connsStore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfields : [ 'conns' ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\troot : 'items'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taction : 'sqlConns',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsqlid : result.msg\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconnsStore.load(function(records) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (records.length > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconnData.setValue(records[0].get('conns'));\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbform.loadRecord(record);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbform.setDataLoaded(true);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (bodyStore != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (bodyStore.getProxy().extraParams.hasOwnProperty('keys')) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbodyStore.getProxy().extraParams['keys'] = record.get(\"sql_id\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbodyStore.load(function(records) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (bodypanel != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar obj = new Object();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tobj[\"sql_id\"] = record.get(\"sql_id\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbodypanel.headKeys = obj;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbodypanel.dataloaded(bform.dataloaded);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langobj.info_msg_title, langobj.copy_success);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langobj.errmsg, langobj.copy_fail);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langobj.errmsg, langobj.copy_fail + \"</br>\" + result.msg);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfailure : function(f, action) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langobj.errmsg, langobj.system_error);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langobj.errmsg, langobj.todo_query);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langobj.errmsg, langobj.just_use_in_view);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tExt.MessageBox.alert(langobj.errmsg, langobj.no_edit_auth);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\tcls : 'viewsqlbutton',\r\n");
      out.write("\t\t\t\t\t\ttooltip : langs.full_sql,\r\n");
      out.write("\t\t\t\t\t\tx : 320,\r\n");
      out.write("\t\t\t\t\t\ty : 3,\r\n");
      out.write("\t\t\t\t\t\twidth : 30,\r\n");
      out.write("\t\t\t\t\t\theight : 30,\r\n");
      out.write("\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\tvar bform = this.up('panel').bindform;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tvar sql_text = bform.items.get(17).getValue();\r\n");
      out.write("\t\t\t\t\t\t\tvar group_by = bform.items.get(4).getValue();\r\n");
      out.write("\t\t\t\t\t\t\tvar order_by = bform.items.get(5).getValue();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tif (sql_text != null && sql_text.length > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar fullsqlwin = Ext.create('Ext.window.Window', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tlayout : 'fit',\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttitle : 'SQL',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcloseAction : 'hide',\r\n");
      out.write("\t\t\t\t\t\t\t\t\theight : 500,\r\n");
      out.write("\t\t\t\t\t\t\t\t\twidth : 800,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tminHeight : 400,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tminWidth : 600,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tmodal : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tplain : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\titems : [ Ext.create('DCI.Customer.SqlEditor', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tlabelWidth : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\treadOnly : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tmargin : '0 0 5 0'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}) ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\tbuttons : [ {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttext : langs.close,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tthis.up('window').close();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t} ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\tsetInit : function(value) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tme.items.get(0).setValue(value);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tif (group_by != null && group_by.length > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tsql_text += \"\\r\\ngroup by \" + group_by;\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tif (order_by != null && order_by.length > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tsql_text += \"\\r\\norder by \" + order_by;\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tfullsqlwin.setInit(sql_text);\r\n");
      out.write("\t\t\t\t\t\t\t\tfullsqlwin.show();\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tExt.Msg.alert(langs.errmsg, langs.no_sql_text);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\tcls : 'sqleditwinbutton',\r\n");
      out.write("\t\t\t\t\t\ttooltip : langs.edit_sql_win,\r\n");
      out.write("\t\t\t\t\t\tx : 355,\r\n");
      out.write("\t\t\t\t\t\ty : 3,\r\n");
      out.write("\t\t\t\t\t\twidth : 30,\r\n");
      out.write("\t\t\t\t\t\theight : 30,\r\n");
      out.write("\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\tvar bform = this.up('panel').bindform;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tif (bform.getCurrMode() == PageMode.Add || bform.getCurrMode() == PageMode.Edit) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar sql_text = bform.items.get(17).getValue();\r\n");
      out.write("\t\t\t\t\t\t\t\tvar group_by = bform.items.get(4).getValue();\r\n");
      out.write("\t\t\t\t\t\t\t\tvar order_by = bform.items.get(5).getValue();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tvar sqlpanel = Ext.create('Ext.panel.Panel', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tregion : 'center',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tlayout : 'fit',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tborder : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttitle : \"\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\titems : [ Ext.create('DCI.Customer.SqlEditor', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tfieldLabel : \"SQL\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tlabelWidth : 30,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tmargin : '0 0 5 0'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}) ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\tsetInit : function(value) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tme.items.get(0).setValue(value);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\tgetSql : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\treturn me.items.get(0).getValue();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tvar spanel = Ext.create('Ext.panel.Panel', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tregion : 'south',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tlayout : 'column',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tborder : 1,\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttitle : \"\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\theight : 90,\r\n");
      out.write("\t\t\t\t\t\t\t\t\titems : [ Ext.create('Ext.panel.Panel', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcolumnWidth : 0.5,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tlayout : 'border',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tborder : 1,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttitle : \"\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\theight : 85,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tpadding : '3 2 1 3',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\titems : [ {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\txtype : 'label',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tregion : 'north',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttext : 'Group By :',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\theight : 15\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}, Ext.create('DCI.Customer.SqlEditor', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tregion : 'center',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tlabelWidth : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tmargin : '0 0 5 0'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}) ]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}), Ext.create('Ext.panel.Panel', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcolumnWidth : 0.5,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tlayout : 'border',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tborder : 1,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttitle : \"\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\theight : 85,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tpadding : '3 3 1 2',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\titems : [ {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\txtype : 'label',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tregion : 'north',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttext : 'Order By :',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\theight : 15\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}, Ext.create('DCI.Customer.SqlEditor', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tregion : 'center',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tlabelWidth : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tmargin : '0 0 5 0'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}) ]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}) ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\tsetInit : function(gb, ob) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tme.items.get(0).items.get(1).setValue(gb);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tme.items.get(1).items.get(1).setValue(ob);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\tgetGroup : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\treturn me.items.get(0).items.get(1).getValue();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\tgetOrder : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\treturn me.items.get(1).items.get(1).getValue();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tvar fullsqlwin = Ext.create('Ext.window.Window', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tlayout : 'border',\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttitle : 'SQL',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcloseAction : 'hide',\r\n");
      out.write("\t\t\t\t\t\t\t\t\theight : 600,\r\n");
      out.write("\t\t\t\t\t\t\t\t\twidth : 1000,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tminHeight : 400,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tminWidth : 600,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tmodal : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tplain : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\titems : [ sqlpanel, spanel ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\tbuttons : [ {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttext : langs.ok,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tvar win = this.up('window');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbform.items.get(17).setValue(win.items.get(0).getSql());\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbform.items.get(4).setValue(win.items.get(1).getGroup());\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbform.items.get(5).setValue(win.items.get(1).getOrder());\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\twin.close();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttext : langs.cancel,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tthis.up('window').close();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t} ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\tsetInit : function(sql, gb, ob) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tme.items.get(0).setInit(sql);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tme.items.get(1).setInit(gb, ob);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\tfullsqlwin.setInit(sql_text, group_by, order_by);\r\n");
      out.write("\t\t\t\t\t\t\t\tfullsqlwin.show();\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tExt.Msg.alert(langs.errmsg, langs.just_use_in_edit);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\tcls : 'kblink-toolbar',\r\n");
      out.write("\t\t\t\t\t\ttooltip : langs.create_link,\r\n");
      out.write("\t\t\t\t\t\tx : 390,\r\n");
      out.write("\t\t\t\t\t\ty : 3,\r\n");
      out.write("\t\t\t\t\t\twidth : 30,\r\n");
      out.write("\t\t\t\t\t\theight : 30,\r\n");
      out.write("\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\tvar bform = this.up('panel').bindform;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tif (bform.dataloaded) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar funcid = bform.items.get(0).getValue();\r\n");
      out.write("\t\t\t\t\t\t\t\tvar conngstore = bform.items.get(16).getStore();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tvar subconnstore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfields : [ 'label', 'value' ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttype : 'memory',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttype : 'json'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tvar subuserstore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfields : [ 'label', 'value' ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\troot : 'items'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\taction : 'linkusers'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tif (conngstore != null && conngstore.getCount() > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tsubconnstore.removeAll();\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < conngstore.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tsubconnstore.add({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tlabel : conngstore.getAt(i).get(\"conn_name\"),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tvalue : conngstore.getAt(i).get(\"conn_id\")\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tvar subconncombo = Ext.create('DCI.Customer.ComboBox', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfieldLabel : langs.conn_list,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tlabelWidth : 60,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tname : 'conns',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tstore : subconnstore,\r\n");
      out.write("\t\t\t\t\t\t\t\t\twidth : 250,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tx : 5,\r\n");
      out.write("\t\t\t\t\t\t\t\t\ty : 10\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tvar subusercombo = Ext.create('DCI.Customer.ComboBox', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfieldLabel : langs.user_id,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tlabelWidth : 40,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tname : 'users',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tstore : subuserstore,\r\n");
      out.write("\t\t\t\t\t\t\t\t\twidth : 250,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tx : 260,\r\n");
      out.write("\t\t\t\t\t\t\t\t\ty : 10\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tvar linktoolpanel = Ext.create('Ext.panel.Panel', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tregion : 'north',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tlayout : 'absolute',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tborder : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttitle : \"\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\theight : 40,\r\n");
      out.write("\t\t\t\t\t\t\t\t\titems : [ subconncombo, subusercombo, {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttext : langs.create_link,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tx : 515,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ty : 10,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\twidth : 60,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tif (subconncombo.getValue() == null || subconncombo.getValue().length == 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tsubconncombo.markInvalid(langs.not_allow_blank);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tExt.Ajax.request({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tmethod : 'POST',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tparams : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\taction : 'createLink',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunc_id : funcid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tconn_id : subconncombo.getValue(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tlinkuid : subusercombo.getValue()\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tsuccess : function(response) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (response.responseText.indexOf(\"@dcifiltererrtag@$\") != -1) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = response.responseText.split('$');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result.length >= 2) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar resultdata = Ext.JSON.decode(result[1]);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langs.errmsg, resultdata.msg, function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tiserror = true;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twindow.location = resultdata.result;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = Ext.JSON.decode(response.responseText);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result.success == true) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (linkfield != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlinkfield.setValue(result.linkvalue);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langs.errmsg, langs.create_link_fail);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tfailure : function(f, action) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langs.errmsg, langs.create_link_fail + \" :</br>\" + action.result.errorMessage);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tvar linkfield = Ext.create('Ext.form.field.TextArea', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tgrow : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tname : '',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfieldLabel : '',\r\n");
      out.write("\t\t\t\t\t\t\t\t\treadOnly : true\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tvar linkpanel = Ext.create('Ext.panel.Panel', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tregion : 'center',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tlayout : 'fit',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tborder : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttitle : \"\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\titems : [ linkfield ]\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tvar linkwin = Ext.create('Ext.window.Window', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tlayout : 'border',\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttitle : langs.create_link,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcloseAction : 'hide',\r\n");
      out.write("\t\t\t\t\t\t\t\t\theight : 300,\r\n");
      out.write("\t\t\t\t\t\t\t\t\twidth : 600,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tminHeight : 300,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tminWidth : 600,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tmodal : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tplain : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\titems : [ linktoolpanel, linkpanel ]\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tsubuserstore.load(function(record) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tsubusercombo.loadDefault();\r\n");
      out.write("\t\t\t\t\t\t\t\t\tsubconncombo.loadDefault();\r\n");
      out.write("\t\t\t\t\t\t\t\t\tlinkwin.show();\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tExt.Msg.alert(langs.errmsg, langs.data_never_load);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t} ]);\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar relationConfigWin = Ext.create('Ext.window.Window', {\r\n");
      out.write("\t\t\t\tlayout : 'border',\r\n");
      out.write("\t\t\t\ttitle : langs.relation_config,\r\n");
      out.write("\t\t\t\tcloseAction : 'hide',\r\n");
      out.write("\t\t\t\theight : 300,\r\n");
      out.write("\t\t\t\twidth : 570,\r\n");
      out.write("\t\t\t\tminHeight : 300,\r\n");
      out.write("\t\t\t\tminWidth : 570,\r\n");
      out.write("\t\t\t\tmodal : true,\r\n");
      out.write("\t\t\t\tplain : true,\r\n");
      out.write("\t\t\t\tselectedRecord : null,\r\n");
      out.write("\t\t\t\titems : [ {\r\n");
      out.write("\t\t\t\t\txtype : 'panel',\r\n");
      out.write("\t\t\t\t\tregion : 'north',\r\n");
      out.write("\t\t\t\t\tlayout : 'absolute',\r\n");
      out.write("\t\t\t\t\theight : 30,\r\n");
      out.write("\t\t\t\t\titems : [ Ext.create('DCI.Customer.ComboBox', {\r\n");
      out.write("\t\t\t\t\t\tfieldLabel : langs.target_sql_name,\r\n");
      out.write("\t\t\t\t\t\tlabelWidth : 80,\r\n");
      out.write("\t\t\t\t\t\twidth : 200,\r\n");
      out.write("\t\t\t\t\t\tstore : Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\t\tfields : [ 'label', 'value', 'cols' ],\r\n");
      out.write("\t\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\troot : 'items'\r\n");
      out.write("\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\taction : 'sqlcollist'\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}),\r\n");
      out.write("\t\t\t\t\t\tx : 0,\r\n");
      out.write("\t\t\t\t\t\ty : 4,\r\n");
      out.write("\t\t\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\t\t\tchange : function(combo, newValue, oldValue, eOpts) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\t\t\t\tvar store = me.getStore();\r\n");
      out.write("\t\t\t\t\t\t\t\tvar colcombo = me.up('panel').items.get(1);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tif (store == null || store.getCount() == 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcolcombo.clearItems();\r\n");
      out.write("\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar i = 0;\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar cols = null;\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfor (i = 0; i < store.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (newValue == store.getAt(i).get(\"value\")) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tcols = store.getAt(i).get(\"cols\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tif (cols == null || cols.length == 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcolcombo.clearItems();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcolcombo.getStore().loadData(cols);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcolcombo.loadDefault();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (i == store.getCount()) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcolcombo.clearItems();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}), Ext.create('DCI.Customer.ComboBox', {\r\n");
      out.write("\t\t\t\t\t\tfieldLabel : langs.target_col_name,\r\n");
      out.write("\t\t\t\t\t\tlabelWidth : 80,\r\n");
      out.write("\t\t\t\t\t\twidth : 200,\r\n");
      out.write("\t\t\t\t\t\tvalueNotFoundText : \"\",\r\n");
      out.write("\t\t\t\t\t\tx : 205,\r\n");
      out.write("\t\t\t\t\t\ty : 4,\r\n");
      out.write("\t\t\t\t\t\tclearItems : function() {\r\n");
      out.write("\t\t\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\t\t\tme.setValue(\"no_columns\");\r\n");
      out.write("\t\t\t\t\t\t\tme.getStore().loadData([]);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}), {\r\n");
      out.write("\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\ttext : langs.add,\r\n");
      out.write("\t\t\t\t\t\tx : 405,\r\n");
      out.write("\t\t\t\t\t\ty : 4,\r\n");
      out.write("\t\t\t\t\t\twidth : 40,\r\n");
      out.write("\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\tvar gridstore = this.up('panel').up('window').items.get(1).getStore();\r\n");
      out.write("\t\t\t\t\t\t\tvar combo1 = this.up('panel').items.get(0);\r\n");
      out.write("\t\t\t\t\t\t\tvar combo2 = this.up('panel').items.get(1);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tif (gridstore != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (combo1.getValue() != null && combo2.getValue() != null && combo2.getValue() != \"no_columns\") {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar exist = false;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < gridstore.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (combo1.getValue() == gridstore.getAt(i).get(\"target_sql_id\") && combo2.getValue() == gridstore.getAt(i).get(\"target_col_id\")) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\texist = true;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (exist) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langs.errmsg, langs.kanban_relation_exist);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar seq = 0;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tseq = (gridstore.getCount() + 1) * 10;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tgridstore.add({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttarget_sql_id : combo1.getValue(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttarget_sql_name : getComboLabel(combo1, combo1.getValue()),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttarget_col_id : combo2.getValue(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttarget_col_name : getComboLabel(combo2, combo2.getValue()),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tseq : seq\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\ttext : langs._delete,\r\n");
      out.write("\t\t\t\t\t\tx : 445,\r\n");
      out.write("\t\t\t\t\t\ty : 4,\r\n");
      out.write("\t\t\t\t\t\twidth : 40,\r\n");
      out.write("\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\tvar grid = this.up('panel').up('window').items.get(1);\r\n");
      out.write("\t\t\t\t\t\t\tvar selectionModel = grid.getSelectionModel();\r\n");
      out.write("\t\t\t\t\t\t\tif (selectionModel.hasSelection()) {\r\n");
      out.write("\t\t\t\t\t\t\t\tgrid.getStore().remove(grid.getSelectionModel().getSelection()[0]);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\ttext : langs.clear,\r\n");
      out.write("\t\t\t\t\t\tx : 485,\r\n");
      out.write("\t\t\t\t\t\ty : 4,\r\n");
      out.write("\t\t\t\t\t\twidth : 40,\r\n");
      out.write("\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\tvar store = this.up('panel').up('window').items.get(1).getStore();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tif (store != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\tstore.removeAll();\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\txtype : 'grid',\r\n");
      out.write("\t\t\t\t\tregion : 'center',\r\n");
      out.write("\t\t\t\t\trenderer : \"component\",\r\n");
      out.write("\t\t\t\t\tborder : 0,\r\n");
      out.write("\t\t\t\t\tstripeRows : true,\r\n");
      out.write("\t\t\t\t\tautoScroll : true,\r\n");
      out.write("\t\t\t\t\tloadMask : true,\r\n");
      out.write("\t\t\t\t\tenableTextSelection : true,\r\n");
      out.write("\t\t\t\t\tviewConfig : {\r\n");
      out.write("\t\t\t\t\t\tforceFit : false,\r\n");
      out.write("\t\t\t\t\t\tautoLoad : false\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tcolumns : [ {\r\n");
      out.write("\t\t\t\t\t\ttext : langs.target_sql_name,\r\n");
      out.write("\t\t\t\t\t\tdataIndex : 'target_sql_name',\r\n");
      out.write("\t\t\t\t\t\twidth : 250\r\n");
      out.write("\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\ttext : langs.target_col_name,\r\n");
      out.write("\t\t\t\t\t\tdataIndex : 'target_col_name',\r\n");
      out.write("\t\t\t\t\t\twidth : 150\r\n");
      out.write("\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\ttext : langs.seq,\r\n");
      out.write("\t\t\t\t\t\tdataIndex : 'seq',\r\n");
      out.write("\t\t\t\t\t\twidth : 100,\r\n");
      out.write("\t\t\t\t\t\teditor : {\r\n");
      out.write("\t\t\t\t\t\t\txtype : 'numberfield',\r\n");
      out.write("\t\t\t\t\t\t\tallowBlank : false\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t} ],\r\n");
      out.write("\t\t\t\t\tstore : Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\tfields : [ 'target_sql_id', 'target_sql_name', 'target_col_id', 'target_col_name', 'seq' ],\r\n");
      out.write("\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\ttype : 'memory',\r\n");
      out.write("\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\ttype : 'json'\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}),\r\n");
      out.write("\t\t\t\t\tplugins : [ Ext.create('Ext.grid.plugin.CellEditing', {\r\n");
      out.write("\t\t\t\t\t\tclicksToEdit : 1,\r\n");
      out.write("\t\t\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\t\t\tedit : function(editor, e, eOpts) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar store = editor.grid.getStore();\r\n");
      out.write("\t\t\t\t\t\t\t\tstore.sort('seq', 'ASC');\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}) ]\r\n");
      out.write("\t\t\t\t} ],\r\n");
      out.write("\t\t\t\tbuttons : [ {\r\n");
      out.write("\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\ttext : langs.ok,\r\n");
      out.write("\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\tvar win = this.up('window');\r\n");
      out.write("\t\t\t\t\t\tvar store = win.items.get(1).getStore();\r\n");
      out.write("\t\t\t\t\t\tvar datas = [];\r\n");
      out.write("\t\t\t\t\t\tif (store != null && win.selectedRecord != null) {\r\n");
      out.write("\t\t\t\t\t\t\tif (store.getCount() == 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\twin.selectedRecord.set(\"write_data\", \"\");\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tfor ( var i = 0; i < store.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tdatas.push({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcol_id : win.selectedRecord.get(\"col_id\"),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttarget_sql_id : store.getAt(i).get(\"target_sql_id\"),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttarget_col_id : store.getAt(i).get(\"target_col_id\"),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttarget_sql_name : store.getAt(i).get(\"target_sql_name\"),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttarget_col_name : store.getAt(i).get(\"target_col_name\"),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tseq : store.getAt(i).get(\"seq\")\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\twin.selectedRecord.set(\"write_data\", Ext.encode(datas));\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\twin.selectedRecord.set(\"relation_data\", datas);\r\n");
      out.write("\t\t\t\t\t\t\twin.selectedRecord.set(\"moditag\", 1);\r\n");
      out.write("\t\t\t\t\t\t\twin.selectedRecord.set(\"moditp\", 'upd');\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\twin.close();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\ttext : langs.cancel,\r\n");
      out.write("\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\tthis.up('window').close();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t} ],\r\n");
      out.write("\t\t\t\tsetInitData : function(record) {\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\tvar sqlcombo = me.items.get(0).items.get(0);\r\n");
      out.write("\t\t\t\t\tvar gridstore = me.items.get(1).getStore();\r\n");
      out.write("\t\t\t\t\tif (sqlcombo != null) {\r\n");
      out.write("\t\t\t\t\t\tsqlcombo.getStore().load(function(records) {\r\n");
      out.write("\t\t\t\t\t\t\tsqlcombo.loadDefault();\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tif (gridstore != null) {\r\n");
      out.write("\t\t\t\t\t\tif (record != null && record.get(\"relation_data\") != null && record.get(\"relation_data\").length > 0) {\r\n");
      out.write("\t\t\t\t\t\t\tgridstore.loadData(record.get(\"relation_data\"));\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tgridstore.removeAll();\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tme.selectedRecord = record;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar langChooseWin = Ext.create('Ext.window.Window', {\r\n");
      out.write("\t\t\t\tlayout : 'fit',\r\n");
      out.write("\t\t\t\ttitle : '',\r\n");
      out.write("\t\t\t\tcloseAction : 'hide',\r\n");
      out.write("\t\t\t\theight : 200,\r\n");
      out.write("\t\t\t\twidth : 270,\r\n");
      out.write("\t\t\t\tminHeight : 200,\r\n");
      out.write("\t\t\t\tminWidth : 270,\r\n");
      out.write("\t\t\t\tmodal : true,\r\n");
      out.write("\t\t\t\tplain : true,\r\n");
      out.write("\t\t\t\trecord : null,\r\n");
      out.write("\t\t\t\teditor : null,\r\n");
      out.write("\t\t\t\tcurrTp : '',\r\n");
      out.write("\t\t\t\titems : [ {\r\n");
      out.write("\t\t\t\t\txtype : 'grid',\r\n");
      out.write("\t\t\t\t\t//region : 'center',\r\n");
      out.write("\t\t\t\t\trenderer : \"component\",\r\n");
      out.write("\t\t\t\t\tborder : 0,\r\n");
      out.write("\t\t\t\t\thideHeaders : true,\r\n");
      out.write("\t\t\t\t\tstripeRows : true,\r\n");
      out.write("\t\t\t\t\tautoScroll : true,\r\n");
      out.write("\t\t\t\t\tloadMask : true,\r\n");
      out.write("\t\t\t\t\tenableTextSelection : true,\r\n");
      out.write("\t\t\t\t\tviewConfig : {\r\n");
      out.write("\t\t\t\t\t\tforceFit : false,\r\n");
      out.write("\t\t\t\t\t\tautoLoad : false\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tcolumns : [ {\r\n");
      out.write("\t\t\t\t\t\ttext : langs.target_sql_name,\r\n");
      out.write("\t\t\t\t\t\tdataIndex : 'lang_value',\r\n");
      out.write("\t\t\t\t\t\twidth : '100%'\r\n");
      out.write("\t\t\t\t\t} ],\r\n");
      out.write("\t\t\t\t\tstore : Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\tfields : [ 'lang_value' ],\r\n");
      out.write("\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\troot : 'items'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\taction : 'langList',\r\n");
      out.write("\t\t\t\t\t\t\t\tlangtp : '',\r\n");
      out.write("\t\t\t\t\t\t\t\tkey : ''\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}),\r\n");
      out.write("\t\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\t\tcelldblclick : function(grid, td, cellIndex, record, tr, rowIndex, e, eOpts) {\r\n");
      out.write("\t\t\t\t\t\t\tvar me = this.up('window');\r\n");
      out.write("\t\t\t\t\t\t\tif (me.record != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (me.currTp == 'CHT') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tme.record.set(\"cht\", record.data.lang_value);\r\n");
      out.write("\t\t\t\t\t\t\t\t} else if (me.currTp == 'CHS') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tme.record.set(\"chs\", record.data.lang_value);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tif (me.editor != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\tme.editor.setValue(record.data.lang_value);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tme.close();\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t} ],\r\n");
      out.write("\t\t\t\tsetInitData : function(langtp, editor, record) {\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\tvar gridstore = me.items.get(0).getStore();\r\n");
      out.write("\t\t\t\t\tif (langtp == 'CHT') {\r\n");
      out.write("\t\t\t\t\t\tme.title = langs.cht;\r\n");
      out.write("\t\t\t\t\t} else if (langtp == 'CHS') {\r\n");
      out.write("\t\t\t\t\t\tme.title = langs.chs;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tme.currTp = langtp;\r\n");
      out.write("\t\t\t\t\tme.record = record;\r\n");
      out.write("\t\t\t\t\tme.editor = editor;\r\n");
      out.write("\t\t\t\t\tif (gridstore.getProxy().extraParams.hasOwnProperty('langtp')) {\r\n");
      out.write("\t\t\t\t\t\tgridstore.getProxy().extraParams['langtp'] = langtp;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tif (gridstore.getProxy().extraParams.hasOwnProperty('key')) {\r\n");
      out.write("\t\t\t\t\t\tgridstore.getProxy().extraParams['key'] = record.data.col_id;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tgridstore.load();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar bodyplugin = Ext.create('Ext.grid.plugin.CellEditing', {\r\n");
      out.write("\t\t\t\tclicksToEdit : 1,\r\n");
      out.write("\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\tbeforeedit : function(editor, e, eOpts) {\r\n");
      out.write("\t\t\t\t\t\tif (e.grid.up('panel').currmode == PageMode.View) {\r\n");
      out.write("\t\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tif (e.record.get(\"moditp\") != \"add\") {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (e.grid.up('panel').keyfields != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar keys = e.grid.up('panel').keyfields;\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < keys.length; i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (keys[i] == e.column.dataIndex) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tedit : function(editor, e, eOpts) {\r\n");
      out.write("\t\t\t\t\t\tif (e.record.get(\"moditag\") != 1) {\r\n");
      out.write("\t\t\t\t\t\t\tif (e.record != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\te.record.set(\"moditag\", 1);\r\n");
      out.write("\t\t\t\t\t\t\t\te.record.set(\"moditp\", \"edit\");\r\n");
      out.write("\t\t\t\t\t\t\t\te.record.commit();\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\te.grid.getStore().sort({\r\n");
      out.write("\t\t\t\t\t\t\tproperty : 'col_seq',\r\n");
      out.write("\t\t\t\t\t\t\tdirection : 'ASC'\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\te.grid.getStore().sort({\r\n");
      out.write("\t\t\t\t\t\t\tproperty : 'fix_row',\r\n");
      out.write("\t\t\t\t\t\t\tdirection : 'ASC'\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar bodyColumns = [ {\r\n");
      out.write("\t\t\t\txtype : 'rownumberer',\r\n");
      out.write("\t\t\t\tcolid : 'colrownum',\r\n");
      out.write("\t\t\t\twidth : 40,\r\n");
      out.write("\t\t\t\tsortable : false,\r\n");
      out.write("\t\t\t\tlocked : true\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\ttext : langs.col_id,\r\n");
      out.write("\t\t\t\tdataIndex : 'col_id',\r\n");
      out.write("\t\t\t\tcolid : 'colcol_id',\r\n");
      out.write("\t\t\t\twidth : 150\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\ttext : langs.col_type,\r\n");
      out.write("\t\t\t\tdataIndex : 'col_type',\r\n");
      out.write("\t\t\t\tcolid : 'colcol_type',\r\n");
      out.write("\t\t\t\twidth : 150,\r\n");
      out.write("\t\t\t\teditor : Ext.create('Ext.grid.CellEditor', {\r\n");
      out.write("\t\t\t\t\tfield : column_type_combo,\r\n");
      out.write("\t\t\t\t\tautoSize : {\r\n");
      out.write("\t\t\t\t\t\twidth : 'boundEl',\r\n");
      out.write("\t\t\t\t\t\theight : 'field'\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}),\r\n");
      out.write("\t\t\t\trenderer : function(value) {\r\n");
      out.write("\t\t\t\t\ttry {\r\n");
      out.write("\t\t\t\t\t\tvalue = this.transType(value);\r\n");
      out.write("\t\t\t\t\t} catch (e) {\r\n");
      out.write("\t\t\t\t\t\tif (window.console) {\r\n");
      out.write("\t\t\t\t\t\t\tconsole.log(e.message);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\treturn value;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\ttext : langs.config_value,\r\n");
      out.write("\t\t\t\tdataIndex : 'config_value',\r\n");
      out.write("\t\t\t\tcolid : 'colconfig_value',\r\n");
      out.write("\t\t\t\twidth : 200,\r\n");
      out.write("\t\t\t\teditor : {\r\n");
      out.write("\t\t\t\t\tallowBlank : true\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tgetEditor : function(record) {\r\n");
      out.write("\t\t\t\t\tvar newValue = record.get('col_type');\r\n");
      out.write("\t\t\t\t\tvar neditor = null;\r\n");
      out.write("\t\t\t\t\tif (newValue == \"DATE\") {\r\n");
      out.write("\t\t\t\t\t\tneditor = date_format_combo;\r\n");
      out.write("\t\t\t\t\t} else if (newValue == \"IMAGELINK\" || newValue == \"CHAR\") {\r\n");
      out.write("\t\t\t\t\t\tneditor = Ext.create('DCI.Customer.TextField', {\r\n");
      out.write("\t\t\t\t\t\t\tfieldLabel : \"\",\r\n");
      out.write("\t\t\t\t\t\t\tlabelWidth : 0,\r\n");
      out.write("\t\t\t\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\t\t\t\treadOnly : true,\r\n");
      out.write("\t\t\t\t\t\t\tallowBlank : true\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tneditor = Ext.create('DCI.Customer.TextField', {\r\n");
      out.write("\t\t\t\t\t\t\tfieldLabel : \"\",\r\n");
      out.write("\t\t\t\t\t\t\tlabelWidth : 0,\r\n");
      out.write("\t\t\t\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\t\t\t\tallowBlank : true\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tneditor.loadDefault();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\treturn Ext.create('Ext.grid.CellEditor', {\r\n");
      out.write("\t\t\t\t\t\tfield : neditor\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\ttext : langs.col_lang_key,\r\n");
      out.write("\t\t\t\tdataIndex : 'col_lang_key',\r\n");
      out.write("\t\t\t\tcolid : 'colcol_lang_key',\r\n");
      out.write("\t\t\t\twidth : 150\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\ttext : langs.cht,\r\n");
      out.write("\t\t\t\tdataIndex : 'cht',\r\n");
      out.write("\t\t\t\tcolid : 'colcht',\r\n");
      out.write("\t\t\t\twidth : 200,\r\n");
      out.write("\t\t\t\teditor : {\r\n");
      out.write("\t\t\t\t\txtype : 'dcitriggereditor',\r\n");
      out.write("\t\t\t\t\tallowBlank : true,\r\n");
      out.write("\t\t\t\t\tonTriggerClick : function() {\r\n");
      out.write("\t\t\t\t\t\tvar grid = bodypanel.getGrid();\r\n");
      out.write("\t\t\t\t\t\tvar record = grid.getSelectionModel().getSelection()[0];\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\tif (langChooseWin != null) {\r\n");
      out.write("\t\t\t\t\t\t\tlangChooseWin.setInitData(\"CHT\", this, record);\r\n");
      out.write("\t\t\t\t\t\t\tlangChooseWin.show();\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\ttext : langs.chs,\r\n");
      out.write("\t\t\t\tdataIndex : 'chs',\r\n");
      out.write("\t\t\t\tcolid : 'colchs',\r\n");
      out.write("\t\t\t\twidth : 200,\r\n");
      out.write("\t\t\t\teditor : {\r\n");
      out.write("\t\t\t\t\txtype : 'dcitriggereditor',\r\n");
      out.write("\t\t\t\t\tallowBlank : true,\r\n");
      out.write("\t\t\t\t\tonTriggerClick : function() {\r\n");
      out.write("\t\t\t\t\t\tvar grid = bodypanel.getGrid();\r\n");
      out.write("\t\t\t\t\t\tvar record = grid.getSelectionModel().getSelection()[0];\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\tif (langChooseWin != null) {\r\n");
      out.write("\t\t\t\t\t\t\tlangChooseWin.setInitData(\"CHS\", this, record);\r\n");
      out.write("\t\t\t\t\t\t\tlangChooseWin.show();\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\ttext : langs.col_ori_name,\r\n");
      out.write("\t\t\t\tdataIndex : 'col_ori_name',\r\n");
      out.write("\t\t\t\tcolid : 'colcol_ori_name',\r\n");
      out.write("\t\t\t\twidth : 200,\r\n");
      out.write("\t\t\t\teditor : {\r\n");
      out.write("\t\t\t\t\txtype : 'textareafield',\r\n");
      out.write("\t\t\t\t\tallowBlank : true,\r\n");
      out.write("\t\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\t\tpaste : {\r\n");
      out.write("\t\t\t\t\t\t\telement : 'inputEl',\r\n");
      out.write("\t\t\t\t\t\t\tdelay : 1,\r\n");
      out.write("\t\t\t\t\t\t\tfn : function(event, inputEl) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (event.type == \"paste\") {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar nv = inputEl.value;\r\n");
      out.write("\t\t\t\t\t\t\t\t\tnv = nv.replace(/(\\r|\\n)/g, \" \");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tnv = nv.replace(/(<)/g, \" < \");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tnv = nv.replace(/(>)/g, \" > \");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tinputEl.value = nv;\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\tchange : function(comp, newValue, oldValue, eOpts) {\r\n");
      out.write("\t\t\t\t\t\t\tnewValue = newValue.replace(/(\\r|\\n)/g, \" \");\r\n");
      out.write("\t\t\t\t\t\t\tif (newValue.indexOf(\" < \") == -1) {\r\n");
      out.write("\t\t\t\t\t\t\t\tnewValue = newValue.replace(/(<)/g, \" < \");\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\tif (newValue.indexOf(\" > \") == -1) {\r\n");
      out.write("\t\t\t\t\t\t\t\tnewValue = newValue.replace(/(>)/g, \" > \");\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\tcomp.setValue(newValue);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\ttext : langs.col_width,\r\n");
      out.write("\t\t\t\tdataIndex : 'col_width',\r\n");
      out.write("\t\t\t\tcolid : 'colcol_width',\r\n");
      out.write("\t\t\t\twidth : 100,\r\n");
      out.write("\t\t\t\teditor : {\r\n");
      out.write("\t\t\t\t\txtype : 'numberfield',\r\n");
      out.write("\t\t\t\t\tallowBlank : false,\r\n");
      out.write("\t\t\t\t\tminValue : 0,\r\n");
      out.write("\t\t\t\t\tmaxValue : 5000\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\ttext : langs.col_seq,\r\n");
      out.write("\t\t\t\tdataIndex : 'col_seq',\r\n");
      out.write("\t\t\t\tcolid : 'colcol_seq',\r\n");
      out.write("\t\t\t\twidth : 100,\r\n");
      out.write("\t\t\t\teditor : {\r\n");
      out.write("\t\t\t\t\txtype : 'numberfield',\r\n");
      out.write("\t\t\t\t\tallowBlank : false,\r\n");
      out.write("\t\t\t\t\tminValue : 0,\r\n");
      out.write("\t\t\t\t\tmaxValue : 99999\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\ttext : langs.col_relation,\r\n");
      out.write("\t\t\t\tdataIndex : 'relation_image',\r\n");
      out.write("\t\t\t\tcolid : 'colrelation',\r\n");
      out.write("\t\t\t\talign : 'center',\r\n");
      out.write("\t\t\t\twidth : 100,\r\n");
      out.write("\t\t\t\trenderer : function(value, metaData, record) {\r\n");
      out.write("\t\t\t\t\tif (record.data.relation_data != null && record.data.relation_data != '') {\r\n");
      out.write("\t\t\t\t\t\tmetaData.style = 'background-color:#FFFFBB !important;';\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\treturn \"<img src='\" + value + \"' />\";\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\txtype : 'dcicheckcolumn',\r\n");
      out.write("\t\t\t\ttext : langs.visible,\r\n");
      out.write("\t\t\t\tdataIndex : 'visible',\r\n");
      out.write("\t\t\t\tcolid : 'colvisible',\r\n");
      out.write("\t\t\t\twidth : 100\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\txtype : 'dcicheckcolumn',\r\n");
      out.write("\t\t\t\ttext : langs.is_popup,\r\n");
      out.write("\t\t\t\tdataIndex : 'is_popup',\r\n");
      out.write("\t\t\t\tcolid : 'colis_popup',\r\n");
      out.write("\t\t\t\twidth : 100\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\txtype : 'dcicheckcolumn',\r\n");
      out.write("\t\t\t\ttext : langs.popup_title,\r\n");
      out.write("\t\t\t\tdataIndex : 'popup_title',\r\n");
      out.write("\t\t\t\tcolid : 'colpopup_title',\r\n");
      out.write("\t\t\t\twidth : 100\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\ttext : langs.calc_rule,\r\n");
      out.write("\t\t\t\tdataIndex : 'calc_rule',\r\n");
      out.write("\t\t\t\tcolid : 'colcalc_rule',\r\n");
      out.write("\t\t\t\twidth : 200,\r\n");
      out.write("\t\t\t\teditor : {\r\n");
      out.write("\t\t\t\t\tallowBlank : true\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t} ];\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar bodygrid = Ext.create('Ext.grid.Panel', {\r\n");
      out.write("\t\t\t\tregion : 'center',\r\n");
      out.write("\t\t\t\tstripeRows : true,\r\n");
      out.write("\t\t\t\tautoScroll : true,\r\n");
      out.write("\t\t\t\tloadMask : true,\r\n");
      out.write("\t\t\t\tallowDeselect : true,\r\n");
      out.write("\t\t\t\tselModel : {\r\n");
      out.write("\t\t\t\t\tallowDeselect : true\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tenableTextSelection : true,\r\n");
      out.write("\t\t\t\tviewConfig : {\r\n");
      out.write("\t\t\t\t\tforceFit : false,\r\n");
      out.write("\t\t\t\t\tautoLoad : false\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tcolumns : [],\r\n");
      out.write("\t\t\t\ttransSource : [],\r\n");
      out.write("\t\t\t\ttransType : function(value) {\r\n");
      out.write("\t\t\t\t\tfor ( var i = 0; i < this.transSource.length; i++) {\r\n");
      out.write("\t\t\t\t\t\tif (this.transSource[i].value == value) {\r\n");
      out.write("\t\t\t\t\t\t\tvalue = this.transSource[i].label;\r\n");
      out.write("\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t//value = getComboLabel(column_type_combo, value);\r\n");
      out.write("\t\t\t\t\treturn value;\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tstore : Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\tfields : [ 'sql_id', 'col_id', 'col_lang_key', 'col_type', 'col_ori_name', 'col_width', 'col_seq', 'locked', 'config_value', 'cht', 'chs', 'moditag', 'moditp',\r\n");
      out.write("\t\t\t\t\t\t\t\"relation_image\", \"relation_data\", {\r\n");
      out.write("\t\t\t\t\t\t\t\tname : 'visible',\r\n");
      out.write("\t\t\t\t\t\t\t\ttype : 'bool'\r\n");
      out.write("\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\tname : 'is_popup',\r\n");
      out.write("\t\t\t\t\t\t\t\ttype : 'bool'\r\n");
      out.write("\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\tname : 'popup_title',\r\n");
      out.write("\t\t\t\t\t\t\t\ttype : 'bool'\r\n");
      out.write("\t\t\t\t\t\t\t}, \"calc_rule\" ],\r\n");
      out.write("\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\troot : 'items'\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\taction : 'bodyData',\r\n");
      out.write("\t\t\t\t\t\t\tkeys : ''\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}),\r\n");
      out.write("\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\tcelldblclick : function(view, td, cellIndex, record, tr, rowIndex, e, eOpts) {\r\n");
      out.write("\t\t\t\t\t\tvar me = bodypanel;\r\n");
      out.write("\t\t\t\t\t\tif (me.currmode == PageMode.Edit) {\r\n");
      out.write("\t\t\t\t\t\t\tif (view.headerCt.gridDataColumns[cellIndex].dataIndex == \"relation_image\") {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (me.configWin != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tme.configWin.setInitData(record);\r\n");
      out.write("\t\t\t\t\t\t\t\t\tme.configWin.show();\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t} else if (view.headerCt.gridDataColumns[cellIndex].colid == 'colchtpicker') {\r\n");
      out.write("\t\t\t\t\t\t\t\talert(\"cht\");\r\n");
      out.write("\t\t\t\t\t\t\t} else if (view.headerCt.gridDataColumns[cellIndex].colid == 'colchspicker') {\r\n");
      out.write("\t\t\t\t\t\t\t\talert(\"chs\");\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tplugins : [ bodyplugin ]\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar bodypanel = Ext.create('Ext.panel.Panel', {\r\n");
      out.write("\t\t\t\tregion : 'center',\r\n");
      out.write("\t\t\t\tlayout : 'border',\r\n");
      out.write("\t\t\t\tborder : 0,\r\n");
      out.write("\t\t\t\tbodyStyle : {\r\n");
      out.write("\t\t\t\t\tbackground : \"#eaf1fb\"\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tbodyPadding : 5,\r\n");
      out.write("\t\t\t\theadform : headform,\r\n");
      out.write("\t\t\t\tactionurl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\tlanguageObj : langs,\r\n");
      out.write("\t\t\t\tgridid : 'SQLEditor_G01',\r\n");
      out.write("\t\t\t\tcurrmode : PageMode.View,\r\n");
      out.write("\t\t\t\tdataloaded : false,\r\n");
      out.write("\t\t\t\tpostvalue : postvalue,\r\n");
      out.write("\t\t\t\tkeyfields : [ 'sql_id', 'col_id' ],\r\n");
      out.write("\t\t\t\theadKeys : {},\r\n");
      out.write("\t\t\t\tcanEdit : canEdit,\r\n");
      out.write("\t\t\t\toriGColumns : bodyColumns,\r\n");
      out.write("\t\t\t\tstopUsingBtn : [ 0, 2 ],\r\n");
      out.write("\t\t\t\tconfigWin : relationConfigWin,\r\n");
      out.write("\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\tcusFormatIconPath : '',\r\n");
      out.write("\t\t\t\ttools : [ {\r\n");
      out.write("\t\t\t\t\ttype : 'up',\r\n");
      out.write("\t\t\t\t\theadHeight : 0,\r\n");
      out.write("\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\t\tvar panel = me.up('panel');\r\n");
      out.write("\t\t\t\t\t\tvar hpanel = panel.headform.up('panel');\r\n");
      out.write("\t\t\t\t\t\tif (hpanel != null) {\r\n");
      out.write("\t\t\t\t\t\t\tif (me.headHeight == 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\tme.setType('down');\r\n");
      out.write("\t\t\t\t\t\t\t\tme.headHeight = hpanel.getHeight();\r\n");
      out.write("\t\t\t\t\t\t\t\thpanel.setHeight(0);\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tme.setType('up');\r\n");
      out.write("\t\t\t\t\t\t\t\thpanel.setHeight(me.headHeight);\r\n");
      out.write("\t\t\t\t\t\t\t\tme.headHeight = 0;\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t} ],\r\n");
      out.write("\t\t\t\titems : [ {\r\n");
      out.write("\t\t\t\t\txtype : 'panel',\r\n");
      out.write("\t\t\t\t\tregion : 'north',\r\n");
      out.write("\t\t\t\t\tborder : 0,\r\n");
      out.write("\t\t\t\t\tlayout : 'absolute',\r\n");
      out.write("\t\t\t\t\theight : 40,\r\n");
      out.write("\t\t\t\t\tx : 400,\r\n");
      out.write("\t\t\t\t\ty : 0,\r\n");
      out.write("\t\t\t\t\titems : [ {\r\n");
      out.write("\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\t// text : this.up('panel').up('panel').languageObj == null ? 'add' :\r\n");
      out.write("\t\t\t\t\t\t// this.up('panel').up('panel').languageObj.add,\r\n");
      out.write("\t\t\t\t\t\twidth : 50,\r\n");
      out.write("\t\t\t\t\t\tdisabled : true,\r\n");
      out.write("\t\t\t\t\t\tx : 0,\r\n");
      out.write("\t\t\t\t\t\ty : 5,\r\n");
      out.write("\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\tvar currmode = this.up('panel').up('panel').currmode;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tif (currmode == PageMode.Edit) {\r\n");
      out.write("\t\t\t\t\t\t\t\tthis.up('panel').up('panel').addNewRow();\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\t// text : this.up('panel').up('panel').languageObj == null ? 'save'\r\n");
      out.write("\t\t\t\t\t\t// : this.up('panel').up('panel').languageObj.save,\r\n");
      out.write("\t\t\t\t\t\tdisabled : true,\r\n");
      out.write("\t\t\t\t\t\twidth : 50,\r\n");
      out.write("\t\t\t\t\t\tx : 55,\r\n");
      out.write("\t\t\t\t\t\ty : 5,\r\n");
      out.write("\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\tvar bodypanel = this.up('panel').up('panel');\r\n");
      out.write("\t\t\t\t\t\t\tvar currmode = bodypanel.currmode;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tif (currmode == PageMode.Edit) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (bodypanel.valided()) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar langobj = bodypanel.languageObj;\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar store = bodypanel.items.get(1).getStore();\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (bodypanel.items.get(1).plugins[0] != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tbodypanel.items.get(1).plugins[0].completeEdit();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar datas = [];\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar addRows = 0;\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < store.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (store.getAt(i).get(\"moditag\") == 1) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tdatas.push(store.getAt(i).data);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tif (store.getAt(i).get(\"moditp\") == 'add') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\taddRows++;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\tExt.Ajax.request({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tmethod : 'POST',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\turl : bodypanel.actionurl,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tparams : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tDCITag : bodypanel.postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tuid : bodypanel.uid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\taction : 'bodySave',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tdatas : Ext.encode(datas),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tallAdd : store.getCount() == addRows\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tsuccess : function(a) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbodypanel.gridReload();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langobj.save_result_title, langobj.save_success);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tfailure : function(f, action) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langobj.save_result_title, langobj.save_fail + \" :</br>\" + action.result.errorMessage);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\t// text : this.up('panel').up('panel').languageObj == null ?\r\n");
      out.write("\t\t\t\t\t\t// '_delete' : this.up('panel').up('panel').languageObj._delete,\r\n");
      out.write("\t\t\t\t\t\tdisabled : true,\r\n");
      out.write("\t\t\t\t\t\twidth : 50,\r\n");
      out.write("\t\t\t\t\t\tx : 110,\r\n");
      out.write("\t\t\t\t\t\ty : 5,\r\n");
      out.write("\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\tvar bodypanel = this.up('panel').up('panel');\r\n");
      out.write("\t\t\t\t\t\t\tvar currmode = bodypanel.currmode;\r\n");
      out.write("\t\t\t\t\t\t\tvar grid = bodypanel.items.get(1);\r\n");
      out.write("\t\t\t\t\t\t\tvar langobj = bodypanel.languageObj;\r\n");
      out.write("\t\t\t\t\t\t\tvar url = bodypanel.actionurl;\r\n");
      out.write("\t\t\t\t\t\t\tExt.MessageBox.confirm(langobj.delete_confirm_title, langobj.delete_confirm_msg, function(btn) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (btn == 'yes') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (currmode == PageMode.Edit) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (grid != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tvar s = grid.getSelectionModel().getSelection();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tif (s.length > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tExt.Ajax.request({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tmethod : 'POST',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\turl : url,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tparams : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tDCITag : bodypanel.postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tuid : bodypanel.uid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\taction : 'bodyDelete',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tdatas : Ext.encode(s[0].data)\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tsuccess : function(a) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tbodypanel.gridReload();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langobj.delete_result_title, langobj.delete_success);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tfailure : function(f, action) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langobj.delete_result_title, langobj.delete_fail + \" :</br>\" + action.result.errorMessage);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\t// text : 'view',\r\n");
      out.write("\t\t\t\t\t\tdisabled : true,\r\n");
      out.write("\t\t\t\t\t\twidth : 100,\r\n");
      out.write("\t\t\t\t\t\tx : 165,\r\n");
      out.write("\t\t\t\t\t\ty : 5,\r\n");
      out.write("\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\tvar bodypanel = this.up('panel').up('panel');\r\n");
      out.write("\t\t\t\t\t\t\tif (bodypanel.canEdit) {\r\n");
      out.write("\t\t\t\t\t\t\t\tbodypanel.changeMode(bodypanel.currmode);\r\n");
      out.write("\t\t\t\t\t\t\t\tif (bodypanel.currmode == PageMode.View) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tbodypanel.gridReload();\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tExt.MessageBox.alert(this.up('panel').up('panel').languageObj.errmsg, this.up('panel').up('panel').languageObj.no_edit_auth);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\twidth : 100,\r\n");
      out.write("\t\t\t\t\t\tx : 270,\r\n");
      out.write("\t\t\t\t\t\ty : 5,\r\n");
      out.write("\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\tvar panel = this.up('panel').up('panel');\r\n");
      out.write("\t\t\t\t\t\t\tvar grid = panel.items.get(1);\r\n");
      out.write("\t\t\t\t\t\t\tvar cols = grid.getView().headerCt.getGridColumns();\r\n");
      out.write("\t\t\t\t\t\t\tvar langobj = panel.languageObj;\r\n");
      out.write("\t\t\t\t\t\t\tvar colinfo = [];\r\n");
      out.write("\t\t\t\t\t\t\tfor ( var i = 0; i < cols.length; i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar obj = new Object();\r\n");
      out.write("\t\t\t\t\t\t\t\tobj['col_id'] = cols[i].colid;\r\n");
      out.write("\t\t\t\t\t\t\t\tobj['col_index'] = cols[i].getIndex();\r\n");
      out.write("\t\t\t\t\t\t\t\tobj['col_width'] = cols[i].width;\r\n");
      out.write("\t\t\t\t\t\t\t\tobj['col_visible'] = cols[i].hidden ? 0 : 1;\r\n");
      out.write("\t\t\t\t\t\t\t\tcolinfo.push(obj);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tExt.Ajax.request({\r\n");
      out.write("\t\t\t\t\t\t\t\tmethod : 'POST',\r\n");
      out.write("\t\t\t\t\t\t\t\turl : './../../PublicCtrl.dsc',\r\n");
      out.write("\t\t\t\t\t\t\t\tparams : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tDCITag : this.up('panel').up('panel').postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tuid : this.up('panel').up('panel').uid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\taction : 'saveGFormat',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tgridid : this.up('panel').up('panel').gridid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tdatas : Ext.encode(colinfo)\r\n");
      out.write("\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\tsuccess : function(a) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tpanel.addCusFormatIcon();\r\n");
      out.write("\t\t\t\t\t\t\t\t\tExt.Msg.alert(langobj.save_result_title, langobj.save_success);\r\n");
      out.write("\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\tfailure : function(f, action) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tExt.Msg.alert(langobj.save_result_title, langobj.save_fail + \" :</br>\" + action.result.errorMessage);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\twidth : 120,\r\n");
      out.write("\t\t\t\t\t\tx : 375,\r\n");
      out.write("\t\t\t\t\t\ty : 5,\r\n");
      out.write("\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\tvar panel = this.up('panel').up('panel');\r\n");
      out.write("\t\t\t\t\t\t\tvar grid = panel.items.get(1);\r\n");
      out.write("\t\t\t\t\t\t\tvar langobj = panel.languageObj;\r\n");
      out.write("\t\t\t\t\t\t\tvar ogc = panel.getOGC();\r\n");
      out.write("\t\t\t\t\t\t\tExt.MessageBox.confirm(langobj.load_def_confirm_title, langobj.load_def_confirm_msg, function(btn) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (btn == 'yes') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tExt.Ajax.request({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tmethod : 'POST',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\turl : './../../PublicCtrl.dsc',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tparams : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tDCITag : panel.postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tuid : panel.uid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\taction : 'clearGFormat',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tgridid : panel.gridid\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tsuccess : function(a) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tgrid.reconfigure(null, ogc);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tpanel.rmCusFormatIcon();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langobj.load_def_result_title, langobj.load_def_success);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tfailure : function(f, action) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langobj.load_def_result_title, langobj.load_def_fail + \" :</br>\" + action.result.errorMessage);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t}, bodygrid ],\r\n");
      out.write("\t\t\t\tgetOGC : function() {\r\n");
      out.write("\t\t\t\t\treturn this.oriGColumns;\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tisCusFormatExist : function() {\r\n");
      out.write("\t\t\t\t\tvar panel = this.items.get(0);\r\n");
      out.write("\t\t\t\t\tvar exist = false;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tfor ( var i = 0; i < panel.items.length; i++) {\r\n");
      out.write("\t\t\t\t\t\tif (panel.items.get(i).iconid == 'cusicon') {\r\n");
      out.write("\t\t\t\t\t\t\texist = true;\r\n");
      out.write("\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\treturn exist;\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\taddCusFormatIcon : function() {\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\tvar panel = this.items.get(0);\r\n");
      out.write("\t\t\t\t\tvar lastItemIdx = panel.items.length - 1;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tif (!me.isCusFormatExist()) {\r\n");
      out.write("\t\t\t\t\t\tpanel.items.insert(panel.items.length, Ext.create('DCI.Customer.Img', {\r\n");
      out.write("\t\t\t\t\t\t\ticonid : 'cusicon',\r\n");
      out.write("\t\t\t\t\t\t\tsrc : me.cusFormatIconPath,\r\n");
      out.write("\t\t\t\t\t\t\tx : panel.items.get(lastItemIdx).x + panel.items.get(lastItemIdx).width + 2,\r\n");
      out.write("\t\t\t\t\t\t\ty : 8,\r\n");
      out.write("\t\t\t\t\t\t\twidth : 20,\r\n");
      out.write("\t\t\t\t\t\t\theight : 20,\r\n");
      out.write("\t\t\t\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\t\t\t\tafterrender : function(c) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tExt.create('Ext.tip.ToolTip', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttarget : c.getEl(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\thtml : me.languageObj.cus_format\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}));\r\n");
      out.write("\t\t\t\t\t\tpanel.doLayout();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\trmCusFormatIcon : function() {\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\tvar panel = this.items.get(0);\r\n");
      out.write("\t\t\t\t\tif (me.isCusFormatExist()) {\r\n");
      out.write("\t\t\t\t\t\tpanel.items.get(panel.items.length - 1).destroy();\r\n");
      out.write("\t\t\t\t\t\tpanel.items.remove(panel.items.get(panel.items.length - 1));\r\n");
      out.write("\t\t\t\t\t\tpanel.doLayout();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tinitBody : function() {\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\tvar bodyGrid = this.items.get(1);\r\n");
      out.write("\t\t\t\t\tvar panel = me.items.get(0);\r\n");
      out.write("\t\t\t\t\tvar store = bodyGrid.getStore();\r\n");
      out.write("\t\t\t\t\tvar columns = bodyColumns;//bodyGrid.columns;\r\n");
      out.write("\t\t\t\t\tvar tmpcols = [];\r\n");
      out.write("\t\t\t\t\tme.oriGColumns = [];\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tif (me.cusFormatIconPath == null || me.cusFormatIconPath == '') {\r\n");
      out.write("\t\t\t\t\t\tme.cusFormatIconPath = \"../../images/icons/CusGridFormat.png\";\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tfor ( var i = 0; i < columns.length; i++) {\r\n");
      out.write("\t\t\t\t\t\tme.oriGColumns.push(columns[i]);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar colsStore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\tfields : [ 'colFormats' ],\r\n");
      out.write("\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\t\turl : './../../PublicCtrl.dsc',\r\n");
      out.write("\t\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\ttype : 'json'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\t\tDCITag : me.postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\tuid : me.uid,\r\n");
      out.write("\t\t\t\t\t\t\t\taction : 'getGFormat',\r\n");
      out.write("\t\t\t\t\t\t\t\tgridid : me.gridid\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tcolsStore.load(function(record) {\r\n");
      out.write("\t\t\t\t\t\tif (record.length > 0) {\r\n");
      out.write("\t\t\t\t\t\t\tvar tmpstore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\t\t\tfields : [ 'col_id', 'col_index', 'col_width', 'col_visible' ],\r\n");
      out.write("\t\t\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttype : 'memory',\r\n");
      out.write("\t\t\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttype : 'json'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\ttmpstore.loadData(record[0].get('colFormats'));\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tif (tmpstore.getCount() > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\tme.addCusFormatIcon();\r\n");
      out.write("\t\t\t\t\t\t\t\tfor ( var i = 0; i < tmpstore.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfor ( var j = 0; j < columns.length; j++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (columns[j].colid == tmpstore.getAt(i).get('col_id')) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tif (tmpstore.getAt(i).get('col_visible') == '1') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tif (columns[j].hasOwnProperty('hidden')) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tcolumns[j].hidden = false;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tcolumns[j]['hidden'] = false;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tif (tmpstore.getAt(i).get('col_width') != 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tif (columns[j].hasOwnProperty('width')) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumns[j].width = parseInt(tmpstore.getAt(i).get('col_width'));\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumns[j]['width'] = parseInt(tmpstore.getAt(i).get('col_width'));\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tif (tmpstore.getAt(i).get('col_width') != 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tif (columns[j].hasOwnProperty('width')) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumns[j].width = parseInt(tmpstore.getAt(i).get('col_width'));\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumns[j]['width'] = parseInt(tmpstore.getAt(i).get('col_width'));\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tif (columns[j].hasOwnProperty('hidden')) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tcolumns[j].hidden = true;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tcolumns[j]['hidden'] = true;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttmpcols.push(columns[j]);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tcolumns.splice(j, 1);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tif (columns != null && columns.leght != 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < columns.length; i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcolumns[i]['hidden'] = true;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttmpcols.push(columns[i]);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tbodyGrid.reconfigure(null, tmpcols);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\tif (bodyGrid.columns == null || bodyGrid.columns.length == 0) {\r\n");
      out.write("\t\t\t\t\t\t\tbodyGrid.reconfigure(null, me.oriGColumns);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tme.changeMode(PageMode.Edit);\r\n");
      out.write("\t\t\t\t\tme.dataloaded(false);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tif (me.languageObj != null) {\r\n");
      out.write("\t\t\t\t\t\tpanel.items.get(0).setText(me.languageObj.add);\r\n");
      out.write("\t\t\t\t\t\tpanel.items.get(1).setText(me.languageObj.save);\r\n");
      out.write("\t\t\t\t\t\tpanel.items.get(2).setText(me.languageObj._delete);\r\n");
      out.write("\t\t\t\t\t\tpanel.items.get(3).setText(me.languageObj.to_edit);\r\n");
      out.write("\t\t\t\t\t\tpanel.items.get(4).setText(me.languageObj.save_format);\r\n");
      out.write("\t\t\t\t\t\tpanel.items.get(5).setText(me.languageObj.load_def_format);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tif (this.headform != null) {\r\n");
      out.write("\t\t\t\t\t\tthis.headform.bodypanel = this;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tgetCurrMode : function() {\r\n");
      out.write("\t\t\t\t\treturn this.currmode;\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\taddNewRow : function() {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tdataloaded : function(loaded) {\r\n");
      out.write("\t\t\t\t\tvar btn = this.items.get(0).items.get(3);\r\n");
      out.write("\t\t\t\t\tif (btn != null) {\r\n");
      out.write("\t\t\t\t\t\tbtn.setDisabled(!loaded);\r\n");
      out.write("\t\t\t\t\t\tif (!loaded) {\r\n");
      out.write("\t\t\t\t\t\t\tthis.changeMode(PageMode.Edit);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tclearGrid : function() {\r\n");
      out.write("\t\t\t\t\tvar store = this.items.get(1).getStore();\r\n");
      out.write("\t\t\t\t\tif (store != null) {\r\n");
      out.write("\t\t\t\t\t\tstore.removeAll();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tchangeMode : function(mode) {\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\tvar toolbtns = this.items.get(0).items;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tif (mode == PageMode.View) {\r\n");
      out.write("\t\t\t\t\t\tfor ( var i = 0; i <= 3; i++) {\r\n");
      out.write("\t\t\t\t\t\t\tif (i == 3) {\r\n");
      out.write("\t\t\t\t\t\t\t\ttoolbtns.get(i).setText(me.languageObj.to_view);\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (this.stopUsingBtn != null && this.stopUsingBtn.length > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar stopuse = false;\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfor ( var j = 0; j < this.stopUsingBtn.length; j++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (this.stopUsingBtn[j] == i) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstopuse = true;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttoolbtns.get(i).setDisabled(stopuse);\r\n");
      out.write("\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttoolbtns.get(i).setDisabled(false);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tthis.currmode = PageMode.Edit;\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tfor ( var i = 0; i <= 3; i++) {\r\n");
      out.write("\t\t\t\t\t\t\tif (i == 3) {\r\n");
      out.write("\t\t\t\t\t\t\t\ttoolbtns.get(i).setText(me.languageObj.to_edit);\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\ttoolbtns.get(i).setDisabled(true);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tthis.currmode = PageMode.View;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tsetNewCondi : function() {\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\tvar grid = me.getGrid();\r\n");
      out.write("\t\t\t\t\tvar store = grid.getStore();\r\n");
      out.write("\t\t\t\t\tvar head = me.headform;\r\n");
      out.write("\t\t\t\t\tif (store != null) {\r\n");
      out.write("\t\t\t\t\t\tif (store.getProxy().extraParams.hasOwnProperty('keys')) {\r\n");
      out.write("\t\t\t\t\t\t\tstore.getProxy().extraParams['keys'] = head.items.get(0).getValue();\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tgridReload : function() {\r\n");
      out.write("\t\t\t\t\tvar bodypanel = this;\r\n");
      out.write("\t\t\t\t\tvar grid = bodypanel.items.get(1);\r\n");
      out.write("\t\t\t\t\tif (grid != null) {\r\n");
      out.write("\t\t\t\t\t\tgrid.getStore().load();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tgetGrid : function() {\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\treturn me.items.get(1);\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tvalided : function() {\r\n");
      out.write("\t\t\t\t\treturn true;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t/*\r\n");
      out.write("\t\t\t var bodypanel = Ext.create('DCI.Customer.BodyGridPanel', {\r\n");
      out.write("\t\t\t title : langs.sql_col_edit,\r\n");
      out.write("\t\t\t languageObj : langs,\r\n");
      out.write("\t\t\t gridid : 'SQLEditor_G01',\r\n");
      out.write("\t\t\t actionurl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t postvalue : postvalue,\r\n");
      out.write("\t\t\t uid : uid,\r\n");
      out.write("\t\t\t headform : headform,\r\n");
      out.write("\t\t\t keyfields : [ 'sql_id', 'col_id' ],\r\n");
      out.write("\t\t\t canEdit : canEdit,\r\n");
      out.write("\t\t\t stopUsingBtn : [ 0, 2 ],\r\n");
      out.write("\t\t\t configWin : relationConfigWin,\r\n");
      out.write("\t\t\t tools : [ {\r\n");
      out.write("\t\t\t type : 'up',\r\n");
      out.write("\t\t\t headHeight : 0,\r\n");
      out.write("\t\t\t handler : function() {\r\n");
      out.write("\t\t\t var me = this;\r\n");
      out.write("\t\t\t var panel = me.up('panel');\r\n");
      out.write("\t\t\t var hpanel = panel.headform.up('panel');\r\n");
      out.write("\t\t\t if (hpanel != null) {\r\n");
      out.write("\t\t\t if (me.headHeight == 0) {\r\n");
      out.write("\t\t\t me.setType('down');\r\n");
      out.write("\t\t\t me.headHeight = hpanel.getHeight();\r\n");
      out.write("\t\t\t hpanel.setHeight(0);\r\n");
      out.write("\t\t\t } else {\r\n");
      out.write("\t\t\t me.setType('up');\r\n");
      out.write("\t\t\t hpanel.setHeight(me.headHeight);\r\n");
      out.write("\t\t\t me.headHeight = 0;\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t\t\t } ],\r\n");
      out.write("\t\t\t addNewRow : function() {\r\n");
      out.write("\t\t\t var grid = this.items.get(1);\r\n");
      out.write("\t\t\t var gridStore = grid.getStore();\r\n");
      out.write("\t\t\t if (gridStore != null) {\r\n");
      out.write("\t\t\t gridStore.add({\r\n");
      out.write("\t\t\t sql_id : this.headKeys.sql_id,\r\n");
      out.write("\t\t\t col_id : '',\r\n");
      out.write("\t\t\t col_lang_key : '',\r\n");
      out.write("\t\t\t col_type : '',\r\n");
      out.write("\t\t\t col_ori_name : '',\r\n");
      out.write("\t\t\t col_width : 100,\r\n");
      out.write("\t\t\t col_seq : '',\r\n");
      out.write("\t\t\t visible : 1,\r\n");
      out.write("\t\t\t is_popup : 0,\r\n");
      out.write("\t\t\t popup_title : 0,\r\n");
      out.write("\t\t\t config_value : '',\r\n");
      out.write("\t\t\t cht : '',\r\n");
      out.write("\t\t\t chs : '',\r\n");
      out.write("\t\t\t moditag : 1,\r\n");
      out.write("\t\t\t moditp : 'add',\r\n");
      out.write("\t\t\t relation_image : './../../images/button_icon/BtnConfig.png',\r\n");
      out.write("\t\t\t relation_data : '',\r\n");
      out.write("\t\t\t calc_rule : ''\r\n");
      out.write("\t\t\t });\r\n");
      out.write("\r\n");
      out.write("\t\t\t grid.getView().select(gridStore.getCount() - 1);\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t\t\t },\r\n");
      out.write("\t\t\t griddbclick : function(view, td, cellIndex, record, tr, rowIndex, e, eOpts) {\r\n");
      out.write("\t\t\t var me = this;\r\n");
      out.write("\t\t\t if (me.currmode == PageMode.Edit) {\r\n");
      out.write("\t\t\t if (view.headerCt.gridDataColumns[cellIndex].dataIndex == \"relation_image\") {\r\n");
      out.write("\t\t\t if (me.configWin != null) {\r\n");
      out.write("\t\t\t me.configWin.setInitData(record);\r\n");
      out.write("\t\t\t me.configWin.show();\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t\t\t } else if (view.headerCt.gridDataColumns[cellIndex].colid == 'colchtpicker') {\r\n");
      out.write("\t\t\t alert(\"cht\");\r\n");
      out.write("\t\t\t } else if (view.headerCt.gridDataColumns[cellIndex].colid == 'colchspicker') {\r\n");
      out.write("\t\t\t alert(\"chs\");\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t\t\t },\r\n");
      out.write("\t\t\t setNewCondi : function() {\r\n");
      out.write("\t\t\t var me = this;\r\n");
      out.write("\t\t\t var grid = me.getGrid();\r\n");
      out.write("\t\t\t var store = grid.getStore();\r\n");
      out.write("\t\t\t var head = me.headform;\r\n");
      out.write("\t\t\t if (store != null) {\r\n");
      out.write("\t\t\t if (store.getProxy().extraParams.hasOwnProperty('keys')) {\r\n");
      out.write("\t\t\t store.getProxy().extraParams['keys'] = head.items.get(0).getValue();\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t\t\t });\r\n");
      out.write("\t\t\t */\r\n");
      out.write("\t\t\tExt.define('DCI.Customer.TriggerEditor', {\r\n");
      out.write("\t\t\t\textend : 'Ext.form.field.Trigger',\r\n");
      out.write("\t\t\t\talias : 'DCI.Customer.TriggerEditor',\r\n");
      out.write("\t\t\t\txtype : 'dcitriggereditor',\r\n");
      out.write("\t\t\t\tonTriggerClick : function() {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t/* \tvar bodyColumns = [ {\r\n");
      out.write("\t\t\t\t\txtype : 'rownumberer',\r\n");
      out.write("\t\t\t\t\tcolid : 'colrownum',\r\n");
      out.write("\t\t\t\t\twidth : 40,\r\n");
      out.write("\t\t\t\t\tsortable : false,\r\n");
      out.write("\t\t\t\t\tlocked : true\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\ttext : langs.col_id,\r\n");
      out.write("\t\t\t\t\tdataIndex : 'col_id',\r\n");
      out.write("\t\t\t\t\tcolid : 'colcol_id',\r\n");
      out.write("\t\t\t\t\twidth : 150\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\ttext : langs.col_type,\r\n");
      out.write("\t\t\t\t\tdataIndex : 'col_type',\r\n");
      out.write("\t\t\t\t\tcolid : 'colcol_type',\r\n");
      out.write("\t\t\t\t\twidth : 150,\r\n");
      out.write("\t\t\t\t\teditor : column_type_combo,\r\n");
      out.write("\t\t\t\t\trenderer : function(value) {\r\n");
      out.write("\t\t\t\t\t\treturn getComboLabel(column_type_combo, value);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\ttext : langs.config_value,\r\n");
      out.write("\t\t\t\t\tdataIndex : 'config_value',\r\n");
      out.write("\t\t\t\t\tcolid : 'colconfig_value',\r\n");
      out.write("\t\t\t\t\twidth : 200,\r\n");
      out.write("\t\t\t\t\teditor : {\r\n");
      out.write("\t\t\t\t\t\tallowBlank : true\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tgetEditor : function(record) {\r\n");
      out.write("\t\t\t\t\t\tvar newValue = record.get('col_type');\r\n");
      out.write("\t\t\t\t\t\tvar neditor = null;\r\n");
      out.write("\t\t\t\t\t\tif (newValue == \"DATE\") {\r\n");
      out.write("\t\t\t\t\t\t\tneditor = date_format_combo;\r\n");
      out.write("\t\t\t\t\t\t} else if (newValue == \"IMAGELINK\" || newValue == \"CHAR\") {\r\n");
      out.write("\t\t\t\t\t\t\tneditor = Ext.create('DCI.Customer.TextField', {\r\n");
      out.write("\t\t\t\t\t\t\t\tfieldLabel : \"\",\r\n");
      out.write("\t\t\t\t\t\t\t\tlabelWidth : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\twidth : '100%',\r\n");
      out.write("\t\t\t\t\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\t\t\t\t\treadOnly : true,\r\n");
      out.write("\t\t\t\t\t\t\t\tallowBlank : true\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tneditor = Ext.create('DCI.Customer.TextField', {\r\n");
      out.write("\t\t\t\t\t\t\t\tfieldLabel : \"\",\r\n");
      out.write("\t\t\t\t\t\t\t\tlabelWidth : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\twidth : '100%',\r\n");
      out.write("\t\t\t\t\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\t\t\t\t\tallowBlank : true\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\tneditor.loadDefault();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\treturn Ext.create('Ext.grid.CellEditor', {\r\n");
      out.write("\t\t\t\t\t\t\tfield : neditor\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\ttext : langs.col_lang_key,\r\n");
      out.write("\t\t\t\t\tdataIndex : 'col_lang_key',\r\n");
      out.write("\t\t\t\t\tcolid : 'colcol_lang_key',\r\n");
      out.write("\t\t\t\t\twidth : 150\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\ttext : langs.cht,\r\n");
      out.write("\t\t\t\t\tdataIndex : 'cht',\r\n");
      out.write("\t\t\t\t\tcolid : 'colcht',\r\n");
      out.write("\t\t\t\t\twidth : 200,\r\n");
      out.write("\t\t\t\t\teditor : {\r\n");
      out.write("\t\t\t\t\t\txtype : 'dcitriggereditor',\r\n");
      out.write("\t\t\t\t\t\tallowBlank : true,\r\n");
      out.write("\t\t\t\t\t\tonTriggerClick : function() {\r\n");
      out.write("\t\t\t\t\t\t\tvar grid = bodypanel.getGrid();\r\n");
      out.write("\t\t\t\t\t\t\tvar record = grid.getSelectionModel().getSelection()[0];\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tif (langChooseWin != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\tlangChooseWin.setInitData(\"CHT\", this, record);\r\n");
      out.write("\t\t\t\t\t\t\t\tlangChooseWin.show();\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\ttext : langs.chs,\r\n");
      out.write("\t\t\t\t\tdataIndex : 'chs',\r\n");
      out.write("\t\t\t\t\tcolid : 'colchs',\r\n");
      out.write("\t\t\t\t\twidth : 200,\r\n");
      out.write("\t\t\t\t\teditor : {\r\n");
      out.write("\t\t\t\t\t\txtype : 'dcitriggereditor',\r\n");
      out.write("\t\t\t\t\t\tallowBlank : true,\r\n");
      out.write("\t\t\t\t\t\tonTriggerClick : function() {\r\n");
      out.write("\t\t\t\t\t\t\tvar grid = bodypanel.getGrid();\r\n");
      out.write("\t\t\t\t\t\t\tvar record = grid.getSelectionModel().getSelection()[0];\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tif (langChooseWin != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\tlangChooseWin.setInitData(\"CHS\", this, record);\r\n");
      out.write("\t\t\t\t\t\t\t\tlangChooseWin.show();\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\ttext : langs.col_ori_name,\r\n");
      out.write("\t\t\t\t\tdataIndex : 'col_ori_name',\r\n");
      out.write("\t\t\t\t\tcolid : 'colcol_ori_name',\r\n");
      out.write("\t\t\t\t\twidth : 200,\r\n");
      out.write("\t\t\t\t\teditor : {\r\n");
      out.write("\t\t\t\t\t\txtype : 'textareafield',\r\n");
      out.write("\t\t\t\t\t\tallowBlank : true,\r\n");
      out.write("\t\t\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\t\t\tpaste : {\r\n");
      out.write("\t\t\t\t\t\t\t\telement : 'inputEl',\r\n");
      out.write("\t\t\t\t\t\t\t\tdelay : 1,\r\n");
      out.write("\t\t\t\t\t\t\t\tfn : function(event, inputEl) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (event.type == \"paste\") {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar nv = inputEl.value;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tnv = nv.replace(/(\\r|\\n)/g, \" \");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tnv = nv.replace(/(<)/g, \" < \");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tnv = nv.replace(/(>)/g, \" > \");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tinputEl.value = nv;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\tchange : function(comp, newValue, oldValue, eOpts) {\r\n");
      out.write("\t\t\t\t\t\t\t\tnewValue = newValue.replace(/(\\r|\\n)/g, \" \");\r\n");
      out.write("\t\t\t\t\t\t\t\tif (newValue.indexOf(\" < \") == -1) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tnewValue = newValue.replace(/(<)/g, \" < \");\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\tif (newValue.indexOf(\" > \") == -1) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tnewValue = newValue.replace(/(>)/g, \" > \");\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\tcomp.setValue(newValue);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\ttext : langs.col_width,\r\n");
      out.write("\t\t\t\t\tdataIndex : 'col_width',\r\n");
      out.write("\t\t\t\t\tcolid : 'colcol_width',\r\n");
      out.write("\t\t\t\t\twidth : 100,\r\n");
      out.write("\t\t\t\t\teditor : {\r\n");
      out.write("\t\t\t\t\t\txtype : 'numberfield',\r\n");
      out.write("\t\t\t\t\t\tallowBlank : false,\r\n");
      out.write("\t\t\t\t\t\tminValue : 0,\r\n");
      out.write("\t\t\t\t\t\tmaxValue : 5000\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\ttext : langs.col_seq,\r\n");
      out.write("\t\t\t\t\tdataIndex : 'col_seq',\r\n");
      out.write("\t\t\t\t\tcolid : 'colcol_seq',\r\n");
      out.write("\t\t\t\t\twidth : 100,\r\n");
      out.write("\t\t\t\t\teditor : {\r\n");
      out.write("\t\t\t\t\t\txtype : 'numberfield',\r\n");
      out.write("\t\t\t\t\t\tallowBlank : false,\r\n");
      out.write("\t\t\t\t\t\tminValue : 0,\r\n");
      out.write("\t\t\t\t\t\tmaxValue : 99999\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\ttext : langs.col_relation,\r\n");
      out.write("\t\t\t\t\tdataIndex : 'relation_image',\r\n");
      out.write("\t\t\t\t\tcolid : 'colrelation',\r\n");
      out.write("\t\t\t\t\talign : 'center',\r\n");
      out.write("\t\t\t\t\twidth : 100,\r\n");
      out.write("\t\t\t\t\trenderer : function(value, metaData, record) {\r\n");
      out.write("\t\t\t\t\t\tif (record.data.relation_data != null && record.data.relation_data != '') {\r\n");
      out.write("\t\t\t\t\t\t\tmetaData.style = 'background-color:#FFFFBB !important;';\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\treturn \"<img src='\" + value + \"' />\";\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\txtype : 'dcicheckcolumn',\r\n");
      out.write("\t\t\t\t\ttext : langs.visible,\r\n");
      out.write("\t\t\t\t\tdataIndex : 'visible',\r\n");
      out.write("\t\t\t\t\tcolid : 'colvisible',\r\n");
      out.write("\t\t\t\t\twidth : 100\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\txtype : 'dcicheckcolumn',\r\n");
      out.write("\t\t\t\t\ttext : langs.is_popup,\r\n");
      out.write("\t\t\t\t\tdataIndex : 'is_popup',\r\n");
      out.write("\t\t\t\t\tcolid : 'colis_popup',\r\n");
      out.write("\t\t\t\t\twidth : 100\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\txtype : 'dcicheckcolumn',\r\n");
      out.write("\t\t\t\t\ttext : langs.popup_title,\r\n");
      out.write("\t\t\t\t\tdataIndex : 'popup_title',\r\n");
      out.write("\t\t\t\t\tcolid : 'colpopup_title',\r\n");
      out.write("\t\t\t\t\twidth : 100\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\ttext : langs.calc_rule,\r\n");
      out.write("\t\t\t\t\tdataIndex : 'calc_rule',\r\n");
      out.write("\t\t\t\t\tcolid : 'colcalc_rule',\r\n");
      out.write("\t\t\t\t\twidth : 200,\r\n");
      out.write("\t\t\t\t\teditor : {\r\n");
      out.write("\t\t\t\t\t\tallowBlank : true\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t} ];\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar bodyStore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\tfields : [ 'sql_id', 'col_id', 'col_lang_key', 'col_type', 'col_ori_name', 'col_width', 'col_seq', 'locked', 'config_value', 'cht', 'chs', 'moditag', 'moditp',\r\n");
      out.write("\t\t\t\t\t\t\t\"relation_image\", \"relation_data\", {\r\n");
      out.write("\t\t\t\t\t\t\t\tname : 'visible',\r\n");
      out.write("\t\t\t\t\t\t\t\ttype : 'bool'\r\n");
      out.write("\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\tname : 'is_popup',\r\n");
      out.write("\t\t\t\t\t\t\t\ttype : 'bool'\r\n");
      out.write("\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\tname : 'popup_title',\r\n");
      out.write("\t\t\t\t\t\t\t\ttype : 'bool'\r\n");
      out.write("\t\t\t\t\t\t\t}, \"calc_rule\" ],\r\n");
      out.write("\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\troot : 'items'\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\taction : 'bodyData',\r\n");
      out.write("\t\t\t\t\t\t\tkeys : ''\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}); */\r\n");
      out.write("\r\n");
      out.write("\t\t\tbodypanel.initBody();//(bodyStore, bodyColumns);\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar main = Ext.create('DCI.Customer.SubPanel', {\r\n");
      out.write("\t\t\t\tid : 'SQLEditorMain',\r\n");
      out.write("\t\t\t\trenderTo : 'SQLEditorPage',\r\n");
      out.write("\t\t\t\tminWidth : 1020,\r\n");
      out.write("\t\t\t\tminHeight : 500,\r\n");
      out.write("\t\t\t\tborder : 0,\r\n");
      out.write("\t\t\t\tbodyPadding : '0 5 5 5',\r\n");
      out.write("\t\t\t\tlayout : 'border',\r\n");
      out.write("\t\t\t\twidthChangeControls : [ headpanel, bodypanel ],\r\n");
      out.write("\t\t\t\titems : [ headpanel, bodypanel ]\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar initQueryStore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\tfields : [ 'coltps', 'formats' ],\r\n");
      out.write("\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\turl : '../../Configs/SQLEditor.dsc',\r\n");
      out.write("\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\ttype : 'json'\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\taction : 'init'\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tinitQueryStore.load(function(record) {\r\n");
      out.write("\t\t\t\tif (record.length > 0) {\r\n");
      out.write("\t\t\t\t\tcolumn_type_combo.getStore().loadData(record[0].get(\"coltps\"));\r\n");
      out.write("\t\t\t\t\tcolumn_type_combo.loadDefault();\r\n");
      out.write("\t\t\t\t\tdate_format_combo.getStore().loadData(record[0].get(\"formats\"));\r\n");
      out.write("\t\t\t\t\tdate_format_combo.loadDefault();\r\n");
      out.write("\t\t\t\t\tbodygrid.transSource = record[0].get(\"coltps\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tmain.resize(Ext.get(\"SQLEditorPage\").getWidth(), Ext.get(\"SQLEditorPage\").getHeight());\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"SQLEditorPage\" class=\"page_div\"></div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_dcitag_005freqParam_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  dcitag:reqParam
    com.dci.jweb.DCITags.Request.getReqParameter _jspx_th_dcitag_005freqParam_005f0 = (new com.dci.jweb.DCITags.Request.getReqParameter());
    _jsp_instancemanager.newInstance(_jspx_th_dcitag_005freqParam_005f0);
    _jspx_th_dcitag_005freqParam_005f0.setJspContext(_jspx_page_context);
    // /FuncViews/Configs/SQLEditor.jsp(8,7) name = paramName type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_dcitag_005freqParam_005f0.setParamName("func_name");
    _jspx_th_dcitag_005freqParam_005f0.doTag();
    _jsp_instancemanager.destroyInstance(_jspx_th_dcitag_005freqParam_005f0);
    return false;
  }

  private boolean _jspx_meth_dcitag_005freqParam_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  dcitag:reqParam
    com.dci.jweb.DCITags.Request.getReqParameter _jspx_th_dcitag_005freqParam_005f1 = (new com.dci.jweb.DCITags.Request.getReqParameter());
    _jsp_instancemanager.newInstance(_jspx_th_dcitag_005freqParam_005f1);
    _jspx_th_dcitag_005freqParam_005f1.setJspContext(_jspx_page_context);
    // /FuncViews/Configs/SQLEditor.jsp(32,13) name = paramName type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_dcitag_005freqParam_005f1.setParamName("uid");
    _jspx_th_dcitag_005freqParam_005f1.doTag();
    _jsp_instancemanager.destroyInstance(_jspx_th_dcitag_005freqParam_005f1);
    return false;
  }

  private boolean _jspx_meth_dcitag_005freqParam_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  dcitag:reqParam
    com.dci.jweb.DCITags.Request.getReqParameter _jspx_th_dcitag_005freqParam_005f2 = (new com.dci.jweb.DCITags.Request.getReqParameter());
    _jsp_instancemanager.newInstance(_jspx_th_dcitag_005freqParam_005f2);
    _jspx_th_dcitag_005freqParam_005f2.setJspContext(_jspx_page_context);
    // /FuncViews/Configs/SQLEditor.jsp(38,52) name = paramName type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_dcitag_005freqParam_005f2.setParamName("canEdit");
    _jspx_th_dcitag_005freqParam_005f2.doTag();
    _jsp_instancemanager.destroyInstance(_jspx_th_dcitag_005freqParam_005f2);
    return false;
  }
}
