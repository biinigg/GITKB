/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2016-01-25 07:07:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.FuncViews.Configs;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class MarqueeConfig_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/FuncViews/Configs/./../../dcitag/dcitag.tld", Long.valueOf(1452650348276L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=9\">\r\n");
      out.write("<title>");
      if (_jspx_meth_dcitag_005freqParam_005f0(_jspx_page_context))
        return;
      out.write("</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"./../../codemirror/css/codemirror.css\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"./../../codemirror/mode/sql.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" charset=\"UTF-8\">\r\n");
      out.write("\tExt.onReady(function() {\r\n");
      out.write("\t\tvar localKeys = [ \"save_msg\", \"delete_msg\", \"delete_fail\", \"delete_success\", \"delete_result_title\", \"delete_fail\", \"save_fail\", \"save_success\", \"save_result_title\",\r\n");
      out.write("\t\t\t\t\"save_fail\", \"delete_confirm_title\", \"delete_confirm_msg\", \"system_build\", \"marquee_id\", \"marquee_type\", \"marquee_msg\", \"start_date\", \"end_date\", \"conns\", \"sqls\",\r\n");
      out.write("\t\t\t\t\"sql_name\", \"conn_name\", \"marquee_type\", \"sql_msg\", \"text_msg\", \"start_date\", \"end_date\", \"toolbar_query_title\", \"confirm_title\", \"data_lose_warning\",\r\n");
      out.write("\t\t\t\t\"not_allow_blank\", \"sql_id\", \"conn_id\", \"select_all\", \"sys_sql_msg\", \"sys_text_msg\", \"cus_format\" ];\r\n");
      out.write("\t\tvar keys = localKeys.concat(globeKeys);\r\n");
      out.write("\t\tvar uid = '");
      if (_jspx_meth_dcitag_005freqParam_005f1(_jspx_page_context))
        return;
      out.write("';\r\n");
      out.write("\t\tthis.dcistore.setMultiLangKeys(keys);\r\n");
      out.write("\t\tthis.dcistore.setUid(uid);\r\n");
      out.write("\t\tthis.dcistore.load(function(records) {\r\n");
      out.write("\t\t\tif (records != null && records.length == 1) {\r\n");
      out.write("\t\t\t\tvar langs = buildMultiLangObjct(keys, records[0].get('langValues'));\r\n");
      out.write("\t\t\t\tshowPage(records[0].get('dcitagValue'), langs, '");
      if (_jspx_meth_dcitag_005freqParam_005f2(_jspx_page_context))
        return;
      out.write("', uid);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tfunction showPage(postvalue, langs, recvAuth, uid) {\r\n");
      out.write("\t\t\tvar canEdit = recvAuth == \"1\";\r\n");
      out.write("\t\t\tvar connsTextBox = Ext.create('DCI.Customer.TextField', {\r\n");
      out.write("\t\t\t\tfieldLabel : langs.conn_name,\r\n");
      out.write("\t\t\t\twidth : 460,\r\n");
      out.write("\t\t\t\temptyText : '',\r\n");
      out.write("\t\t\t\tname : 'displayconns',\r\n");
      out.write("\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\tcanEdit : false,\r\n");
      out.write("\t\t\t\tx : 480,\r\n");
      out.write("\t\t\t\ty : 40\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar connData = Ext.create('DCI.Customer.Hidden', {\r\n");
      out.write("\t\t\t\tname : 'conns',\r\n");
      out.write("\t\t\t\tvalue : '',\r\n");
      out.write("\t\t\t\ttriggerModi : false,\r\n");
      out.write("\t\t\t\tbindBtn : null,\r\n");
      out.write("\t\t\t\tsetBindButton : function(btn) {\r\n");
      out.write("\t\t\t\t\tthis.bindBtn = btn;\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tsetSelectedValue : function(value) {\r\n");
      out.write("\t\t\t\t\tthis.triggerModi = true;\r\n");
      out.write("\t\t\t\t\tthis.setValue(value);\r\n");
      out.write("\t\t\t\t\tthis.triggerModi = false;\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tloadDefault : function() {\r\n");
      out.write("\t\t\t\t\t//this.triggerModi = false;\r\n");
      out.write("\t\t\t\t\tthis.setValue(this.defaultvalue);\r\n");
      out.write("\t\t\t\t\t//this.triggerModi = true;\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\tchange : function(hidden, newValue, oldValue, eOpts) {\r\n");
      out.write("\t\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\t\tif (!me.triggerModi && me.bindBtn != null && me.bindBtn.gridStore != null) {\r\n");
      out.write("\t\t\t\t\t\t\tvar stroe = me.bindBtn.gridStore;\r\n");
      out.write("\t\t\t\t\t\t\tif (newValue == null && newValue == '') {\r\n");
      out.write("\t\t\t\t\t\t\t\tfor ( var i = 0; i < stroe.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tstroe.getAt(i).set('selected', false);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar tmp = [];\r\n");
      out.write("\t\t\t\t\t\t\t\ttmp = newValue.split(';');\r\n");
      out.write("\t\t\t\t\t\t\t\tfor ( var i = 0; i < stroe.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tstroe.getAt(i).set('selected', false);\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfor ( var j = 0; j < tmp.length; j++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (stroe.getAt(i).get(\"conn_id\") == tmp[j]) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstroe.getAt(i).set('selected', true);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttmp.splice(j, 1);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar openWinBtnConn = Ext.create('DCI.Customer.OpenWinTrigger', {\r\n");
      out.write("\t\t\t\tx : 940,\r\n");
      out.write("\t\t\t\ty : 40,\r\n");
      out.write("\t\t\t\tcls : 'search-toolbar',\r\n");
      out.write("\t\t\t\twidth : 30,\r\n");
      out.write("\t\t\t\theight : 30,\r\n");
      out.write("\t\t\t\twinHeight : 365,\r\n");
      out.write("\t\t\t\twinWidth : 450,\r\n");
      out.write("\t\t\t\tlangsObj : langs,\r\n");
      out.write("\t\t\t\tdisplayComp : connsTextBox,\r\n");
      out.write("\t\t\t\ttargetComp : connData,\r\n");
      out.write("\t\t\t\tactionurl : '../../Configs/MarqueeConfig.dsc',\r\n");
      out.write("\t\t\t\tbuttonID : 'connBtn',\r\n");
      out.write("\t\t\t\tpvalue : postvalue,\r\n");
      out.write("\t\t\t\tpuid : uid,\r\n");
      out.write("\t\t\t\tshowSelectAll : true,\r\n");
      out.write("\t\t\t\tdisplayCols : [ {\r\n");
      out.write("\t\t\t\t\txtype : 'checkcolumn',\r\n");
      out.write("\t\t\t\t\t//text : langs.sql_id,\r\n");
      out.write("\t\t\t\t\tdataIndex : 'selected',\r\n");
      out.write("\t\t\t\t\twidth : 100,\r\n");
      out.write("\t\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\t\tcheckchange : function(comp, rowIndex, checked, eOpts) {\r\n");
      out.write("\t\t\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\t\t\tvar sa = me.up('panel').up('panel').items.get(0).items.get(3);\r\n");
      out.write("\t\t\t\t\t\t\tif (checked) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar all = true;\r\n");
      out.write("\t\t\t\t\t\t\t\tvar store = me.up('panel').getStore();\r\n");
      out.write("\t\t\t\t\t\t\t\tif (store != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < store.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (!store.getAt(i).get(\"selected\") || store.getAt(i).get(\"selected\") == '') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tall = false;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (all) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tsa.setChecked(1);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tsa.setChecked(0);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\ttext : langs.conn_id,\r\n");
      out.write("\t\t\t\t\tdataIndex : 'conn_id',\r\n");
      out.write("\t\t\t\t\twidth : 200\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\ttext : langs.conn_name,\r\n");
      out.write("\t\t\t\t\tdataIndex : 'conn_name',\r\n");
      out.write("\t\t\t\t\twidth : 200\r\n");
      out.write("\t\t\t\t} ],\r\n");
      out.write("\t\t\t\tgridStore : Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\tfields : [ 'selected', 'conn_id', 'conn_name' ],\r\n");
      out.write("\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\turl : '../../Configs/MarqueeConfig.dsc',\r\n");
      out.write("\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\troot : 'items'\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\taction : 'openwin',\r\n");
      out.write("\t\t\t\t\t\t\tfilter : '',\r\n");
      out.write("\t\t\t\t\t\t\tbtnid : 'connBtn'\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}),\r\n");
      out.write("\t\t\t\tselectAllEvent : function(comp, newValue, oldValue, eOpts) {\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tfor ( var i = 0; i < me.gridStore.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\tme.gridStore.getAt(i).set('selected', newValue);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tisAll : function() {\r\n");
      out.write("\t\t\t\t\tvar result = 0;\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\tvar all = true;\r\n");
      out.write("\t\t\t\t\tvar store = me.gridStore;\r\n");
      out.write("\t\t\t\t\tif (store != null) {\r\n");
      out.write("\t\t\t\t\t\tfor ( var i = 0; i < store.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\tif (!store.getAt(i).get(\"selected\") || store.getAt(i).get(\"selected\") == '') {\r\n");
      out.write("\t\t\t\t\t\t\t\tall = false;\r\n");
      out.write("\t\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tif (all) {\r\n");
      out.write("\t\t\t\t\t\t\tresult = 1;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\treturn result;\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tsetSelectedData : function(values) {\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\tvar vbox = me.targetComp;\r\n");
      out.write("\t\t\t\t\tvar dbox = me.displayComp;\r\n");
      out.write("\t\t\t\t\tvar dataStr = \"\";\r\n");
      out.write("\t\t\t\t\tvar displaystr = \"\";\r\n");
      out.write("\t\t\t\t\tvar cnt = 0;\r\n");
      out.write("\t\t\t\t\tfor ( var i = 0; i < values.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\tif (values.getAt(i).get(\"selected\") && values.getAt(i).get(\"selected\") != '') {\r\n");
      out.write("\t\t\t\t\t\t\tif (cnt == 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\tdataStr = values.getAt(i).get(\"conn_id\");\r\n");
      out.write("\t\t\t\t\t\t\t\tdisplaystr = values.getAt(i).get(\"conn_name\");\r\n");
      out.write("\t\t\t\t\t\t\t\tcnt++;\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tdataStr += ';' + values.getAt(i).get(\"conn_id\");\r\n");
      out.write("\t\t\t\t\t\t\t\tdisplaystr += ';' + values.getAt(i).get(\"conn_name\");\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvbox.setSelectedValue(\"\");\r\n");
      out.write("\t\t\t\t\tvbox.setSelectedValue(dataStr);\r\n");
      out.write("\t\t\t\t\tdbox.setValue(displaystr);\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tsetInitObjs : function(record) {\r\n");
      out.write("\t\t\t\t\tthis.filterComboRecord = record;\r\n");
      out.write("\t\t\t\t\tif (this.gridStore != null) {\r\n");
      out.write("\t\t\t\t\t\tthis.gridStore.load();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tif (connData != null) {\r\n");
      out.write("\t\t\t\t\t\tconnData.setBindButton(this);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\tclick : function(btn, e, eOpts) {\r\n");
      out.write("\t\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\t\tvar form = me.up();\r\n");
      out.write("\t\t\t\t\t\tvar newValue = form.items.get(1).getValue();\r\n");
      out.write("\t\t\t\t\t\tvar show = true;\r\n");
      out.write("\t\t\t\t\t\tif (newValue == '3') {\r\n");
      out.write("\t\t\t\t\t\t\tme.setDisabled(true);\r\n");
      out.write("\t\t\t\t\t\t\tshow = false;\r\n");
      out.write("\t\t\t\t\t\t} else if (newValue == '1') {\r\n");
      out.write("\t\t\t\t\t\t\tme.setDisabled(true);\r\n");
      out.write("\t\t\t\t\t\t\tshow = false;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\treturn show;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar sqlsTextBox = Ext.create('DCI.Customer.TextField', {\r\n");
      out.write("\t\t\t\tfieldLabel : langs.sql_name,\r\n");
      out.write("\t\t\t\twidth : 450,\r\n");
      out.write("\t\t\t\temptyText : '',\r\n");
      out.write("\t\t\t\tname : 'displaysqls',\r\n");
      out.write("\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\tcanEdit : false,\r\n");
      out.write("\t\t\t\tx : 0,\r\n");
      out.write("\t\t\t\ty : 40\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar sqlData = Ext.create('DCI.Customer.Hidden', {\r\n");
      out.write("\t\t\t\tname : 'sqls',\r\n");
      out.write("\t\t\t\tvalue : '',\r\n");
      out.write("\t\t\t\ttriggerModi : false,\r\n");
      out.write("\t\t\t\tbindBtn : null,\r\n");
      out.write("\t\t\t\tsetBindButton : function(btn) {\r\n");
      out.write("\t\t\t\t\tthis.bindBtn = btn;\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tsetSelectedValue : function(value) {\r\n");
      out.write("\t\t\t\t\tthis.triggerModi = true;\r\n");
      out.write("\t\t\t\t\tthis.setValue(value);\r\n");
      out.write("\t\t\t\t\tthis.triggerModi = false;\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tloadDefault : function() {\r\n");
      out.write("\t\t\t\t\tthis.triggerModi = false;\r\n");
      out.write("\t\t\t\t\tthis.setValue(this.defaultvalue);\r\n");
      out.write("\t\t\t\t\tthis.triggerModi = true;\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\tchange : function(hidden, newValue, oldValue, eOpts) {\r\n");
      out.write("\t\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\t\tif (!me.triggerModi && me.bindBtn != null && me.bindBtn.gridStore != null) {\r\n");
      out.write("\t\t\t\t\t\t\tvar stroe = me.bindBtn.gridStore;\r\n");
      out.write("\t\t\t\t\t\t\tif (newValue == null && newValue == '') {\r\n");
      out.write("\t\t\t\t\t\t\t\tfor ( var i = 0; i < stroe.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tstroe.getAt(i).set('selected', false);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar tmp = [];\r\n");
      out.write("\t\t\t\t\t\t\t\ttmp = newValue.split(';');\r\n");
      out.write("\t\t\t\t\t\t\t\tfor ( var i = 0; i < stroe.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tstroe.getAt(i).set('selected', false);\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfor ( var j = 0; j < tmp.length; j++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (stroe.getAt(i).get(\"sql_id\") == tmp[j]) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstroe.getAt(i).set('selected', true);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttmp.splice(j, 1);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar openWinBtnSql = Ext.create('DCI.Customer.OpenWinTrigger', {\r\n");
      out.write("\t\t\t\tx : 450,\r\n");
      out.write("\t\t\t\ty : 40,\r\n");
      out.write("\t\t\t\tcls : 'search-toolbar',\r\n");
      out.write("\t\t\t\twidth : 30,\r\n");
      out.write("\t\t\t\theight : 30,\r\n");
      out.write("\t\t\t\twinHeight : 365,\r\n");
      out.write("\t\t\t\twinWidth : 450,\r\n");
      out.write("\t\t\t\tlangsObj : langs,\r\n");
      out.write("\t\t\t\tdisplayComp : sqlsTextBox,\r\n");
      out.write("\t\t\t\ttargetComp : sqlData,\r\n");
      out.write("\t\t\t\tactionurl : '../../Configs/MarqueeConfig.dsc',\r\n");
      out.write("\t\t\t\tbuttonID : 'sqlBtn',\r\n");
      out.write("\t\t\t\tpvalue : postvalue,\r\n");
      out.write("\t\t\t\tpuid : uid,\r\n");
      out.write("\t\t\t\tshowSelectAll : true,\r\n");
      out.write("\t\t\t\tdisplayCols : [ {\r\n");
      out.write("\t\t\t\t\txtype : 'checkcolumn',\r\n");
      out.write("\t\t\t\t\t//text : langs.sql_id,\r\n");
      out.write("\t\t\t\t\tdataIndex : 'selected',\r\n");
      out.write("\t\t\t\t\twidth : 100,\r\n");
      out.write("\t\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\t\tcheckchange : function(comp, rowIndex, checked, eOpts) {\r\n");
      out.write("\t\t\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\t\t\tvar sa = me.up('panel').up('panel').items.get(0).items.get(3);\r\n");
      out.write("\t\t\t\t\t\t\tif (checked) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar all = true;\r\n");
      out.write("\t\t\t\t\t\t\t\tvar store = me.up('panel').getStore();\r\n");
      out.write("\t\t\t\t\t\t\t\tif (store != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < store.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (!store.getAt(i).get(\"selected\") || store.getAt(i).get(\"selected\") == '') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tall = false;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (all) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tsa.setChecked(1);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tsa.setChecked(0);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\ttext : langs.sql_id,\r\n");
      out.write("\t\t\t\t\tdataIndex : 'sql_id',\r\n");
      out.write("\t\t\t\t\twidth : 200\r\n");
      out.write("\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\ttext : langs.sql_name,\r\n");
      out.write("\t\t\t\t\tdataIndex : 'sql_name',\r\n");
      out.write("\t\t\t\t\twidth : 200\r\n");
      out.write("\t\t\t\t} ],\r\n");
      out.write("\t\t\t\tgridStore : Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\tfields : [ 'selected', 'sql_id', 'sql_name' ],\r\n");
      out.write("\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\turl : '../../Configs/MarqueeConfig.dsc',\r\n");
      out.write("\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\troot : 'items'\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\taction : 'openwin',\r\n");
      out.write("\t\t\t\t\t\t\tfilter : '',\r\n");
      out.write("\t\t\t\t\t\t\tbtnid : 'sqlBtn'\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}),\r\n");
      out.write("\t\t\t\tselectAllEvent : function(comp, newValue, oldValue, eOpts) {\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tfor ( var i = 0; i < me.gridStore.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\tme.gridStore.getAt(i).set('selected', newValue);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tisAll : function() {\r\n");
      out.write("\t\t\t\t\tvar result = 0;\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\tvar all = true;\r\n");
      out.write("\t\t\t\t\tvar store = me.gridStore;\r\n");
      out.write("\t\t\t\t\tif (store != null) {\r\n");
      out.write("\t\t\t\t\t\tfor ( var i = 0; i < store.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\tif (!store.getAt(i).get(\"selected\") || store.getAt(i).get(\"selected\") == '') {\r\n");
      out.write("\t\t\t\t\t\t\t\tall = false;\r\n");
      out.write("\t\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tif (all) {\r\n");
      out.write("\t\t\t\t\t\t\tresult = 1;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\treturn result;\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tsetSelectedData : function(values) {\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\tvar vbox = me.targetComp;\r\n");
      out.write("\t\t\t\t\tvar dbox = me.displayComp;\r\n");
      out.write("\t\t\t\t\tvar dataStr = \"\";\r\n");
      out.write("\t\t\t\t\tvar displaystr = \"\";\r\n");
      out.write("\t\t\t\t\tvar cnt = 0;\r\n");
      out.write("\t\t\t\t\tfor ( var i = 0; i < values.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\tif (values.getAt(i).get(\"selected\") && values.getAt(i).get(\"selected\") != '') {\r\n");
      out.write("\t\t\t\t\t\t\tif (cnt == 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\tdataStr = values.getAt(i).get(\"sql_id\");\r\n");
      out.write("\t\t\t\t\t\t\t\tdisplaystr = values.getAt(i).get(\"sql_name\");\r\n");
      out.write("\t\t\t\t\t\t\t\tcnt++;\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tdataStr += ';' + values.getAt(i).get(\"sql_id\");\r\n");
      out.write("\t\t\t\t\t\t\t\tdisplaystr += ';' + values.getAt(i).get(\"sql_name\");\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvbox.setSelectedValue(\"\");\r\n");
      out.write("\t\t\t\t\tvbox.setSelectedValue(dataStr);\r\n");
      out.write("\t\t\t\t\tdbox.setValue(displaystr);\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tsetInitObjs : function(record) {\r\n");
      out.write("\t\t\t\t\tthis.filterComboRecord = record;\r\n");
      out.write("\t\t\t\t\tif (this.gridStore != null) {\r\n");
      out.write("\t\t\t\t\t\tthis.gridStore.load(function(record) {\r\n");
      out.write("\t\t\t\t\t\t\t//console.log(record.length);\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tif (sqlData != null) {\r\n");
      out.write("\t\t\t\t\t\tsqlData.setBindButton(this);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\tclick : function(btn, e, eOpts) {\r\n");
      out.write("\t\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\t\tvar form = me.up();\r\n");
      out.write("\t\t\t\t\t\tvar newValue = form.items.get(1).getValue();\r\n");
      out.write("\t\t\t\t\t\tvar show = true;\r\n");
      out.write("\t\t\t\t\t\tif (newValue == '3') {\r\n");
      out.write("\t\t\t\t\t\t\tme.setDisabled(true);\r\n");
      out.write("\t\t\t\t\t\t\tshow = false;\r\n");
      out.write("\t\t\t\t\t\t} else if (newValue == '4') {\r\n");
      out.write("\t\t\t\t\t\t\tme.setDisabled(true);\r\n");
      out.write("\t\t\t\t\t\t\tshow = false;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\treturn show;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar sqleditor = Ext.create('DCI.Customer.SqlEditor', {\r\n");
      out.write("\t\t\t\tfieldLabel : langs.marquee_msg,\r\n");
      out.write("\t\t\t\tlabelWidth : 75,\r\n");
      out.write("\t\t\t\theight : 200,\r\n");
      out.write("\t\t\t\twidth : 970,\r\n");
      out.write("\t\t\t\tname : 'message',\r\n");
      out.write("\t\t\t\tx : 0,\r\n");
      out.write("\t\t\t\ty : 70\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar headform = Ext.create('DCI.Customer.HeadFormPanel', {\r\n");
      out.write("\t\t\t\theight : 100,\r\n");
      out.write("\t\t\t\turl : '../../Configs/MarqueeConfig.dsc',\r\n");
      out.write("\t\t\t\tlanguageObj : langs,\r\n");
      out.write("\t\t\t\titems : [ Ext.create('DCI.Customer.TextField', {\r\n");
      out.write("\t\t\t\t\tfieldLabel : langs.marquee_id,\r\n");
      out.write("\t\t\t\t\temptyText : '',\r\n");
      out.write("\t\t\t\t\tname : 'marquee_id',\r\n");
      out.write("\t\t\t\t\tallowBlank : false,\r\n");
      out.write("\t\t\t\t\tispk : true,\r\n");
      out.write("\t\t\t\t\tcanEdit : false,\r\n");
      out.write("\t\t\t\t\tdefaultvalue : langs.system_build,\r\n");
      out.write("\t\t\t\t\twidth : 200,\r\n");
      out.write("\t\t\t\t\tx : 0,\r\n");
      out.write("\t\t\t\t\ty : 10\r\n");
      out.write("\t\t\t\t}), Ext.create('DCI.Customer.ComboBox', {\r\n");
      out.write("\t\t\t\t\tfieldLabel : langs.marquee_type,\r\n");
      out.write("\t\t\t\t\tlabelWidth : 100,\r\n");
      out.write("\t\t\t\t\tname : 'marquee_type',\r\n");
      out.write("\t\t\t\t\tstore : {\r\n");
      out.write("\t\t\t\t\t\tfields : [ 'label', 'value' ],\r\n");
      out.write("\t\t\t\t\t\tdata : [ {\r\n");
      out.write("\t\t\t\t\t\t\t\"label\" : langs.text_msg,\r\n");
      out.write("\t\t\t\t\t\t\t\"value\" : \"1\"\r\n");
      out.write("\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\"label\" : langs.sql_msg,\r\n");
      out.write("\t\t\t\t\t\t\t\"value\" : \"2\"\r\n");
      out.write("\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\"label\" : langs.sys_text_msg,\r\n");
      out.write("\t\t\t\t\t\t\t\"value\" : \"3\"\r\n");
      out.write("\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\"label\" : langs.sys_sql_msg,\r\n");
      out.write("\t\t\t\t\t\t\t\"value\" : \"4\"\r\n");
      out.write("\t\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tdefaultvalue : \"1\",\r\n");
      out.write("\t\t\t\t\twidth : 240,\r\n");
      out.write("\t\t\t\t\tx : 210,\r\n");
      out.write("\t\t\t\t\ty : 10,\r\n");
      out.write("\t\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\t\tchange : function(comp, newValue, oldValue, eOpts) {\r\n");
      out.write("\t\t\t\t\t\t\tvar panel = this.up();\r\n");
      out.write("\t\t\t\t\t\t\tif (panel.getCurrMode() == PageMode.Edit || panel.getCurrMode() == PageMode.Add) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar hconn = panel.items.get(4);\r\n");
      out.write("\t\t\t\t\t\t\t\tvar conn = panel.items.get(5);\r\n");
      out.write("\t\t\t\t\t\t\t\tvar bconn = panel.items.get(6);\r\n");
      out.write("\t\t\t\t\t\t\t\tvar hsql = panel.items.get(7);\r\n");
      out.write("\t\t\t\t\t\t\t\tvar sql = panel.items.get(8);\r\n");
      out.write("\t\t\t\t\t\t\t\tvar bsql = panel.items.get(9);\r\n");
      out.write("\t\t\t\t\t\t\t\tif (newValue == '1') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tconn.setValue(\"\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\thconn.setValue(\"\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tbconn.setDisabled(true);\r\n");
      out.write("\t\t\t\t\t\t\t\t\tbsql.setDisabled(false);\r\n");
      out.write("\t\t\t\t\t\t\t\t} else if (newValue == '2') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tbsql.setDisabled(false);\r\n");
      out.write("\t\t\t\t\t\t\t\t\tbconn.setDisabled(false);\r\n");
      out.write("\t\t\t\t\t\t\t\t} else if (newValue == '3') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tsql.setValue(\"\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\thsql.setValue(\"\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tbsql.setDisabled(true);\r\n");
      out.write("\t\t\t\t\t\t\t\t\tconn.setValue(\"\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\thconn.setValue(\"\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tbconn.setDisabled(true);\r\n");
      out.write("\t\t\t\t\t\t\t\t} else if (newValue == '4') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tsql.setValue(\"\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\thsql.setValue(\"\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tbsql.setDisabled(true);\r\n");
      out.write("\t\t\t\t\t\t\t\t\tbconn.setDisabled(false);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}), Ext.create('DCI.Customer.DateField', {\r\n");
      out.write("\t\t\t\t\tfieldLabel : langs.start_date,\r\n");
      out.write("\t\t\t\t\twidth : 250,\r\n");
      out.write("\t\t\t\t\tname : 'start_date',\r\n");
      out.write("\t\t\t\t\tdefaultvalue : Ext.Date.format(new Date(Ext.Date.now()), 'Y/m/d H:i:s'),\r\n");
      out.write("\t\t\t\t\tformat : 'Y/m/d H:i:s',\r\n");
      out.write("\t\t\t\t\tx : 480,\r\n");
      out.write("\t\t\t\t\ty : 10\r\n");
      out.write("\t\t\t\t}), Ext.create('DCI.Customer.DateField', {\r\n");
      out.write("\t\t\t\t\tfieldLabel : langs.end_date,\r\n");
      out.write("\t\t\t\t\twidth : 250,\r\n");
      out.write("\t\t\t\t\tname : 'end_date',\r\n");
      out.write("\t\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\t\tformat : 'Y/m/d H:i:s',\r\n");
      out.write("\t\t\t\t\tx : 720,\r\n");
      out.write("\t\t\t\t\ty : 10\r\n");
      out.write("\t\t\t\t}), connData, connsTextBox, openWinBtnConn, sqlData, sqlsTextBox, openWinBtnSql, sqleditor ],\r\n");
      out.write("\t\t\t\tcusValid : function(fn) {\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\tvar msg = me.items.get(10);\r\n");
      out.write("\t\t\t\t\t//var sql = me.items.get(8);\r\n");
      out.write("\t\t\t\t\t//var conn = me.items.get(5);\r\n");
      out.write("\t\t\t\t\tvar ok = true;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tif (msg.getValue() == null || msg.getValue().length == 0) {\r\n");
      out.write("\t\t\t\t\t\tmsg.activeErrorsTpl = sql.activeErrorsTpl;\r\n");
      out.write("\t\t\t\t\t\tok = ok && false;\r\n");
      out.write("\t\t\t\t\t\tmsg.markInvalid(langs.not_allow_blank);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t/* if (sql.getValue() == null || sql.getValue().length == 0) {\r\n");
      out.write("\t\t\t\t\t\tok = ok && false;\r\n");
      out.write("\t\t\t\t\t\tsql.markInvalid(langs.not_allow_blank);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tif (conn.getValue() == null || conn.getValue().length == 0) {\r\n");
      out.write("\t\t\t\t\t\tok = ok && false;\r\n");
      out.write("\t\t\t\t\t\tconn.markInvalid(langs.not_allow_blank);\r\n");
      out.write("\t\t\t\t\t} */\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tif (ok) {\r\n");
      out.write("\t\t\t\t\t\tfn();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tshowQueryWindow : function() {\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\tme.resetDataLoaded();\r\n");
      out.write("\t\t\t\t\tvar pageSize = 10;\r\n");
      out.write("\t\t\t\t\tvar initStore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\tfields : [ 'cols' ],\r\n");
      out.write("\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\t\turl : '../../Configs/MarqueeConfig.dsc',\r\n");
      out.write("\t\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\ttype : 'json'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\taction : \"initQuery\",\r\n");
      out.write("\t\t\t\t\t\t\t\tbtnid : 'headform'\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar gstore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\tfields : [ \"marquee_id\", \"marquee_type\", \"message\", \"start_date\", \"end_date\", \"conns\", \"sqls\", \"displaysqls\", \"displayconns\" ],\r\n");
      out.write("\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\t\turl : '../../Configs/MarqueeConfig.dsc',\r\n");
      out.write("\t\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\troot : 'items',\r\n");
      out.write("\t\t\t\t\t\t\t\ttotalProperty : 'total'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\taction : 'search',\r\n");
      out.write("\t\t\t\t\t\t\t\tpage : 1,\r\n");
      out.write("\t\t\t\t\t\t\t\tpagesize : pageSize,\r\n");
      out.write("\t\t\t\t\t\t\t\tfilter : ''\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\tpageSize : pageSize\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar gridColumns = [ {\r\n");
      out.write("\t\t\t\t\t\ttext : langs.sql_name,\r\n");
      out.write("\t\t\t\t\t\tdataIndex : 'displaysqls',\r\n");
      out.write("\t\t\t\t\t\twidth : 200\r\n");
      out.write("\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\ttext : langs.conns,\r\n");
      out.write("\t\t\t\t\t\tdataIndex : 'displayconns',\r\n");
      out.write("\t\t\t\t\t\twidth : 200\r\n");
      out.write("\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\ttext : langs.marquee_msg,\r\n");
      out.write("\t\t\t\t\t\tdataIndex : 'message',\r\n");
      out.write("\t\t\t\t\t\twidth : 200\r\n");
      out.write("\t\t\t\t\t} ];\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar openwin = Ext.create('DCI.Customer.QueryWindow', {\r\n");
      out.write("\t\t\t\t\t\theight : 335,\r\n");
      out.write("\t\t\t\t\t\twidth : 650,\r\n");
      out.write("\t\t\t\t\t\theadform : me,\r\n");
      out.write("\t\t\t\t\t\ttitle : langs.toolbar_query_title\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tinitStore.load(function(records) {\r\n");
      out.write("\t\t\t\t\t\topenwin.setInitObjects(records, gstore, gridColumns);\r\n");
      out.write("\t\t\t\t\t\tme.searchWin = openwin;\r\n");
      out.write("\t\t\t\t\t\tme.searchStore = gstore;\r\n");
      out.write("\t\t\t\t\t\topenwin.show();\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar headpanel = Ext.create('DCI.Customer.HeadPanel', {\r\n");
      out.write("\t\t\t\theight : 350,\r\n");
      out.write("\t\t\t\twidth : '100%',\r\n");
      out.write("\t\t\t\theadform : headform,\r\n");
      out.write("\t\t\t\tpostvalue : postvalue,\r\n");
      out.write("\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\tcanEdit : canEdit,\r\n");
      out.write("\t\t\t\tkeepAdd : false\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar main = Ext.create('DCI.Customer.SubPanel', {\r\n");
      out.write("\t\t\t\tid : 'MarqueeConfigMain',\r\n");
      out.write("\t\t\t\trenderTo : 'MarqueeConfigPage',\r\n");
      out.write("\t\t\t\tborder : 0,\r\n");
      out.write("\t\t\t\tbodyPadding : '0 5 5 5',\r\n");
      out.write("\t\t\t\tminWidth : 1020,\r\n");
      out.write("\t\t\t\tminHeight : 500,\r\n");
      out.write("\t\t\t\t//layout : 'border',\r\n");
      out.write("\t\t\t\twidthChangeControls : [ headpanel ],\r\n");
      out.write("\t\t\t\titems : [ headpanel ]\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t/* var initQueryStore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\tfields : [ 'connList', 'sqlList' ],\r\n");
      out.write("\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\t\turl : '../../Configs/MarqueeConfig.dsc',\r\n");
      out.write("\t\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\ttype : 'json'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\taction : 'init'\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tinitQueryStore.load(function(record) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t//console.log(canEdit);\r\n");
      out.write("\t\t\t\t\t\tif (record.length > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t//console.log(canEdit);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}); */\r\n");
      out.write("\r\n");
      out.write("\t\t\t//main.resize(Ext.get(\"MarqueeConfigPage\").getWidth(), Ext.get(\"MarqueeConfigPage\").getHeight());\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"MarqueeConfigPage\" class=\"page_div\"></div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_dcitag_005freqParam_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  dcitag:reqParam
    com.dci.jweb.DCITags.Request.getReqParameter _jspx_th_dcitag_005freqParam_005f0 = (new com.dci.jweb.DCITags.Request.getReqParameter());
    _jsp_instancemanager.newInstance(_jspx_th_dcitag_005freqParam_005f0);
    _jspx_th_dcitag_005freqParam_005f0.setJspContext(_jspx_page_context);
    // /FuncViews/Configs/MarqueeConfig.jsp(8,7) name = paramName type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_dcitag_005freqParam_005f0.setParamName("func_name");
    _jspx_th_dcitag_005freqParam_005f0.doTag();
    _jsp_instancemanager.destroyInstance(_jspx_th_dcitag_005freqParam_005f0);
    return false;
  }

  private boolean _jspx_meth_dcitag_005freqParam_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  dcitag:reqParam
    com.dci.jweb.DCITags.Request.getReqParameter _jspx_th_dcitag_005freqParam_005f1 = (new com.dci.jweb.DCITags.Request.getReqParameter());
    _jsp_instancemanager.newInstance(_jspx_th_dcitag_005freqParam_005f1);
    _jspx_th_dcitag_005freqParam_005f1.setJspContext(_jspx_page_context);
    // /FuncViews/Configs/MarqueeConfig.jsp(19,13) name = paramName type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_dcitag_005freqParam_005f1.setParamName("uid");
    _jspx_th_dcitag_005freqParam_005f1.doTag();
    _jsp_instancemanager.destroyInstance(_jspx_th_dcitag_005freqParam_005f1);
    return false;
  }

  private boolean _jspx_meth_dcitag_005freqParam_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  dcitag:reqParam
    com.dci.jweb.DCITags.Request.getReqParameter _jspx_th_dcitag_005freqParam_005f2 = (new com.dci.jweb.DCITags.Request.getReqParameter());
    _jsp_instancemanager.newInstance(_jspx_th_dcitag_005freqParam_005f2);
    _jspx_th_dcitag_005freqParam_005f2.setJspContext(_jspx_page_context);
    // /FuncViews/Configs/MarqueeConfig.jsp(25,52) name = paramName type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_dcitag_005freqParam_005f2.setParamName("canEdit");
    _jspx_th_dcitag_005freqParam_005f2.doTag();
    _jsp_instancemanager.destroyInstance(_jspx_th_dcitag_005freqParam_005f2);
    return false;
  }
}
