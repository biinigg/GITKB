/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2016-01-13 04:48:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Customer.Configs;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class CombineConfig02420302_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/Customer/Configs/./../../dcitag/dcitag.tld", Long.valueOf(1452650348276L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=9\">\r\n");
      out.write("<title>");
      if (_jspx_meth_dcitag_005freqParam_005f0(_jspx_page_context))
        return;
      out.write("</title>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" charset=\"UTF-8\">\r\n");
      out.write("\tExt.onReady(function() {\r\n");
      out.write("\t\tvar localKeys = [ \"no_conn_data\",\"conn_list\",\"ckb_id\",\"ckb_name\",\"head_kbid\",\"body_kbid\",\"combinecolumn\",\"no_kanban_data\",\"no_choose_column\",\"col_type_desc\",\"no_duo_kbcombo\",\"no_duo_col\",\"create_link\",\"create_link_fail\",\"data_never_load\"\r\n");
      out.write("\t\t          \t\t,\"save_msg\", \"delete_msg\", \"delete_fail\", \"delete_success\", \"delete_result_title\", \"delete_confirm_title\", \"delete_confirm_msg\", \"delete_fail\",\r\n");
      out.write("\t\t\t\t\"save_fail\", \"save_success\", \"save_result_title\", \"save_fail\", \"role_id\", \"role_name\", \"role_desc\", \"system_build\", \"visible\", \"enable\", \"disable\", \"func_id\",\r\n");
      out.write("\t\t\t\t\"conn_id\", \"can_edit\", \"group_role_edit\", \"toolbar_query_title\", \"system_def_can_not_edit\", \"confirm_title\", \"data_lose_warning\", \"role_exist\", \"load_def_format\",\r\n");
      out.write("\t\t\t\t\"load_def_fail\", \"load_def_success\", \"load_def_result_title\", \"load_def_confirm_title\", \"load_def_confirm_msg\", \"cus_format\", \"copy_fail\", \"input_role_name\",\r\n");
      out.write("\t\t\t\t\"todo_query\", \"just_use_in_view\", \"copy_role_confirm\", \"copy_success\", \"info_msg_title\", \"copy\" ];\r\n");
      out.write("\t\tvar keys = localKeys.concat(globeKeys);\r\n");
      out.write("\t\tvar uid = '");
      if (_jspx_meth_dcitag_005freqParam_005f1(_jspx_page_context))
        return;
      out.write("';\r\n");
      out.write("\t\tthis.dcistore.setMultiLangKeys(keys);\r\n");
      out.write("\t\tthis.dcistore.setUid(uid);\r\n");
      out.write("\t\tthis.dcistore.load(function(records) {\r\n");
      out.write("\t\t\tif (records != null && records.length == 1) {\r\n");
      out.write("\t\t\t\tvar langs = buildMultiLangObjct(keys, records[0].get('langValues'));\r\n");
      out.write("\t\t\t\tshowPage(records[0].get('dcitagValue'), langs, '");
      if (_jspx_meth_dcitag_005freqParam_005f2(_jspx_page_context))
        return;
      out.write("', uid);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tfunction showPage(postvalue, langs, recvAuth, uid) {\r\n");
      out.write("\t\t\tvar canEdit = recvAuth == \"1\";\r\n");
      out.write("\t\t\tvar connid_combo = Ext.create('DCI.Customer.ComboBox', {\r\n");
      out.write("\t\t\t\tfieldLabel : langs.conn_list,\r\n");
      out.write("\t\t\t\ttriggerAction: 'all',\r\n");
      out.write("\t\t\t\tname : 'conn_list',\r\n");
      out.write("\t\t\t\temptyText:langs.no_conn_data,\r\n");
      out.write("\t\t\t\tx : 0,\r\n");
      out.write("\t\t\t\ty : 65\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar headid_combo = Ext.create('DCI.Customer.ComboBox', {\r\n");
      out.write("\t\t\t\tfieldLabel : langs.head_kbid,\r\n");
      out.write("\t\t\t\tname : 'head_id',\r\n");
      out.write("\t\t\t\ttriggerAction: 'all',\r\n");
      out.write("\t\t\t\temptyText:langs.no_kanban_data,\r\n");
      out.write("\t\t\t\tx : 250,\r\n");
      out.write("\t\t\t\ty : 65\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tvar bodyid_combo = Ext.create('DCI.Customer.ComboBox', {\r\n");
      out.write("\t\t\t\tfieldLabel : langs.body_kbid,\r\n");
      out.write("\t\t\t\tname : 'body_id',\r\n");
      out.write("\t\t\t\ttriggerAction: 'all',\r\n");
      out.write("\t\t\t\temptyText:langs.no_kanban_data,\r\n");
      out.write("\t\t\t\tx : 250,\r\n");
      out.write("\t\t\t\ty : 105\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tvar combineColumn_combo = Ext.create('DCI.Customer.ComboBox', {\r\n");
      out.write("\t\t\t\tfieldLabel : langs.combinecolumn,\r\n");
      out.write("\t\t\t\tname : 'combinecolumn',\r\n");
      out.write("\t\t\t\ttriggerAction: 'all',\r\n");
      out.write("\t\t\t\temptyText:langs.no_choose_column,\r\n");
      out.write("\t\t\t\tx : 500,\r\n");
      out.write("\t\t\t\ty : 65\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tconnid_combo.on(\"select\",function(combobox){\r\n");
      out.write("\t\t\t\tvar value=combobox.getValue();\r\n");
      out.write("\t\t\t\tvar kbStore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\tfields : [ 'kbdatas' ],\r\n");
      out.write("\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\turl : '../../Configs/CombineConfig.dsc',\r\n");
      out.write("\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\ttype : 'json'\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\taction : 'KBData',\r\n");
      out.write("\t\t\t\t\t\t\tconn_id:value\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tkbStore.load(function(record) {\r\n");
      out.write("\t\t\t\t\tif (record.length > 0) {\r\n");
      out.write("\t\t\t\t\t\theadid_combo.reset();\r\n");
      out.write("\t\t\t\t\t\tbodyid_combo.reset();\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\theadid_combo.getStore().loadData(record[0].get(\"kbdatas\"));\r\n");
      out.write("\t\t\t\t\t\theadid_combo.listConfig = {\r\n");
      out.write("\t\t\t\t\t\t\t\tminWidth : headid_combo.getWidth() - headid_combo.getLabelWidth()\r\n");
      out.write("\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t\tbodyid_combo.getStore().loadData(record[0].get(\"kbdatas\"));\r\n");
      out.write("\t\t\t\t\t\tbodyid_combo.listConfig = {\r\n");
      out.write("\t\t\t\t\t\t\t\tminWidth : bodyid_combo.getWidth() - bodyid_combo.getLabelWidth()\r\n");
      out.write("\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t\tcombineColumn_combo.reset();\r\n");
      out.write("\t\t\t\t\t\tcombineColumn_combo.getStore().loadData(\"\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tthis.reset();\r\n");
      out.write("\t\t\t\tcombobox.setValue(value);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\theadid_combo.on(\"select\",function(combobox){\r\n");
      out.write("\t\t\t\tvar hvalue=combobox.getValue();\r\n");
      out.write("\t\t\t\tvar bvalue=bodyid_combo.getValue();\r\n");
      out.write("\t\t\t\tif(hvalue!=bvalue){\r\n");
      out.write("\t\t\t\tif((hvalue!=undefined&&hvalue!=\"\")&&(bvalue!=undefined&&bvalue!=\"\")){\r\n");
      out.write("\t\t\t\t\tvar colStore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\tfields : [ 'columndatas' ],\r\n");
      out.write("\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\t\turl : '../../Configs/CombineConfig.dsc',\r\n");
      out.write("\t\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\ttype : 'json'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\taction : 'colData',\r\n");
      out.write("\t\t\t\t\t\t\t\thead_id:hvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\tbody_id:bvalue,\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\tcolStore.load(function(record) {\r\n");
      out.write("\t\t\t\t\t\tif (record.length > 0) {\r\n");
      out.write("\t\t\t\t\t\t\tif(record[0].get(\"columndatas\")==\"\"){\r\n");
      out.write("\t\t\t\t\t\t\t\theadid_combo.reset();\r\n");
      out.write("\t\t\t\t\t\t\t\tExt.Msg.alert(langs.info_msg_title, langs.no_duo_col);\r\n");
      out.write("\t\t\t\t\t\t\t\tcombineColumn_combo.reset();\r\n");
      out.write("\t\t\t\t\t\t\t\tcombineColumn_combo.getStore().loadData(record[0].get(\"columndatas\"));\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\telse{\r\n");
      out.write("\t\t\t\t\t\t\t\tcombineColumn_combo.reset();\r\n");
      out.write("\t\t\t\t\t\t\t\tcombineColumn_combo.getStore().loadData(record[0].get(\"columndatas\"));\r\n");
      out.write("\t\t\t\t\t\t\t\tcombineColumn_combo.listConfig = {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tminWidth : combineColumn_combo.getWidth() - combineColumn_combo.getLabelWidth()\r\n");
      out.write("\t\t\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tthis.reset();\r\n");
      out.write("\t\t\t\tcombobox.setValue(hvalue);\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tExt.Msg.alert(langs.info_msg_title, langs.no_duo_kbcombo);\r\n");
      out.write("\t\t\t\tthis.reset();\r\n");
      out.write("\t\t\t\tcombineColumn_combo.reset();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tbodyid_combo.on(\"select\",function(combobox){\r\n");
      out.write("\t\t\t\tvar hvalue=headid_combo.getValue();\r\n");
      out.write("\t\t\t\tvar bvalue=combobox.getValue();\r\n");
      out.write("\t\t\t\tif(hvalue!=bvalue){\r\n");
      out.write("\t\t\t\t\tif((hvalue!=undefined&&hvalue!=\"\")&&(bvalue!=undefined&&bvalue!=\"\")){\r\n");
      out.write("\t\t\t\t\t\tvar colStore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\t\tfields : [ 'columndatas' ],\r\n");
      out.write("\t\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\t\t\turl : '../../Configs/CombineConfig.dsc',\r\n");
      out.write("\t\t\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttype : 'json'\r\n");
      out.write("\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\taction : 'colData',\r\n");
      out.write("\t\t\t\t\t\t\t\t\thead_id:hvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tbody_id:bvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\tcolStore.load(function(record) {\r\n");
      out.write("\t\t\t\t\t\t\tif (record.length > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif(record[0].get(\"columndatas\")!=\"\"){\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcombineColumn_combo.reset();\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcombineColumn_combo.getStore().loadData(record[0].get(\"columndatas\"));\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcombineColumn_combo.listConfig = {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tminWidth : combineColumn_combo.getWidth() - combineColumn_combo.getLabelWidth()\r\n");
      out.write("\t\t\t\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\t\t\tbodyid_combo.reset();\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcombineColumn_combo.reset();\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcombineColumn_combo.getStore().loadData(record[0].get(\"columndatas\"));\r\n");
      out.write("\t\t\t\t\t\t\t\t\tExt.Msg.alert(langs.info_msg_title, langs.no_duo_col);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tthis.reset();\r\n");
      out.write("\t\t\t\t\tcombobox.setValue(bvalue);\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\tExt.Msg.alert(langs.info_msg_title, langs.no_duo_kbcombo);\r\n");
      out.write("\t\t\t\t\tcombineColumn_combo.reset();\r\n");
      out.write("\t\t\t\t\tthis.reset();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar headform = Ext.create('DCI.Customer.HeadFormPanel', {\r\n");
      out.write("\t\t\t\theight : 100,\r\n");
      out.write("\t\t\t\turl : '../../Configs/CombineConfig.dsc',\r\n");
      out.write("\t\t\t\tlanguageObj : langs,\r\n");
      out.write("\t\t\t\titems : [ Ext.create('DCI.Customer.TextField', {\r\n");
      out.write("\t\t\t\t\tfieldLabel : langs.ckb_id,\r\n");
      out.write("\t\t\t\t\temptyText : '',\r\n");
      out.write("\t\t\t\t\tname : 'ckb_id',\r\n");
      out.write("\t\t\t\t\tallowBlank : false,\r\n");
      out.write("\t\t\t\t\tispk : true,\r\n");
      out.write("\t\t\t\t\tcanEdit : false,\r\n");
      out.write("\t\t\t\t\tdefaultvalue : langs.system_build,\r\n");
      out.write("\t\t\t\t\tx : 0,\r\n");
      out.write("\t\t\t\t\ty : 20\r\n");
      out.write("\t\t\t\t}), Ext.create('DCI.Customer.TextField', {\r\n");
      out.write("\t\t\t\t\tfieldLabel : langs.ckb_name,\r\n");
      out.write("\t\t\t\t\temptyText : '',\r\n");
      out.write("\t\t\t\t\tname : 'ckb_name',\r\n");
      out.write("\t\t\t\t\tallowBlank : true,\r\n");
      out.write("\t\t\t\t\tx : 250,\r\n");
      out.write("\t\t\t\t\ty : 20\r\n");
      out.write("\t\t\t\t}), connid_combo,headid_combo,bodyid_combo,combineColumn_combo,\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("                    xtype: 'label',\r\n");
      out.write("                    text: langs.col_type_desc,\r\n");
      out.write("                    x : 500,\r\n");
      out.write("\t\t\t\t\ty : 105,\r\n");
      out.write("\t\t\t\t\tstyle: {\r\n");
      out.write("\t\t\t\t\t             Color: 'red',\r\n");
      out.write("\t\t\t\t\t             Style: 'solid'\r\n");
      out.write("\t\t\t\t\t          }\r\n");
      out.write("                }],\r\n");
      out.write("\t\t\t\tshowQueryWindow : function() {\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\tme.initQueryWindow();\r\n");
      out.write("\t\t\t\t\tvar pageSize = 10;\r\n");
      out.write("\t\t\t\t\tvar initStore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\tfields : [ 'cols' ],\r\n");
      out.write("\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\t\turl : '../../Configs/CombineConfig.dsc',\r\n");
      out.write("\t\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\ttype : 'json'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\tuid : uid\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar gstore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\tfields : [ 'ckb_id', 'ckb_name', 'head_id', 'body_id','combinecolumn','conn_list' ],\r\n");
      out.write("\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\t\turl : '../../Configs/CombineConfig.dsc',\r\n");
      out.write("\t\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\troot : 'items',\r\n");
      out.write("\t\t\t\t\t\t\t\ttotalProperty : 'total'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\taction : 'search',\r\n");
      out.write("\t\t\t\t\t\t\t\tpage : 1,\r\n");
      out.write("\t\t\t\t\t\t\t\tpagesize : pageSize,\r\n");
      out.write("\t\t\t\t\t\t\t\tfilter : ''\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\tpageSize : pageSize\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar gridColumns = [ {\r\n");
      out.write("\t\t\t\t\t\ttext : langs.ckb_id,\r\n");
      out.write("\t\t\t\t\t\tdataIndex : 'ckb_id',\r\n");
      out.write("\t\t\t\t\t\twidth : 200\r\n");
      out.write("\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\ttext : langs.ckb_name,\r\n");
      out.write("\t\t\t\t\t\tdataIndex : 'ckb_name',\r\n");
      out.write("\t\t\t\t\t\twidth : 200\r\n");
      out.write("\t\t\t\t\t} ];\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar openwin = Ext.create('DCI.Customer.QueryWindow', {\r\n");
      out.write("\t\t\t\t\t\theight : 335,\r\n");
      out.write("\t\t\t\t\t\twidth : 450,\r\n");
      out.write("\t\t\t\t\t\theadform : me,\r\n");
      out.write("\t\t\t\t\t\ttitle : langs.toolbar_query_title,\r\n");
      out.write("\t\t\t\t\t\tloadHeadData : function(record) {\r\n");
      out.write("\t\t\t\t\t\t\tvar headPanelReloadStore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\t\t\tfields : [ 'conndatas','kbdatas','columndatas' ],\r\n");
      out.write("\t\t\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\t\t\t\turl : '../../Configs/CombineConfig.dsc',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttype : 'json'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\taction : 'loadHeadPanel',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tdatas: Ext.encode(record.data)\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\theadPanelReloadStore.load(function(record2) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (record2.length > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tconnid_combo.defaultvalue=record.get(\"conn_list\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\theadid_combo.defaultvalue=record.get(\"head_id\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tbodyid_combo.defaultvalue=record.get(\"body_id\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcombineColumn_combo.defaultvalue=record.get(\"combinecolumn\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\tconnid_combo.getStore().loadData(record2[0].get(\"conndatas\"));\r\n");
      out.write("\t\t\t\t\t\t\t\t\tconnid_combo.loadDefault();\r\n");
      out.write("\t\t\t\t\t\t\t\t\tconnid_combo.listConfig = {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tminWidth : connid_combo.getWidth() - connid_combo.getLabelWidth()\r\n");
      out.write("\t\t\t\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t\t\t\t\theadid_combo.getStore().loadData(record2[0].get(\"kbdatas\"));\r\n");
      out.write("\t\t\t\t\t\t\t\t\theadid_combo.loadDefault();\r\n");
      out.write("\t\t\t\t\t\t\t\t\theadid_combo.listConfig = {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tminWidth : headid_combo.getWidth() - headid_combo.getLabelWidth()\r\n");
      out.write("\t\t\t\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t\t\t\t\tbodyid_combo.getStore().loadData(record2[0].get(\"kbdatas\"));\r\n");
      out.write("\t\t\t\t\t\t\t\t\tbodyid_combo.loadDefault();\r\n");
      out.write("\t\t\t\t\t\t\t\t\tbodyid_combo.listConfig = {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tminWidth : bodyid_combo.getWidth() - bodyid_combo.getLabelWidth()\r\n");
      out.write("\t\t\t\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcombineColumn_combo.getStore().loadData(record2[0].get(\"columndatas\"));\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcombineColumn_combo.loadDefault();\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcombineColumn_combo.listConfig = {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tminWidth : combineColumn_combo.getWidth() - combineColumn_combo.getLabelWidth()\r\n");
      out.write("\t\t\t\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t\t\t\t\t/*connid_combo.setValue(record.get(\"conn_list\"));\r\n");
      out.write("\t\t\t\t\t\t\t\t\theadid_combo.setValue(record.get(\"head_id\"));\r\n");
      out.write("\t\t\t\t\t\t\t\t\tbodyid_combo.setValue(record.get(\"body_id\"));\r\n");
      out.write("\t\t\t\t\t\t\t\t\tcombineColumn_combo.setValue(record.get(\"combinecolumn\"));*/\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\tthis.headform.loadRecord(record);\r\n");
      out.write("\t\t\t\t\t\t\tthis.headform.setDataLoaded(true);\r\n");
      out.write("\t\t\t\t\t\t\t/*if (bodyStore != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (bodyStore.getProxy().extraParams.hasOwnProperty('keys')) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tbodyStore.getProxy().extraParams['keys'] = record.get(\"ckb_id\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tbodyStore.load();\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\tif (bodypanel != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar obj = new Object();\r\n");
      out.write("\t\t\t\t\t\t\t\tobj[\"ckb_id\"] = record.get(\"ckb_id\");\r\n");
      out.write("\t\t\t\t\t\t\t\tbodypanel.headKeys = obj;\r\n");
      out.write("\t\t\t\t\t\t\t\tbodypanel.dataloaded(this.headform.dataloaded);\r\n");
      out.write("\t\t\t\t\t\t\t}*/\r\n");
      out.write("\t\t\t\t\t\t\tthis.close();\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tinitStore.load(function(records) {\r\n");
      out.write("\t\t\t\t\t\topenwin.setInitObjects(records, gstore, gridColumns);\r\n");
      out.write("\t\t\t\t\t\tme.searchWin = openwin;\r\n");
      out.write("\t\t\t\t\t\tme.searchStore = gstore;\r\n");
      out.write("\t\t\t\t\t\topenwin.show();\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar headpanel = Ext.create('DCI.Customer.HeadPanel', {\r\n");
      out.write("\t\t\t\theight : 300,\r\n");
      out.write("\t\t\t\theadform : headform,\r\n");
      out.write("\t\t\t\tpostvalue : postvalue,\r\n");
      out.write("\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\tcanEdit : canEdit,\r\n");
      out.write("\t\t\t\tbodyPadding : '0 0 10 0',\r\n");
      out.write("\t\t\t\tkeepAdd : false\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\theadpanel.setCusButtons([\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\tcls : 'kblink-toolbar',\r\n");
      out.write("\t\t\t\t\ttooltip : langs.create_link,\r\n");
      out.write("\t\t\t\t\tx : 215,\r\n");
      out.write("\t\t\t\t\ty : 3,\r\n");
      out.write("\t\t\t\t\twidth : 30,\r\n");
      out.write("\t\t\t\t\theight : 30,\r\n");
      out.write("\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\tvar bform = this.up('panel').bindform;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\tif (bform.dataloaded) {\r\n");
      out.write("\t\t\t\t\t\t\ttest=bform.items;\r\n");
      out.write("\t\t\t\t\t\t\tvar funcid = bform.items.get(0).getValue();\r\n");
      out.write("\t\t\t\t\t\t\tvar connid = bform.items.get(2).getRawValue().split('-')[0];\r\n");
      out.write("\t\t\t\t\t\t\tvar connname = bform.items.get(2).getRawValue().split('-')[1];\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tvar subconnstore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\t\t\tfields : [ 'label', 'value' ],\r\n");
      out.write("\t\t\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttype : 'memory',\r\n");
      out.write("\t\t\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttype : 'json'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tvar subuserstore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\t\t\tfields : [ 'label', 'value' ],\r\n");
      out.write("\t\t\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\t\t\t\turl : '../../Configs/CombineConfig.dsc',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\troot : 'items'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\taction : 'linkusers'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tif (connid != null && connname !=null) {\r\n");
      out.write("\t\t\t\t\t\t\t\tsubconnstore.removeAll();\r\n");
      out.write("\t\t\t\t\t\t\t\t//for ( var i = 0; i < conngstore.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tsubconnstore.add({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tlabel : connname,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvalue : connid\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t//}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tvar subconncombo = Ext.create('DCI.Customer.ComboBox', {\r\n");
      out.write("\t\t\t\t\t\t\t\tfieldLabel : langs.conn_list,\r\n");
      out.write("\t\t\t\t\t\t\t\tlabelWidth : 60,\r\n");
      out.write("\t\t\t\t\t\t\t\tname : 'conns',\r\n");
      out.write("\t\t\t\t\t\t\t\tstore : subconnstore,\r\n");
      out.write("\t\t\t\t\t\t\t\twidth : 250,\r\n");
      out.write("\t\t\t\t\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\t\t\t\t\tx : 5,\r\n");
      out.write("\t\t\t\t\t\t\t\ty : 10\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tvar subusercombo = Ext.create('DCI.Customer.ComboBox', {\r\n");
      out.write("\t\t\t\t\t\t\t\tfieldLabel : langs.user_id,\r\n");
      out.write("\t\t\t\t\t\t\t\tlabelWidth : 40,\r\n");
      out.write("\t\t\t\t\t\t\t\tname : 'users',\r\n");
      out.write("\t\t\t\t\t\t\t\tstore : subuserstore,\r\n");
      out.write("\t\t\t\t\t\t\t\twidth : 250,\r\n");
      out.write("\t\t\t\t\t\t\t\tdefaultvalue : '',\r\n");
      out.write("\t\t\t\t\t\t\t\tx : 260,\r\n");
      out.write("\t\t\t\t\t\t\t\ty : 10\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tvar linktoolpanel = Ext.create('Ext.panel.Panel', {\r\n");
      out.write("\t\t\t\t\t\t\t\tregion : 'north',\r\n");
      out.write("\t\t\t\t\t\t\t\tlayout : 'absolute',\r\n");
      out.write("\t\t\t\t\t\t\t\tborder : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\ttitle : \"\",\r\n");
      out.write("\t\t\t\t\t\t\t\theight : 40,\r\n");
      out.write("\t\t\t\t\t\t\t\titems : [ subconncombo, subusercombo, {\r\n");
      out.write("\t\t\t\t\t\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttext : langs.create_link,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tx : 515,\r\n");
      out.write("\t\t\t\t\t\t\t\t\ty : 10,\r\n");
      out.write("\t\t\t\t\t\t\t\t\twidth : 60,\r\n");
      out.write("\t\t\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tif (subconncombo.getValue() == null || subconncombo.getValue().length == 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tsubconncombo.markInvalid(langs.not_allow_blank);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tExt.Ajax.request({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tmethod : 'POST',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\turl : '../../Configs/CombineConfig.dsc',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tparams : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\taction : 'createLink',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tfunc_id : funcid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tconn_id : subconncombo.getValue(),\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tlinkuid : subusercombo.getValue()\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tsuccess : function(response) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tif (response.responseText.indexOf(\"@dcifiltererrtag@$\") != -1) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = response.responseText.split('$');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result.length >= 2) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar resultdata = Ext.JSON.decode(result[1]);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langs.errmsg, resultdata.msg, function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tiserror = true;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twindow.location = resultdata.result;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = Ext.JSON.decode(response.responseText);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result.success == true) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (linkfield != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlinkfield.setValue(result.linkvalue);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langs.errmsg, langs.create_link_fail);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tfailure : function(f, action) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langs.errmsg, langs.create_link_fail + \" :</br>\" + action.result.errorMessage);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tvar linkfield = Ext.create('Ext.form.field.TextArea', {\r\n");
      out.write("\t\t\t\t\t\t\t\tgrow : true,\r\n");
      out.write("\t\t\t\t\t\t\t\tname : '',\r\n");
      out.write("\t\t\t\t\t\t\t\tfieldLabel : '',\r\n");
      out.write("\t\t\t\t\t\t\t\treadOnly : true\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tvar linkpanel = Ext.create('Ext.panel.Panel', {\r\n");
      out.write("\t\t\t\t\t\t\t\tregion : 'center',\r\n");
      out.write("\t\t\t\t\t\t\t\tlayout : 'fit',\r\n");
      out.write("\t\t\t\t\t\t\t\tborder : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\ttitle : \"\",\r\n");
      out.write("\t\t\t\t\t\t\t\titems : [ linkfield ]\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tvar linkwin = Ext.create('Ext.window.Window', {\r\n");
      out.write("\t\t\t\t\t\t\t\tlayout : 'border',\r\n");
      out.write("\t\t\t\t\t\t\t\ttitle : langs.create_link,\r\n");
      out.write("\t\t\t\t\t\t\t\tcloseAction : 'hide',\r\n");
      out.write("\t\t\t\t\t\t\t\theight : 300,\r\n");
      out.write("\t\t\t\t\t\t\t\twidth : 600,\r\n");
      out.write("\t\t\t\t\t\t\t\tminHeight : 300,\r\n");
      out.write("\t\t\t\t\t\t\t\tminWidth : 600,\r\n");
      out.write("\t\t\t\t\t\t\t\tmodal : true,\r\n");
      out.write("\t\t\t\t\t\t\t\tplain : true,\r\n");
      out.write("\t\t\t\t\t\t\t\titems : [ linktoolpanel, linkpanel ]\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tsubuserstore.load(function(record) {\r\n");
      out.write("\t\t\t\t\t\t\t\tsubusercombo.loadDefault();\r\n");
      out.write("\t\t\t\t\t\t\t\tsubconncombo.loadDefault();\r\n");
      out.write("\t\t\t\t\t\t\t\tlinkwin.show();\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tExt.Msg.alert(langs.errmsg, langs.data_never_load);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t]);\r\n");
      out.write("/*\r\n");
      out.write("\t\t\theadpanel.setCusButtons([ {\r\n");
      out.write("\t\t\t\txtype : 'button',\r\n");
      out.write("\t\t\t\tcls : 'copybutton',\r\n");
      out.write("\t\t\t\ttooltip : langs.copy,\r\n");
      out.write("\t\t\t\tx : 215,\r\n");
      out.write("\t\t\t\ty : 3,\r\n");
      out.write("\t\t\t\twidth : 30,\r\n");
      out.write("\t\t\t\theight : 30,\r\n");
      out.write("\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\tvar bform = this.up('panel').bindform;\r\n");
      out.write("\t\t\t\t\tvar pvalue = this.up('panel').postvalue;\r\n");
      out.write("\t\t\t\t\tvar langobj = bform.languageObj;\r\n");
      out.write("\t\t\t\t\tif (bform != null) {\r\n");
      out.write("\t\t\t\t\t\tif (bform.getCurrMode() == PageMode.View) {\r\n");
      out.write("\t\t\t\t\t\t\tif (bform.dataloaded) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar pageSize = 10;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\tvar gstore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfields : [ 'ckb_id', 'ckb_name', 'head_id', 'body_id', 'combinecolumn','conn_list' ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\turl : '../../Configs/CombineConfig.dsc',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\troot : 'items',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttotalProperty : 'total'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\taction : 'search',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tpage : 1,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tpagesize : pageSize,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tfilter : ''\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\tpageSize : pageSize\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\tvar roleid = bform.items.get(0).getValue();\r\n");
      out.write("\t\t\t\t\t\t\t\tExt.MessageBox.confirm(langobj.confirm_title, langobj.copy_role_confirm, function(btn) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (btn == 'yes') {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tExt.MessageBox.show({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttitle : langobj.input_role_name,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tmsg : langobj.input_role_name,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\twidth : 300,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbuttons : Ext.MessageBox.OKCANCEL,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tmultiline : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tfn : function(btn, text) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tif (btn == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tExt.Ajax.request({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tmethod : 'POST',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\turl : '../../Configs/CombineConfig.dsc',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tparams : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDCITag : pvalue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taction : 'copyrole',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trole_id : roleid,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trole_name : text\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuccess : function(a) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = Ext.JSON.decode(a.responseText);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result.success) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (gstore != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (gstore.getProxy().extraParams.hasOwnProperty('filter')) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgstore.getProxy().extraParams['filter'] = \" and role_id = '\" + result.msg + \"'\";\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgstore.load(function(records) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talert('gstore.load');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (records != null && records.length > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbform.loadRecord(records[0]);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbform.setDataLoaded(true);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (bodyStore != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (bodyStore.getProxy().extraParams.hasOwnProperty('keys')) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbodyStore.getProxy().extraParams['keys'] = result.msg;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbodyStore.load();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (bodypanel != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar obj = new Object();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tobj[\"role_id\"] = result.msg;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbodypanel.headKeys = obj;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbodypanel.dataloaded(bform.dataloaded);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langobj.info_msg_title, langobj.copy_success);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langobj.errmsg, langobj.copy_fail);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langobj.errmsg, langobj.copy_fail + \"</br>\" + result.msg);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tfailure : function(f, action) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langobj.errmsg, langobj.system_error);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tExt.Msg.alert(langobj.errmsg, langobj.todo_query);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tExt.Msg.alert(langobj.errmsg, langobj.just_use_in_view);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t} ]);\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar bodypanel = Ext.create('DCI.Customer.BodyGridPanel', {\r\n");
      out.write("\t\t\t\ttitle : langs.group_role_edit,\r\n");
      out.write("\t\t\t\tlanguageObj : langs,\r\n");
      out.write("\t\t\t\tgridid : 'CombineConfig_G01',\r\n");
      out.write("\t\t\t\tactionurl : '../../Configs/CombineConfig.dsc',\r\n");
      out.write("\t\t\t\tpostvalue : postvalue,\r\n");
      out.write("\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\theadform : headform,\r\n");
      out.write("\t\t\t\tkeyfields : [ 'conn_id', 'role_id', 'func_id' ],\r\n");
      out.write("\t\t\t\tcanEdit : canEdit,\r\n");
      out.write("\t\t\t\taddNewRow : function() {\r\n");
      out.write("\t\t\t\t\tvar grid = this.items.get(1);\r\n");
      out.write("\t\t\t\t\tvar gridStore = grid.getStore();\r\n");
      out.write("\t\t\t\t\tif (gridStore != null) {\r\n");
      out.write("\t\t\t\t\t\tgridStore.add({\r\n");
      out.write("\t\t\t\t\t\t\tconn_id : '',\r\n");
      out.write("\t\t\t\t\t\t\trole_id : this.headKeys.role_id,\r\n");
      out.write("\t\t\t\t\t\t\tfunc_id : '',\r\n");
      out.write("\t\t\t\t\t\t\tfunc_package : '',\r\n");
      out.write("\t\t\t\t\t\t\tcan_edit : false,\r\n");
      out.write("\t\t\t\t\t\t\tmoditag : 1,\r\n");
      out.write("\t\t\t\t\t\t\tmoditp : 'add'\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tgrid.getView().select(gridStore.getCount() - 1);\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tsetNewCondi : function() {\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\tvar grid = me.getGrid();\r\n");
      out.write("\t\t\t\t\tvar store = grid.getStore();\r\n");
      out.write("\t\t\t\t\tvar head = me.headform;\r\n");
      out.write("\t\t\t\t\tif (store != null) {\r\n");
      out.write("\t\t\t\t\t\tif (store.getProxy().extraParams.hasOwnProperty('keys')) {\r\n");
      out.write("\t\t\t\t\t\t\tstore.getProxy().extraParams['keys'] = head.items.get(0).getValue();\r\n");
      out.write("\t\t\t\t\t\t\tvar obj = new Object();\r\n");
      out.write("\t\t\t\t\t\t\tobj[\"role_id\"] = head.items.get(0).getValue();\r\n");
      out.write("\t\t\t\t\t\t\tme.headKeys = obj;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar conn_Combo = Ext.create('DCI.Customer.ComboBox', {\r\n");
      out.write("\t\t\t\tlabelWidth : 0\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar func_Combo = Ext.create('DCI.Customer.ComboBox', {\r\n");
      out.write("\t\t\t\tlabelWidth : 0,\r\n");
      out.write("\t\t\t\tstore : {\r\n");
      out.write("\t\t\t\t\tfields : [ 'label', 'value', 'package' ],\r\n");
      out.write("\t\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\t\ttype : 'memory',\r\n");
      out.write("\t\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\t\ttype : 'json'\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\tchange : function(comp, newValue, oldValue, eOpts) {\r\n");
      out.write("\t\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\t\tvar store = me.getStore();\r\n");
      out.write("\t\t\t\t\t\tvar gridStore = me.up().up().getStore();\r\n");
      out.write("\t\t\t\t\t\tfor ( var i = 0; i < store.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\tif (store.getAt(i).get(\"value\") == newValue) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (gridStore != null) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar ridx = gridStore.getCount() - 1;\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (ridx < 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tridx = 0;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (store.getAt(i).get(\"package\") == \"EKB\") {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tgridStore.getAt(ridx).set(\"can_edit\", false);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\tgridStore.getAt(ridx).set(\"func_package\", store.getAt(i).get(\"package\"));\r\n");
      out.write("\t\t\t\t\t\t\t\t\tgridStore.getAt(ridx).commit();\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tresize : function(combo, width, height, oldWidth, oldHeight, eOpts) {\r\n");
      out.write("\t\t\t\t\t\tcombo.listConfig = {\r\n");
      out.write("\t\t\t\t\t\t\tminWidth : width - combo.labelWidth\r\n");
      out.write("\t\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar bodyColumns = [ {\r\n");
      out.write("\t\t\t\txtype : 'rownumberer',\r\n");
      out.write("\t\t\t\tcolid : 'colrownum',\r\n");
      out.write("\t\t\t\twidth : 40,\r\n");
      out.write("\t\t\t\tsortable : false,\r\n");
      out.write("\t\t\t\tlocked : true\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\ttext : langs.conn_id,\r\n");
      out.write("\t\t\t\tdataIndex : 'conn_id',\r\n");
      out.write("\t\t\t\tcolid : 'colconn_id',\r\n");
      out.write("\t\t\t\twidth : 200,\r\n");
      out.write("\t\t\t\teditor : conn_Combo,\r\n");
      out.write("\t\t\t\trenderer : function(value) {\r\n");
      out.write("\t\t\t\t\treturn getComboLabel(conn_Combo, value);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\ttext : langs.func_id,\r\n");
      out.write("\t\t\t\tdataIndex : 'func_id',\r\n");
      out.write("\t\t\t\tcolid : 'colfunc_id',\r\n");
      out.write("\t\t\t\twidth : 200,\r\n");
      out.write("\t\t\t\teditor : func_Combo,\r\n");
      out.write("\t\t\t\trenderer : function(value) {\r\n");
      out.write("\t\t\t\t\treturn getComboLabel(func_Combo, value);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}, {\r\n");
      out.write("\t\t\t\txtype : 'dcicheckcolumn',\r\n");
      out.write("\t\t\t\ttext : langs.can_edit,\r\n");
      out.write("\t\t\t\tdataIndex : 'can_edit',\r\n");
      out.write("\t\t\t\tcolid : 'colcan_edit',\r\n");
      out.write("\t\t\t\tcanEditControl : function(col, rowIndex) {\r\n");
      out.write("\t\t\t\t\tvar me = this;\r\n");
      out.write("\t\t\t\t\tvar gridStore = me.up().up().getStore();\r\n");
      out.write("\t\t\t\t\tif (gridStore == null) {\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\treturn gridStore.getAt(rowIndex).get(\"func_package\") != \"EKB\";\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t} ];\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar bodyStore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\tfields : [ 'role_id', 'func_id', 'conn_id', 'func_package', 'can_edit', 'moditag', 'moditp' ],\r\n");
      out.write("\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\turl : '../../Configs/CombineConfig.dsc',\r\n");
      out.write("\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\troot : 'items'\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\taction : 'bodyData',\r\n");
      out.write("\t\t\t\t\t\tkeys : ''\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tlisteners : {\r\n");
      out.write("\t\t\t\t\tupdate : function(store, record, operation, eOpts) {\r\n");
      out.write("\t\t\t\t\t\tif (record.data.moditp == 'add') {\r\n");
      out.write("\t\t\t\t\t\t\tfor ( var i = 0; i < store.getCount(); i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (store.getAt(i).id != record.id) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (record.data.conn_id == store.getAt(i).get(\"conn_id\") && record.data.func_id == store.getAt(i).get(\"func_id\")) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tExt.Msg.alert(langs.errmsg, langs.role_exist, function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstore.remove(record);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});*/\r\n");
      out.write("\r\n");
      out.write("\t\t\t//bodypanel.initBody(bodyStore, bodyColumns);\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar main = Ext.create('DCI.Customer.SubPanel', {\r\n");
      out.write("\t\t\t\tid : 'CombineConfigMain',\r\n");
      out.write("\t\t\t\trenderTo : 'CombineConfigPage',\r\n");
      out.write("\t\t\t\tborder : 0,\r\n");
      out.write("\t\t\t\t//pagetype : 'kanban',\r\n");
      out.write("\t\t\t\tbodyPadding : '0 5 5 5',\r\n");
      out.write("\t\t\t\tlayout : 'border',\r\n");
      out.write("\t\t\t\twidthChangeControls : [ headpanel ],\r\n");
      out.write("\t\t\t\titems : [ headpanel ]\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar initQueryStore = Ext.create('Ext.data.Store', {\r\n");
      out.write("\t\t\t\tautoLoad : false,\r\n");
      out.write("\t\t\t\tfields : [ 'conndatas','kbdatas','columndatas' ],\r\n");
      out.write("\t\t\t\tproxy : {\r\n");
      out.write("\t\t\t\t\ttype : 'ajax',\r\n");
      out.write("\t\t\t\t\turl : '../../Configs/CombineConfig.dsc',\r\n");
      out.write("\t\t\t\t\tactionMethods : {\r\n");
      out.write("\t\t\t\t\t\tread : 'POST'\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\treader : {\r\n");
      out.write("\t\t\t\t\t\ttype : 'json'\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\textraParams : {\r\n");
      out.write("\t\t\t\t\t\tDCITag : postvalue,\r\n");
      out.write("\t\t\t\t\t\tuid : uid,\r\n");
      out.write("\t\t\t\t\t\taction : 'conn'\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tinitQueryStore.load(function(record) {\r\n");
      out.write("\t\t\t\tif (record.length > 0) {\r\n");
      out.write("\t\t\t\t\tconnid_combo.getStore().loadData(record[0].get(\"conndatas\"));//\r\n");
      out.write("\t\t\t\t\tconnid_combo.defaultvalue=\"OOXX\";\r\n");
      out.write("\t\t\t\t\theadid_combo.defaultvalue=\"OOXX\";\r\n");
      out.write("\t\t\t\t\tbodyid_combo.defaultvalue=\"OOXX\";\r\n");
      out.write("\t\t\t\t\tcombineColumn_combo.defaultvalue=\"OOXX\";\r\n");
      out.write("\t\t\t\t\tconnid_combo.loadDefault();\r\n");
      out.write("\t\t\t\t\tconnid_combo.listConfig = {\r\n");
      out.write("\t\t\t\t\t\tminWidth : connid_combo.getWidth() - connid_combo.getLabelWidth()\r\n");
      out.write("\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\theadid_combo.getStore().loadData(record[0].get(\"kbdatas\"));\r\n");
      out.write("\t\t\t\t\theadid_combo.loadDefault();\r\n");
      out.write("\t\t\t\t\theadid_combo.listConfig = {\r\n");
      out.write("\t\t\t\t\t\t\tminWidth : headid_combo.getWidth() - headid_combo.getLabelWidth()\r\n");
      out.write("\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\tbodyid_combo.getStore().loadData(record[0].get(\"kbdatas\"));\r\n");
      out.write("\t\t\t\t\tbodyid_combo.loadDefault();\r\n");
      out.write("\t\t\t\t\tbodyid_combo.listConfig = {\r\n");
      out.write("\t\t\t\t\t\t\tminWidth : bodyid_combo.getWidth() - bodyid_combo.getLabelWidth()\r\n");
      out.write("\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\tcombineColumn_combo.getStore().loadData(record[0].get(\"columndatas\"));\r\n");
      out.write("\t\t\t\t\tcombineColumn_combo.loadDefault();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\tmain.resize(Ext.get(\"CombineConfigPage\").getWidth(), Ext.get(\"CombineConfigPage\").getHeight());\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"CombineConfigPage\" class=\"page_div\"></div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_dcitag_005freqParam_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  dcitag:reqParam
    com.dci.jweb.DCITags.Request.getReqParameter _jspx_th_dcitag_005freqParam_005f0 = (new com.dci.jweb.DCITags.Request.getReqParameter());
    _jsp_instancemanager.newInstance(_jspx_th_dcitag_005freqParam_005f0);
    _jspx_th_dcitag_005freqParam_005f0.setJspContext(_jspx_page_context);
    // /Customer/Configs/CombineConfig02420302.jsp(8,7) name = paramName type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_dcitag_005freqParam_005f0.setParamName("func_name");
    _jspx_th_dcitag_005freqParam_005f0.doTag();
    _jsp_instancemanager.destroyInstance(_jspx_th_dcitag_005freqParam_005f0);
    return false;
  }

  private boolean _jspx_meth_dcitag_005freqParam_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  dcitag:reqParam
    com.dci.jweb.DCITags.Request.getReqParameter _jspx_th_dcitag_005freqParam_005f1 = (new com.dci.jweb.DCITags.Request.getReqParameter());
    _jsp_instancemanager.newInstance(_jspx_th_dcitag_005freqParam_005f1);
    _jspx_th_dcitag_005freqParam_005f1.setJspContext(_jspx_page_context);
    // /Customer/Configs/CombineConfig02420302.jsp(19,13) name = paramName type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_dcitag_005freqParam_005f1.setParamName("uid");
    _jspx_th_dcitag_005freqParam_005f1.doTag();
    _jsp_instancemanager.destroyInstance(_jspx_th_dcitag_005freqParam_005f1);
    return false;
  }

  private boolean _jspx_meth_dcitag_005freqParam_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  dcitag:reqParam
    com.dci.jweb.DCITags.Request.getReqParameter _jspx_th_dcitag_005freqParam_005f2 = (new com.dci.jweb.DCITags.Request.getReqParameter());
    _jsp_instancemanager.newInstance(_jspx_th_dcitag_005freqParam_005f2);
    _jspx_th_dcitag_005freqParam_005f2.setJspContext(_jspx_page_context);
    // /Customer/Configs/CombineConfig02420302.jsp(25,52) name = paramName type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_dcitag_005freqParam_005f2.setParamName("canEdit");
    _jspx_th_dcitag_005freqParam_005f2.doTag();
    _jsp_instancemanager.destroyInstance(_jspx_th_dcitag_005freqParam_005f2);
    return false;
  }
}
